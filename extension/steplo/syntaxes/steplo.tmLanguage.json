{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Steplo",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#typeAlias"
    },
    {
      "include": "#enums"
    },
    {
      "include": "#stackVars"
    },
    {
      "include": "#casts"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#punctuation"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#variants"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#booleans"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#variables"
    }
  ],
  "repository": {
    "keywords": {
      "patterns": [
        {
          "name": "keyword.steplo",
          "match": "\\b(main|func|ref|deref|if|else|while|slice|type|enum|match)\\b"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.steplo",
          "match": "(=|;|\\(|\\)|{|}|\\[|\\]|\\||,|\\.|:)"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator.steplo",
          "match": "(\\*|\\+|-|\\/|%|!|>|<|&|~)"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double.steplo",
          "match": "(\".*?\")"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.steplo",
          "match": "\\b([0-9]+)\\b"
        }
      ]
    },
    "booleans": {
      "patterns": [
        {
          "name": "constant.other.steplo",
          "match": "\\b(true|false)\\b"
        }
      ]
    },
    "variants": {
      "patterns": [
        {
          "match": "(\\b[a-zA-Z_][a-zA-Z0-9_]*)?\\s*(#)\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b",
          "captures": {
            "1": { "patterns": [{ "include": "#types" }] },
            "2": { "name": "punctuation.steplo" },
            "3": { "name": "constant.other.steplo" }
          }
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "match": "(&)\\s*",
          "captures": {
            "1": { "name": "keyword.operator.steplo" }
          }
        },
        {
          "name": "keyword.operator.steplo",
          "begin": "(\\[)",
          "beginCaptures": {
            "1": { "name": "keyword.operator.steplo" }
          },
          "patterns": [
            { "include": "#types" },
            { "include": "#numbers" },
            {
              "name": "keyword.operator.steplo",
              "match": ";"
            }
          ],
          "end": "(\\])",
          "endCaptures": {
            "1": { "name": "keyword.operator.steplo" }
          }
        },
        {
          "begin": "({)",
          "beginCaptures": {
            "1": { "name": "keyword.operator.steplo" }
          },
          "patterns": [
            {
              "begin": "(\\w+)\\s*(:)\\s*",
              "beginCaptures": {
                "1": { "name": "variable.other.steplo" },
                "2": { "name": "keyword.operator.steplo" }
              },
              "patterns": [{ "include": "#types" }],
              "end": "(,)|(?=\\})",
              "endCaptures": {
                "1": { "name": "punctuation.steplo" }
              }
            }
          ],
          "end": "(})",
          "endCaptures": {
            "1": { "name": "keyword.operator.steplo" }
          }
        },
        {
          "match": "([a-zA-Z_][a-zA-Z0-9_]*)",
          "name": "meta.type.steplo"
        }
      ]
    },
    "typeAlias": {
      "begin": "(type)\\s+(\\w+)\\s*(=)",
      "beginCaptures": {
        "1": { "patterns": [{ "include": "#keywords" }] },
        "2": { "patterns": [{ "include": "#types" }] },
        "3": { "patterns": [{ "include": "#punctuation" }] }
      },
      "patterns": [{ "include": "#types" }],
      "end": "(;)",
      "endCaptures": {
        "1": { "name": "punctuation.steplo" }
      }
    },
    "enums": {
      "begin": "(enum)\\s+(\\w+)\\s*({)",
      "beginCaptures": {
        "1": { "patterns": [{ "include": "#keywords" }] },
        "2": { "patterns": [{ "include": "#types" }] },
        "3": { "patterns": [{ "include": "#punctuation" }] }
      },
      "patterns": [
        {
          "match": "([a-zA-Z_][a-zA-Z0-9_]+)",
          "name": "variable.other.steplo"
        },
        { "include": "#punctuation" }
      ],
      "end": "(})",
      "endCaptures": {
        "1": { "name": "punctuation.steplo" }
      }
    },
    "typeHints": {
      "patterns": [
        {
          "begin": "(:)\\s*",
          "beginCaptures": { "1": { "name": "keyword.operator.steplo" } },
          "patterns": [{ "include": "#types" }],
          "end": "(?=\\)|,|;|\\{|$|\\n|\\|)"
        }
      ]
    },
    "casts": {
      "match": "(<)([_a-zA-Z0-9&\\[\\];{}:&\\s]*)(>)",
      "captures": {
        "1": { "name": "keyword.operator.steplo" },
        "2": { "patterns": [{ "include": "#casts" }, { "include": "#types" }] },
        "3": { "name": "keyword.operator.steplo" }
      }
    },
    "variables": {
      "name": "variable.steplo",
      "match": "\\b([a-zA-Z_][a-zA-Z0-9_]*)\\b"
    },
    "functions": {
      "begin": "([a-zA-Z_][a-zA-Z0-9_]*)\\s*(\\()",
      "beginCaptures": {
        "1": { "name": "support.function.steplo" },
        "2": { "name": "keyword.operator.steplo" }
      },
      "patterns": [
        { "include": "#typeHints" },
        { "include": "#casts" },
        { "include": "#variables" },
        { "include": "#punctuation" },
        { "include": "#operators" },
        { "include": "#numbers" },
        { "include": "#strings" },
        { "include": "#booleans" }
      ],
      "end": "(\\))",
      "endCaptures": {
        "1": { "name": "keyword.operator.steplo" }
      }
    },
    "comments": {
      "patterns": [
        {
          "name": "comment.line.steplo",
          "match": "//.*"
        }
      ]
    },
    "stackVars": {
      "begin": "(\\|)",
      "beginCaptures": {
        "1": { "name": "keyword.operator.steplo" }
      },
      "patterns": [
        { "include": "#variables" },
        { "include": "#typeHints" },
        { "name": "punctuation.steplo", "match": "," }
      ],
      "end": "(\\|)",
      "endCaptures": {
        "1": { "name": "keyword.operator.steplo" }
      }
    }
  },

  "scopeName": "source.steplo"
}
