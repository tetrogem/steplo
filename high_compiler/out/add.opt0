main {
    proc #fa {
        $sp = "-1";
        %80 = #b6;
        jump %80;
    }
}

func main {
    proc #b6 {
        %e9 = "5";
        $sp = ($sp + %e9);
        %97 = "10";
        %5f = "3";
        %3e = ($sp - %5f);
        %e1 = "0";
        %6e = (%3e + %e1);
        stack[%6e] = %97;
        %f7 = "15";
        %55 = "2";
        %4d = ($sp - %55);
        %75 = "0";
        %0c = (%4d + %75);
        stack[%0c] = %f7;
        %f1 = "50";
        %45 = "1";
        %95 = ($sp - %45);
        %35 = "0";
        %e12 = (%95 + %35);
        stack[%e12] = %f1;
        %d1 = "3";
        %11 = ($sp - %d1);
        %7c = stack[%11];
        %b5 = "2";
        %2f = ($sp - %b5);
        %5b = stack[%2f];
        %10 = (%7c + %5b);
        %96 = "0";
        %42 = ($sp - %96);
        %9b = "0";
        %40 = (%42 + %9b);
        stack[%40] = %10;
        %b1 = "0";
        %59 = ($sp - %b1);
        %70 = stack[%59];
        %db = "2";
        %13 = ($sp + %db);
        stack[%13] = %70;
        %3ed = "1";
        %49 = ($sp + %3ed);
        %44 = #3a;
        stack[%49] = %44;
        %d2 = #38;
        jump %d2;
    }

    proc #3a {
        %a5 = "2";
        %8c = ($sp - %a5);
        %c8 = stack[%8c];
        %d24 = "1";
        %de = ($sp - %d24);
        %7c3 = stack[%de];
        %75b = (%c8 + %7c3);
        %48 = "0";
        %20 = ($sp - %48);
        %5fd = "0";
        %76 = (%20 + %5fd);
        stack[%76] = %75b;
        %1a = "0";
        %e4 = ($sp - %1a);
        %2a = stack[%e4];
        %e6 = "2";
        %07 = ($sp + %e6);
        stack[%07] = %2a;
        %a3 = "1";
        %757 = ($sp + %a3);
        %c83 = #c2;
        stack[%757] = %c83;
        %42a = #38;
        jump %42a;
    }

    proc #c2 {
        %df = "100";
        %24 = "200";
        %e90 = (%df + %24);
        %9d = "0";
        %17 = ($sp - %9d);
        %bd = "0";
        %bc = (%17 + %bd);
        stack[%bc] = %e90;
        %405 = "0";
        %071 = ($sp - %405);
        %c6 = stack[%071];
        %72 = "2";
        %47 = ($sp + %72);
        stack[%47] = %c6;
        %0f = "1";
        %2f0 = ($sp + %0f);
        %7b = #55a;
        stack[%2f0] = %7b;
        %da = #38;
        jump %da;
    }

    proc #55a {
        %707 = "500";
        %27 = "75";
        %c7 = (%707 + %27);
        %753 = "2";
        %2c = ($sp + %753);
        stack[%2c] = %c7;
        %13e = "1";
        %88 = ($sp + %13e);
        %4c = #28;
        stack[%88] = %4c;
        %15 = #38;
        jump %15;
    }

    proc #28 {
        exit;
    }
}

func func.out {
    proc #38 {
        %c9 = "2";
        $sp = ($sp + %c9);
        %90 = "0";
        %fe = ($sp - %90);
        %31 = stack[%fe];
        out %31;
        %91 = "2";
        $sp = ($sp - %91);
        %aa = "1";
        %f2 = ($sp + %aa);
        %be = stack[%f2];
        jump %be;
    }
}

func func.in {
    proc #3f {
        %b15 = "3";
        $sp = ($sp + %b15);
        %f7c = "0";
        %f1f = ($sp - %f7c);
        in;
        stack[%f1f] = $answer;
        %a6 = "0";
        %3d = ($sp - %a6);
        %485 = stack[%3d];
        %310 = "1";
        %05 = ($sp - %310);
        %8a = stack[%05];
        %57 = "0";
        %978 = (%8a + %57);
        stack[%978] = %485;
        %16 = "3";
        $sp = ($sp - %16);
        %30 = "1";
        %2cd = ($sp + %30);
        %62 = stack[%2cd];
        jump %62;
    }
}