main {
    proc #9c {
        $sp = "-1";
        %07 = #59;
        jump %07;
    }
}

func main {
    proc #59 {
        %9d = "5";
        $sp = ($sp + %9d);
        %02 = "10";
        %cf = "3";
        %5e = ($sp - %cf);
        %09 = "0";
        %8d = (%5e + %09);
        stack[%8d] = %02;
        %0c = "15";
        %93 = "2";
        %b6 = ($sp - %93);
        %4e = "0";
        %a0 = (%b6 + %4e);
        stack[%a0] = %0c;
        %bc = "50";
        %b9 = "1";
        %88 = ($sp - %b9);
        %4d = "0";
        %49 = (%88 + %4d);
        stack[%49] = %bc;
        %88d = "3";
        %09a = ($sp - %88d);
        %7b = stack[%09a];
        %3b = "2";
        %6c = ($sp - %3b);
        %4b = stack[%6c];
        %c1 = (%7b + %4b);
        %fb = "0";
        %5b = ($sp - %fb);
        %78 = "0";
        %90 = (%5b + %78);
        stack[%90] = %c1;
        %68 = "0";
        %81 = ($sp - %68);
        %27 = stack[%81];
        %19 = "2";
        %a5 = ($sp + %19);
        stack[%a5] = %27;
        %bf = "1";
        %8b = ($sp + %bf);
        %197 = #50;
        stack[%8b] = %197;
        %e5 = #c3;
        jump %e5;
    }

    proc #50 {
        %a4 = "2";
        %ef = ($sp - %a4);
        %83 = stack[%ef];
        %05 = "1";
        %782 = ($sp - %05);
        %24 = stack[%782];
        %c4 = (%83 + %24);
        %85 = "0";
        %10 = ($sp - %85);
        %e4 = "0";
        %ad = (%10 + %e4);
        stack[%ad] = %c4;
        %79 = "0";
        %597 = ($sp - %79);
        %14 = stack[%597];
        %48 = "2";
        %34 = ($sp + %48);
        stack[%34] = %14;
        %de = "1";
        %8e = ($sp + %de);
        %a58 = #06;
        stack[%8e] = %a58;
        %29 = #c3;
        jump %29;
    }

    proc #06 {
        %58 = "100";
        %67 = "200";
        %ce = (%58 + %67);
        %4d3 = "0";
        %83c = ($sp - %4d3);
        %67b = "0";
        %1c = (%83c + %67b);
        stack[%1c] = %ce;
        %3a = "0";
        %7d = ($sp - %3a);
        %53 = stack[%7d];
        %e0 = "2";
        %bc0 = ($sp + %e0);
        stack[%bc0] = %53;
        %d1 = "1";
        %a2 = ($sp + %d1);
        %073 = #5b3;
        stack[%a2] = %073;
        %502 = #c3;
        jump %502;
    }

    proc #5b3 {
        %3f = "500";
        %94 = "75";
        %3d = (%3f + %94);
        %e7 = "2";
        %b8 = ($sp + %e7);
        stack[%b8] = %3d;
        %4c = "1";
        %d8 = ($sp + %4c);
        %2d = #ae;
        stack[%d8] = %2d;
        %f0 = #c3;
        jump %f0;
    }

    proc #ae {
        exit;
    }
}

func func.out {
    proc #c3 {
        %51 = "2";
        $sp = ($sp + %51);
        %00 = "0";
        %b89 = ($sp - %00);
        %51e = stack[%b89];
        out %51e;
        %63 = "2";
        $sp = ($sp - %63);
        %b5 = "1";
        %ff = ($sp + %b5);
        %31 = stack[%ff];
        jump %31;
    }
}

func func.in {
    proc #f2 {
        %027 = "3";
        $sp = ($sp + %027);
        %dd = "0";
        %99 = ($sp - %dd);
        in;
        stack[%99] = $answer;
        %21 = "0";
        %21e = ($sp - %21);
        %efe = stack[%21e];
        %3c = "1";
        %64 = ($sp - %3c);
        %e8 = stack[%64];
        %87 = "0";
        %aa = (%e8 + %87);
        stack[%aa] = %efe;
        %be = "3";
        $sp = ($sp - %be);
        %78d = "1";
        %d4 = ($sp + %78d);
        %82 = stack[%d4];
        jump %82;
    }
}