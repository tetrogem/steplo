main {
    proc #b4 {
        $sp = "-1";
        %62 = #a1;
        jump %62;
    }
}

func main {
    proc #a1 {
        %45 = "5";
        $sp = ($sp + %45);
        %4d = "10";
        %21 = "3";
        %c5 = ($sp - %21);
        %2c = "0";
        %ac = (%c5 + %2c);
        stack[%ac] = %4d;
        %4b = "15";
        %80 = "2";
        %9e = ($sp - %80);
        %aa = "0";
        %85 = (%9e + %aa);
        stack[%85] = %4b;
        %47 = "50";
        %3b = "1";
        %f6 = ($sp - %3b);
        %f1 = "0";
        %dc = (%f6 + %f1);
        stack[%dc] = %47;
        %d4 = "3";
        %da = ($sp - %d4);
        %66 = stack[%da];
        %a6 = "2";
        %e9 = ($sp - %a6);
        %dac = stack[%e9];
        %ef = (%66 + %dac);
        %61 = "0";
        %69 = ($sp - %61);
        %9a = "0";
        %f5 = (%69 + %9a);
        stack[%f5] = %ef;
        %21b = "0";
        %fa = ($sp - %21b);
        %92 = stack[%fa];
        %fb = "2";
        %46 = ($sp + %fb);
        stack[%46] = %92;
        %e8 = "1";
        %1e = ($sp + %e8);
        %01 = #6b;
        stack[%1e] = %01;
        %470 = #45c;
        jump %470;
    }

    proc #6b {
        %a6c = "2";
        %cd = ($sp - %a6c);
        %76 = stack[%cd];
        %bf = "1";
        %fd = ($sp - %bf);
        %b9 = stack[%fd];
        %f4 = (%76 + %b9);
        %4d3 = "0";
        %0e = ($sp - %4d3);
        %e3 = "0";
        %a5 = (%0e + %e3);
        stack[%a5] = %f4;
        %4e = "0";
        %30 = ($sp - %4e);
        %03 = stack[%30];
        %09 = "2";
        %c0 = ($sp + %09);
        stack[%c0] = %03;
        %4c = "1";
        %56 = ($sp + %4c);
        %3c = #41;
        stack[%56] = %3c;
        %aa9 = #45c;
        jump %aa9;
    }

    proc #41 {
        %c8 = "100";
        %f4f = "200";
        %0f = (%c8 + %f4f);
        %79 = "0";
        %84 = ($sp - %79);
        %012 = "0";
        %29 = (%84 + %012);
        stack[%29] = %0f;
        %cc = "0";
        %a2 = ($sp - %cc);
        %e7 = stack[%a2];
        %83 = "2";
        %9c = ($sp + %83);
        stack[%9c] = %e7;
        %28 = "1";
        %86 = ($sp + %28);
        %e6 = #32;
        stack[%86] = %e6;
        %20 = #45c;
        jump %20;
    }

    proc #32 {
        %efd = "500";
        %768 = "75";
        %5f = (%efd + %768);
        %e70 = "2";
        %d7 = ($sp + %e70);
        stack[%d7] = %5f;
        %74 = "1";
        %2c1 = ($sp + %74);
        %0f3 = #807;
        stack[%2c1] = %0f3;
        %1a = #45c;
        jump %1a;
    }

    proc #807 {
        exit;
    }
}

func func.out {
    proc #45c {
        %c3 = "2";
        $sp = ($sp + %c3);
        %61a = "0";
        %dc2 = ($sp - %61a);
        %52 = stack[%dc2];
        out %52;
        %cf = "2";
        $sp = ($sp - %cf);
        %de = "1";
        %74c = ($sp + %de);
        %2b = stack[%74c];
        jump %2b;
    }
}

func func.in {
    proc #f10 {
        %e36 = "3";
        $sp = ($sp + %e36);
        %cdc = "0";
        %81 = ($sp - %cdc);
        in;
        stack[%81] = $answer;
        %aad = "0";
        %745 = ($sp - %aad);
        %f0 = stack[%745];
        %ab = "1";
        %0a = ($sp - %ab);
        %b6 = stack[%0a];
        %7d = "0";
        %44 = (%b6 + %7d);
        stack[%44] = %f0;
        %ec = "3";
        $sp = ($sp - %ec);
        %dcb = "1";
        %d7e = ($sp + %dcb);
        %6f = stack[%d7e];
        jump %6f;
    }
}

func func.random {
    proc #acc {
        %78 = "5";
        $sp = ($sp + %78);
        %7c = "0";
        %c04 = ($sp - %7c);
        %ce = "2";
        %21bf = ($sp - %ce);
        %be = stack[%21bf];
        %5b = "1";
        %e73 = ($sp - %5b);
        %012f = stack[%e73];
        stack[%c04] = (%be <random> %012f);
        %ab0 = "0";
        %2ce = ($sp - %ab0);
        %02 = stack[%2ce];
        %f53 = "3";
        %20b = ($sp - %f53);
        %59 = stack[%20b];
        %57 = "0";
        %8f = (%59 + %57);
        stack[%8f] = %02;
        %c1 = "5";
        $sp = ($sp - %c1);
        %40 = "1";
        %7e = ($sp + %40);
        %0b = stack[%7e];
        jump %0b;
    }
}