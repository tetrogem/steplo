main {
    proc #eb {
        $sp = "-1";
        %35 = #79;
        jump %35;
    }
}

func main {
    proc #79 {
        %e7 = "5";
        $sp = ($sp + %e7);
        %73 = "10";
        %cf = "3";
        %49 = ($sp - %cf);
        %18 = "0";
        %26 = (%49 + %18);
        stack[%26] = %73;
        %d1 = "15";
        %b9 = "2";
        %50 = ($sp - %b9);
        %0d = "0";
        %9e = (%50 + %0d);
        stack[%9e] = %d1;
        %9eb = "50";
        %b7 = "1";
        %1c = ($sp - %b7);
        %f2 = "0";
        %66 = (%1c + %f2);
        stack[%66] = %9eb;
        %57 = "3";
        %d1c = ($sp - %57);
        %87 = stack[%d1c];
        %fd = "2";
        %20 = ($sp - %fd);
        %10 = stack[%20];
        %181 = (%87 + %10);
        %24 = "0";
        %f6 = ($sp - %24);
        %dd = "0";
        %2a = (%f6 + %dd);
        stack[%2a] = %181;
        %61 = "0";
        %f8 = ($sp - %61);
        %1e = stack[%f8];
        %3f = "2";
        %22 = ($sp + %3f);
        stack[%22] = %1e;
        %05 = "1";
        %1a = ($sp + %05);
        %f1 = #a4;
        stack[%1a] = %f1;
        %06 = #81;
        jump %06;
    }

    proc #a4 {
        %1c6 = "2";
        %2f = ($sp - %1c6);
        %e70 = stack[%2f];
        %71 = "1";
        %02 = ($sp - %71);
        %69 = stack[%02];
        %9d = (%e70 + %69);
        %f0 = "0";
        %90 = ($sp - %f0);
        %95 = "0";
        %ea = (%90 + %95);
        stack[%ea] = %9d;
        %4a = "0";
        %bd = ($sp - %4a);
        %a1 = stack[%bd];
        %cb = "2";
        %666 = ($sp + %cb);
        stack[%666] = %a1;
        %ea0 = "1";
        %8f = ($sp + %ea0);
        %ac = #88;
        stack[%8f] = %ac;
        %7a = #81;
        jump %7a;
    }

    proc #88 {
        %c2 = "100";
        %8b = "200";
        %31 = (%c2 + %8b);
        %b6 = "0";
        %52 = ($sp - %b6);
        %67 = "0";
        %23 = (%52 + %67);
        stack[%23] = %31;
        %36 = "0";
        %7f = ($sp - %36);
        %9b = stack[%7f];
        %54 = "2";
        %4a4 = ($sp + %54);
        stack[%4a4] = %9b;
        %12 = "1";
        %cc = ($sp + %12);
        %62 = #56;
        stack[%cc] = %62;
        %6c = #81;
        jump %6c;
    }

    proc #56 {
        %aa = "500";
        %502 = "75";
        %69f = (%aa + %502);
        %25 = "2";
        %a3 = ($sp + %25);
        stack[%a3] = %69f;
        %e8 = "1";
        %c7 = ($sp + %e8);
        %50b = #b8;
        stack[%c7] = %50b;
        %9c = #81;
        jump %9c;
    }

    proc #b8 {
        exit;
    }
}

func func.out {
    proc #81 {
        %37 = "2";
        $sp = ($sp + %37);
        %7b = "0";
        %44 = ($sp - %7b);
        %39 = stack[%44];
        out %39;
        %0e = "2";
        $sp = ($sp - %0e);
        %e1 = "1";
        %d3 = ($sp + %e1);
        %378 = stack[%d3];
        jump %378;
    }
}

func func.in {
    proc #63 {
        %97 = "3";
        $sp = ($sp + %97);
        %8e = "0";
        %92 = ($sp - %8e);
        in;
        stack[%92] = $answer;
        %e9 = "0";
        %82 = ($sp - %e9);
        %9bc = stack[%82];
        %f00 = "1";
        %ef = ($sp - %f00);
        %27 = stack[%ef];
        %16 = "0";
        %58 = (%27 + %16);
        stack[%58] = %9bc;
        %715 = "3";
        $sp = ($sp - %715);
        %2e = "1";
        %30 = ($sp + %2e);
        %f68 = stack[%30];
        jump %f68;
    }
}

func func.random_num {
    proc #6d {
        %ac5 = "5";
        $sp = ($sp + %ac5);
        %c9 = "0";
        %b83 = ($sp - %c9);
        %ebc = "0.0";
        %4f = "1.0";
        stack[%b83] = (%ebc <random> %4f);
        %3b = "2";
        %7d = ($sp - %3b);
        %1ee = stack[%7d];
        %af = "0";
        %19 = ($sp - %af);
        %cb7 = stack[%19];
        %816 = "1";
        %7bf = ($sp - %816);
        %2b = stack[%7bf];
        %92b = "2";
        %a9 = ($sp - %92b);
        %a45 = stack[%a9];
        %93 = (%2b - %a45);
        %c0 = (%cb7 * %93);
        %7b9 = (%1ee + %c0);
        %d2 = "3";
        %8a = ($sp - %d2);
        %da = stack[%8a];
        %a7 = "0";
        %1f = (%da + %a7);
        stack[%1f] = %7b9;
        %d12 = "5";
        $sp = ($sp - %d12);
        %68 = "1";
        %81f = ($sp + %68);
        %d4 = stack[%81f];
        jump %d4;
    }
}

func func.random_int {
    proc #ca {
        %75 = "5";
        $sp = ($sp + %75);
        %fb = "0";
        %b1 = ($sp - %fb);
        %d7 = "2";
        %bd1 = ($sp - %d7);
        %d9 = stack[%bd1];
        %c1 = "1";
        %4d = ($sp - %c1);
        %5f = stack[%4d];
        stack[%b1] = (%d9 <random> %5f);
        %309 = "0";
        %820 = ($sp - %309);
        %d91 = stack[%820];
        %a35 = "3";
        %13 = ($sp - %a35);
        %1e4 = stack[%13];
        %57c = "0";
        %fc = (%1e4 + %57c);
        stack[%fc] = %d91;
        %e2 = "5";
        $sp = ($sp - %e2);
        %efa = "1";
        %7f2 = ($sp + %efa);
        %819 = stack[%7f2];
        jump %819;
    }
}

func func.random_uint {
    proc #ee {
        %ae = "5";
        $sp = ($sp + %ae);
        %3a = "0";
        %14 = ($sp - %3a);
        %2b9 = "2";
        %c70 = ($sp - %2b9);
        %1f5 = stack[%c70];
        %98 = "1";
        %fbc = ($sp - %98);
        %7c = stack[%fbc];
        stack[%14] = (%1f5 <random> %7c);
        %34 = "0";
        %93d = ($sp - %34);
        %14b = stack[%93d];
        %e6 = "3";
        %89 = ($sp - %e6);
        %c6 = stack[%89];
        %cf0 = "0";
        %eb3 = (%c6 + %cf0);
        stack[%eb3] = %14b;
        %161 = "5";
        $sp = ($sp - %161);
        %1c5 = "1";
        %5b = ($sp + %1c5);
        %13a = stack[%5b];
        jump %13a;
    }
}