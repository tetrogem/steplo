main {
    proc #cd {
        $sp = "-1";
        %61 = #71;
        jump %61;
    }
}

func main {
    proc #71 {
        %b9 = "5";
        $sp = ($sp + %b9);
        %0d = "10";
        %41 = "3";
        %4e = ($sp - %41);
        %57 = "0";
        %50 = (%4e + %57);
        stack[%50] = %0d;
        %b4 = "15";
        %cd1 = "2";
        %a6 = ($sp - %cd1);
        %df = "0";
        %74 = (%a6 + %df);
        stack[%74] = %b4;
        %36 = "50";
        %f4 = "1";
        %aa = ($sp - %f4);
        %55 = "0";
        %b7 = (%aa + %55);
        stack[%b7] = %36;
        %a5 = "3";
        %64 = ($sp - %a5);
        %06 = stack[%64];
        %b48 = "2";
        %6d = ($sp - %b48);
        %cc = stack[%6d];
        %14 = (%06 + %cc);
        %ca = "0";
        %fb = ($sp - %ca);
        %f2 = "0";
        %c7 = (%fb + %f2);
        stack[%c7] = %14;
        %02 = "0";
        %94 = ($sp - %02);
        %de = stack[%94];
        %4c = "2";
        %aa2 = ($sp + %4c);
        stack[%aa2] = %de;
        %54 = "1";
        %98 = ($sp + %54);
        %9c = #47;
        stack[%98] = %9c;
        %17 = #76;
        jump %17;
    }

    proc #47 {
        %c9 = "2";
        %3a = ($sp - %c9);
        %f1 = stack[%3a];
        %4a = "1";
        %10 = ($sp - %4a);
        %f8 = stack[%10];
        %ed = (%f1 + %f8);
        %49 = "0";
        %49e = ($sp - %49);
        %d8 = "0";
        %0a = (%49e + %d8);
        stack[%0a] = %ed;
        %fb4 = "0";
        %44 = ($sp - %fb4);
        %8e = stack[%44];
        %7d = "2";
        %d9 = ($sp + %7d);
        stack[%d9] = %8e;
        %32 = "1";
        %4c8 = ($sp + %32);
        %bd = #bd5;
        stack[%4c8] = %bd;
        %a2 = #76;
        jump %a2;
    }

    proc #bd5 {
        %7f = "100";
        %ed7 = "200";
        %da = (%7f + %ed7);
        %33 = "0";
        %70 = ($sp - %33);
        %6d9 = "0";
        %14d = (%70 + %6d9);
        stack[%14d] = %da;
        %a2b = "0";
        %92 = ($sp - %a2b);
        %8d = stack[%92];
        %1e = "2";
        %b5 = ($sp + %1e);
        stack[%b5] = %8d;
        %f6 = "1";
        %de8 = ($sp + %f6);
        %8d1 = #16;
        stack[%de8] = %8d1;
        %c93 = #76;
        jump %c93;
    }

    proc #16 {
        %e0 = "500";
        %51 = "75";
        %4d = (%e0 + %51);
        %a1 = "2";
        %f0 = ($sp + %a1);
        stack[%f0] = %4d;
        %065 = "1";
        %edc = ($sp + %065);
        %38 = #44b;
        stack[%edc] = %38;
        %548 = #76;
        jump %548;
    }

    proc #44b {
        exit;
    }
}

func func.out {
    proc #76 {
        %9f = "2";
        $sp = ($sp + %9f);
        %f24 = "0";
        %8a = ($sp - %f24);
        %e3 = stack[%8a];
        out %e3;
        %640 = "2";
        $sp = ($sp - %640);
        %c2 = "1";
        %512 = ($sp + %c2);
        %5f = stack[%512];
        jump %5f;
    }
}

func func.in {
    proc #d94 {
        %78 = "3";
        $sp = ($sp + %78);
        %f9 = "0";
        %d5 = ($sp - %f9);
        in;
        stack[%d5] = $answer;
        %2f = "0";
        %68 = ($sp - %2f);
        %eb = stack[%68];
        %e4 = "1";
        %b3 = ($sp - %e4);
        %ae = stack[%b3];
        %48 = "0";
        %6d6 = (%ae + %48);
        stack[%6d6] = %eb;
        %9fa = "3";
        $sp = ($sp - %9fa);
        %91 = "1";
        %e1 = ($sp + %91);
        %3c = stack[%e1];
        jump %3c;
    }
}