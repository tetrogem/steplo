main {
    proc #59 {
        $sp = "-1";
        %3e = #5a;
        jump %3e;
    }
}

func main {
    proc #5a {
        %8a = "7";
        $sp = ($sp + %8a);
        %89 = "Variable";
        %74 = "5";
        %a9 = ($sp - %74);
        %83 = "0";
        %87 = (%a9 + %83);
        stack[%87] = %89;
        %ce = "5";
        %4a = ($sp - %ce);
        %f3 = stack[%4a];
        %82 = "2";
        %f4 = ($sp + %82);
        stack[%f4] = %f3;
        %5e = "1";
        %1f = ($sp + %5e);
        %29 = #bc;
        stack[%1f] = %29;
        %84 = #06;
        jump %84;
    }

    proc #bc {
        %ed = "10";
        %12 = "0";
        %23 = "4";
        %f0 = ($sp - %23);
        %8e = (%f0 + %12);
        %c0 = "0";
        %a1 = (%8e + %c0);
        stack[%a1] = %ed;
        %20 = "0";
        %97 = "4";
        %5a0 = ($sp - %97);
        %ef = (%5a0 + %20);
        %e0 = stack[%ef];
        %1b = "2";
        %17 = ($sp + %1b);
        stack[%17] = %e0;
        %31 = "1";
        %9a = ($sp + %31);
        %86 = #3b;
        stack[%9a] = %86;
        %1e = #06;
        jump %1e;
    }

    proc #3b {
        %e9 = "Hello";
        %891 = "3";
        %00 = "4";
        %22 = ($sp - %00);
        %9aa = (%22 + %891);
        %a7 = "0";
        %09 = (%9aa + %a7);
        stack[%09] = %e9;
        %fd = "World!";
        %d0 = "2";
        %0f = "4";
        %c05 = ($sp - %0f);
        %70 = (%c05 + %d0);
        %f9 = "0";
        %e1 = (%70 + %f9);
        stack[%e1] = %fd;
        %12c = "2";
        %05 = "4";
        %79 = ($sp - %05);
        %50 = (%79 + %12c);
        %98 = stack[%50];
        %170 = "4";
        %9b = "4";
        %6c = ($sp - %9b);
        %2e = (%6c + %170);
        %32 = "0";
        %49 = (%2e + %32);
        stack[%49] = %98;
        %30 = "3";
        %21 = "4";
        %a8 = ($sp - %21);
        %3b7 = (%a8 + %30);
        %509 = stack[%3b7];
        %7f = "2";
        %792 = ($sp + %7f);
        stack[%792] = %509;
        %176 = "1";
        %7f4 = ($sp + %176);
        %a7c = #1ff;
        stack[%7f4] = %a7c;
        %99 = #06;
        jump %99;
    }

    proc #1ff {
        %cc = "4";
        %066 = "4";
        %df = ($sp - %066);
        %a4 = (%df + %cc);
        %45 = stack[%a4];
        %5c = "2";
        %14 = ($sp + %5c);
        stack[%14] = %45;
        %4b = "1";
        %c8 = ($sp + %4b);
        %d9 = #0a;
        stack[%c8] = %d9;
        %008 = #06;
        jump %008;
    }

    proc #0a {
        exit;
    }
}

func func.out {
    proc #06 {
        %302 = "2";
        $sp = ($sp + %302);
        %03 = "0";
        %4d = ($sp - %03);
        %1f3 = stack[%4d];
        out %1f3;
        %5ae = "2";
        $sp = ($sp - %5ae);
        %ca = "1";
        %edd = ($sp + %ca);
        %67 = stack[%edd];
        jump %67;
    }
}

func func.in {
    proc #fc {
        %3b8 = "3";
        $sp = ($sp + %3b8);
        %b1 = "0";
        %210 = ($sp - %b1);
        in;
        stack[%210] = $answer;
        %e4 = "0";
        %c3 = ($sp - %e4);
        %f7 = stack[%c3];
        %10 = "1";
        %e5 = ($sp - %10);
        %5b = stack[%e5];
        %dc = "0";
        %76 = (%5b + %dc);
        stack[%76] = %f7;
        %8a0 = "3";
        $sp = ($sp - %8a0);
        %457 = "1";
        %2e5 = ($sp + %457);
        %e14 = stack[%2e5];
        jump %e14;
    }
}

func func.random_num {
    proc #13 {
        %57 = "5";
        $sp = ($sp + %57);
        %91 = "0";
        %8c = ($sp - %91);
        %9d = "0.0";
        %00c = "1.0";
        stack[%8c] = (%9d <random> %00c);
        %11 = "2";
        %a99 = ($sp - %11);
        %07 = stack[%a99];
        %56 = "0";
        %a3 = ($sp - %56);
        %af = stack[%a3];
        %bd = "1";
        %02 = ($sp - %bd);
        %a2 = stack[%02];
        %78 = "2";
        %8e4 = ($sp - %78);
        %87a = stack[%8e4];
        %b3 = (%a2 - %87a);
        %94 = (%af * %b3);
        %4e = (%07 + %94);
        %62 = "3";
        %28 = ($sp - %62);
        %ea = stack[%28];
        %4f = "0";
        %ccb = (%ea + %4f);
        stack[%ccb] = %4e;
        %7e = "5";
        $sp = ($sp - %7e);
        %a0 = "1";
        %57a = ($sp + %a0);
        %84b = stack[%57a];
        jump %84b;
    }
}

func func.random_int {
    proc #5f {
        %b2 = "5";
        $sp = ($sp + %b2);
        %c02 = "0";
        %78c = ($sp - %c02);
        %982 = "2";
        %9e = ($sp - %982);
        %8b = stack[%9e];
        %704 = "1";
        %a9a = ($sp - %704);
        %a6 = stack[%a9a];
        stack[%78c] = (%8b <random> %a6);
        %65 = "0";
        %7d = ($sp - %65);
        %de = stack[%7d];
        %c30 = "3";
        %701 = ($sp - %c30);
        %f6 = stack[%701];
        %eb = "0";
        %9c = (%f6 + %eb);
        stack[%9c] = %de;
        %d07 = "5";
        $sp = ($sp - %d07);
        %103 = "1";
        %11c = ($sp + %103);
        %bf = stack[%11c];
        jump %bf;
    }
}

func func.random_uint {
    proc #e47 {
        %b13 = "5";
        $sp = ($sp + %b13);
        %d2 = "0";
        %8f = ($sp - %d2);
        %75 = "2";
        %3f = ($sp - %75);
        %3be = stack[%3f];
        %19 = "1";
        %52 = ($sp - %19);
        %c5 = stack[%52];
        stack[%8f] = (%3be <random> %c5);
        %5d = "0";
        %f39 = ($sp - %5d);
        %3fc = stack[%f39];
        %d4 = "3";
        %1c = ($sp - %d4);
        %2f = stack[%1c];
        %3e5 = "0";
        %44 = (%2f + %3e5);
        stack[%44] = %3fc;
        %73 = "5";
        $sp = ($sp - %73);
        %1a = "1";
        %9ed = ($sp + %1a);
        %b9 = stack[%9ed];
        jump %b9;
    }
}