main {
    proc #5b {
        $sp = "-1";
        %ec = #fe;
        jump %ec;
    }
}

func main {
    proc #fe {
        %42 = "7";
        $sp = ($sp + %42);
        %3f = "Variable";
        %70 = "5";
        %6f = ($sp - %70);
        %21 = "0";
        %d7 = (%6f + %21);
        stack[%d7] = %3f;
        %ec1 = "5";
        %c1 = ($sp - %ec1);
        %cc = stack[%c1];
        %d3 = "2";
        %e8 = ($sp + %d3);
        stack[%e8] = %cc;
        %83 = "1";
        %a5 = ($sp + %83);
        %7b = #3f8;
        stack[%a5] = %7b;
        %89 = #f7;
        jump %89;
    }

    proc #3f8 {
        %46 = "10";
        %aa = "0";
        %e4 = "4";
        %ae = ($sp - %e4);
        %5be = (%ae + %aa);
        %54 = "0";
        %65 = (%5be + %54);
        stack[%65] = %46;
        %3c = "0";
        %bc = "4";
        %75 = ($sp - %bc);
        %e2 = (%75 + %3c);
        %95 = stack[%e2];
        %9d = "2";
        %17 = ($sp + %9d);
        stack[%17] = %95;
        %9c = "1";
        %ee = ($sp + %9c);
        %17d = #97;
        stack[%ee] = %17d;
        %fe6 = #f7;
        jump %fe6;
    }

    proc #97 {
        %92 = "Hello";
        %f2 = "3";
        %51 = "4";
        %d3c = ($sp - %51);
        %df = (%d3c + %f2);
        %24 = "0";
        %4a = (%df + %24);
        stack[%4a] = %92;
        %ff = "World!";
        %c4 = "2";
        %91 = "4";
        %aef = ($sp - %91);
        %22 = (%aef + %c4);
        %c43 = "0";
        %14 = (%22 + %c43);
        stack[%14] = %ff;
        %90 = "2";
        %49 = "4";
        %891 = ($sp - %49);
        %c0 = (%891 + %90);
        %76 = stack[%c0];
        %07 = "4";
        %8b = "4";
        %b1 = ($sp - %8b);
        %0c = (%b1 + %07);
        %51c = "0";
        %c45 = (%0c + %51c);
        stack[%c45] = %76;
        %aa4 = "3";
        %950 = "4";
        %19 = ($sp - %950);
        %1b = (%19 + %aa4);
        %b8 = stack[%1b];
        %88 = "2";
        %da = ($sp + %88);
        stack[%da] = %b8;
        %e7 = "1";
        %cd = ($sp + %e7);
        %86 = #68;
        stack[%cd] = %86;
        %d0 = #f7;
        jump %d0;
    }

    proc #68 {
        %0e = "4";
        %d3f = "4";
        %d8 = ($sp - %d3f);
        %e3 = (%d8 + %0e);
        %cb = stack[%e3];
        %a1 = "2";
        %072 = ($sp + %a1);
        stack[%072] = %cb;
        %fd = "1";
        %467 = ($sp + %fd);
        %f4 = #3d;
        stack[%467] = %f4;
        %e6 = #f7;
        jump %e6;
    }

    proc #3d {
        exit;
    }
}

func func.out {
    proc #f7 {
        %9db = "2";
        $sp = ($sp + %9db);
        %12 = "0";
        %079 = ($sp - %12);
        %b8a = stack[%079];
        out %b8a;
        %23 = "2";
        $sp = ($sp - %23);
        %5e = "1";
        %91e = ($sp + %5e);
        %231 = stack[%91e];
        jump %231;
    }
}

func func.in {
    proc #38 {
        %69 = "3";
        $sp = ($sp + %69);
        %e9 = "0";
        %6c = ($sp - %e9);
        in;
        stack[%6c] = $answer;
        %4c = "0";
        %b7 = ($sp - %4c);
        %975 = stack[%b7];
        %ce = "1";
        %210 = ($sp - %ce);
        %141 = stack[%210];
        %bb = "0";
        %15 = (%141 + %bb);
        stack[%15] = %975;
        %5a = "3";
        $sp = ($sp - %5a);
        %ec0 = "1";
        %c7 = ($sp + %ec0);
        %0f = stack[%c7];
        jump %0f;
    }
}

func func.random_num {
    proc #7d {
        %02 = "5";
        $sp = ($sp + %02);
        %7df = "0";
        %6f5 = ($sp - %7df);
        %bd = "0.0";
        %8b7 = "1.0";
        stack[%6f5] = (%bd <random> %8b7);
        %ab = "2";
        %54a = ($sp - %ab);
        %e34 = stack[%54a];
        %a4 = "0";
        %60 = ($sp - %a4);
        %839 = stack[%60];
        %1d = "1";
        %b3 = ($sp - %1d);
        %0a = stack[%b3];
        %a8 = "2";
        %c16 = ($sp - %a8);
        %b2 = stack[%c16];
        %63 = (%0a - %b2);
        %28 = (%839 * %63);
        %3b = (%e34 + %28);
        %52 = "3";
        %e44 = ($sp - %52);
        %fe1 = stack[%e44];
        %0f7 = "0";
        %f8 = (%fe1 + %0f7);
        stack[%f8] = %3b;
        %b1d = "5";
        $sp = ($sp - %b1d);
        %b8c = "1";
        %31 = ($sp + %b8c);
        %30 = stack[%31];
        jump %30;
    }
}

func func.random_int {
    proc #67 {
        %00 = "5";
        $sp = ($sp + %00);
        %f81 = "0";
        %aeb = ($sp - %f81);
        %3b2 = "2";
        %128 = ($sp - %3b2);
        %233 = stack[%128];
        %10 = "1";
        %227 = ($sp - %10);
        %10a = stack[%227];
        stack[%aeb] = (%233 <random> %10a);
        %f9 = "0";
        %d6 = ($sp - %f9);
        %37 = stack[%d6];
        %5b6 = "3";
        %1c = ($sp - %5b6);
        %926 = stack[%1c];
        %79 = "0";
        %43 = (%926 + %79);
        stack[%43] = %37;
        %919 = "5";
        $sp = ($sp - %919);
        %f3 = "1";
        %ef = ($sp + %f3);
        %157 = stack[%ef];
        jump %157;
    }
}

func func.random_uint {
    proc #84 {
        %6e = "5";
        $sp = ($sp + %6e);
        %220 = "0";
        %f1 = ($sp - %220);
        %301 = "2";
        %f5 = ($sp - %301);
        %2c = stack[%f5];
        %d3a = "1";
        %1f = ($sp - %d3a);
        %cd4 = stack[%1f];
        stack[%f1] = (%2c <random> %cd4);
        %cb4 = "0";
        %7e = ($sp - %cb4);
        %93 = stack[%7e];
        %e0 = "3";
        %e1 = ($sp - %e0);
        %2e = stack[%e1];
        %a6 = "0";
        %74 = (%2e + %a6);
        stack[%74] = %93;
        %522 = "5";
        $sp = ($sp - %522);
        %b71 = "1";
        %08 = ($sp + %b71);
        %e45 = stack[%08];
        jump %e45;
    }
}