main {
    proc #0e {
        $sp = "-1";
        %0d = #13;
        jump %0d;
    }
}

func main {
    proc #13 {
        %3b = "6";
        $sp = ($sp + %3b);
        %01 = "Hello";
        %35 = "0";
        %4b = "4";
        %f0 = ($sp - %4b);
        %93 = (%f0 + %35);
        %e3 = "0";
        %23 = (%93 + %e3);
        stack[%23] = %01;
        %38 = "0";
        %12 = "4";
        %10 = ($sp - %12);
        %f2 = (%10 + %38);
        %7f = stack[%f2];
        %c5 = "2";
        %bc = ($sp + %c5);
        stack[%bc] = %7f;
        %3f = "1";
        %e9 = ($sp + %3f);
        %2b = #7f4;
        stack[%e9] = %2b;
        %64 = #d0;
        jump %64;
    }

    proc #7f4 {
        %51 = "World!";
        %5e = "0";
        %d0e = "1";
        %eb = (%5e + %d0e);
        %59 = "4";
        %81 = ($sp - %59);
        %d04 = (%81 + %eb);
        %75 = "0";
        %ae = (%d04 + %75);
        stack[%ae] = %51;
        %d8 = "2";
        %f4 = "1";
        %dd = (%d8 - %f4);
        %5ec = "4";
        %29 = ($sp - %5ec);
        %9c = (%29 + %dd);
        %5c = stack[%9c];
        %dc = "2";
        %33 = ($sp + %dc);
        stack[%33] = %5c;
        %26 = "1";
        %74 = ($sp + %26);
        %b9 = #95;
        stack[%74] = %b9;
        %83 = #d0;
        jump %83;
    }

    proc #95 {
        exit;
    }
}

func func.out {
    proc #d0 {
        %d8c = "2";
        $sp = ($sp + %d8c);
        %9a = "0";
        %74d = ($sp - %9a);
        %6c = stack[%74d];
        out %6c;
        %1b = "2";
        $sp = ($sp - %1b);
        %0b = "1";
        %756 = ($sp + %0b);
        %03 = stack[%756];
        jump %03;
    }
}

func func.in {
    proc #da {
        %34 = "3";
        $sp = ($sp + %34);
        %d03 = "0";
        %fa = ($sp - %d03);
        in;
        stack[%fa] = $answer;
        %2e = "0";
        %97 = ($sp - %2e);
        %3e = stack[%97];
        %b2 = "1";
        %292 = ($sp - %b2);
        %8d = stack[%292];
        %41 = "0";
        %4c = (%8d + %41);
        stack[%4c] = %3e;
        %ab = "3";
        $sp = ($sp - %ab);
        %0c = "1";
        %e2 = ($sp + %0c);
        %44 = stack[%e2];
        jump %44;
    }
}