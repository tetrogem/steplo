main {
    proc #bb {
        $sp = "-1";
        %8d = #38;
        jump %8d;
    }
}

func main {
    proc #38 {
        %8a = "12";
        $sp = ($sp + %8a);
        %37 = "98";
        %a0 = "10";
        %2a = ($sp - %a0);
        %32 = "0";
        %77 = (%2a + %32);
        stack[%77] = %37;
        %96 = "76";
        %c9 = "10";
        %98 = ($sp - %c9);
        %7f = "1";
        %10 = (%98 + %7f);
        stack[%10] = %96;
        %db = "54";
        %ec = "10";
        %a9 = ($sp - %ec);
        %81 = "2";
        %7e = (%a9 + %81);
        stack[%7e] = %db;
        %d9 = "32";
        %6a = "10";
        %969 = ($sp - %6a);
        %f2 = "3";
        %6d = (%969 + %f2);
        stack[%6d] = %d9;
        %c0 = "90";
        %4a = "10";
        %c01 = ($sp - %4a);
        %20 = "4";
        %67 = (%c01 + %20);
        stack[%67] = %c0;
        %b9 = "80";
        %0b = "10";
        %dd = ($sp - %0b);
        %8dd = "5";
        %d0 = (%dd + %8dd);
        stack[%d0] = %b9;
        %fb = "70";
        %c5 = "10";
        %e4 = ($sp - %c5);
        %7f5 = "6";
        %1b = (%e4 + %7f5);
        stack[%1b] = %fb;
        %a3 = "60";
        %5c = "10";
        %11 = ($sp - %5c);
        %49 = "7";
        %495 = (%11 + %49);
        stack[%495] = %a3;
        %b8 = "50";
        %86 = "10";
        %f9 = ($sp - %86);
        %95 = "8";
        %987 = (%f9 + %95);
        stack[%987] = %b8;
        %52 = "40";
        %4a5 = "10";
        %6d5 = ($sp - %4a5);
        %868 = "9";
        %bc = (%6d5 + %868);
        stack[%bc] = %52;
        %ca = "10";
        %9a = ($sp - %ca);
        %99 = "0";
        %1c = ($sp - %99);
        %00 = "0";
        %82 = (%1c + %00);
        stack[%82] = %9a;
        %3e = "1";
        %36 = "10";
        %35 = ($sp - %36);
        %6c = (%35 + %3e);
        %74 = stack[%6c];
        %74e = "2";
        %51 = ($sp + %74e);
        stack[%51] = %74;
        %ba = "1";
        %11a = ($sp + %ba);
        %f6 = #d5;
        stack[%11a] = %f6;
        %2e = #dc;
        jump %2e;
    }

    proc #d5 {
        %1d = "10";
        %54 = ($sp - %1d);
        %57 = "1";
        %a8 = (%54 + %57);
        %109 = stack[%a8];
        %b1 = "2";
        %513 = ($sp + %b1);
        stack[%513] = %109;
        %f69 = "1";
        %41 = ($sp + %f69);
        %68 = #3e0;
        stack[%41] = %68;
        %78 = #dc;
        jump %78;
    }

    proc #3e0 {
        %811 = "1";
        %e0 = "0";
        %7a = ($sp - %e0);
        %d04 = stack[%7a];
        %58 = (%d04 + %811);
        %22 = stack[%58];
        %c9b = "2";
        %3c = ($sp + %c9b);
        stack[%3c] = %22;
        %3cb = "1";
        %b9a = ($sp + %3cb);
        %41b = #92;
        stack[%b9a] = %41b;
        %dda = #dc;
        jump %dda;
    }

    proc #92 {
        %0e = "0";
        %87 = ($sp - %0e);
        %2ac = stack[%87];
        %9af = "1";
        %879 = (%2ac + %9af);
        %fa = stack[%879];
        %a1 = "2";
        %1a = ($sp + %a1);
        stack[%1a] = %fa;
        %bd = "1";
        %e1 = ($sp + %bd);
        %42 = #66;
        stack[%e1] = %42;
        %30 = #dc;
        jump %30;
    }

    proc #66 {
        exit;
    }
}

func func.out {
    proc #dc {
        %988 = "2";
        $sp = ($sp + %988);
        %6ae = "0";
        %3b = ($sp - %6ae);
        %dcd = stack[%3b];
        out %dcd;
        %ba7 = "2";
        $sp = ($sp - %ba7);
        %94 = "1";
        %5cb = ($sp + %94);
        %48 = stack[%5cb];
        jump %48;
    }
}

func func.in {
    proc #18 {
        %95b = "3";
        $sp = ($sp + %95b);
        %19 = "0";
        %80 = ($sp - %19);
        in;
        stack[%80] = $answer;
        %0f = "0";
        %a7 = ($sp - %0f);
        %45 = stack[%a7];
        %0f2 = "1";
        %b4 = ($sp - %0f2);
        %d4 = stack[%b4];
        %c7 = "0";
        %f5 = (%d4 + %c7);
        stack[%f5] = %45;
        %5d = "3";
        $sp = ($sp - %5d);
        %44 = "1";
        %9d = ($sp + %44);
        %da = stack[%9d];
        jump %da;
    }
}