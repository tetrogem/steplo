main {
    proc #10 {
        $sp = "-1";
        %cb = #0b;
        jump %cb;
    }
}

func main {
    proc #0b {
        %d2 = "12";
        $sp = ($sp + %d2);
        %37 = "98";
        %a9 = "10";
        %09 = ($sp - %a9);
        %c5 = "0";
        %de = (%09 + %c5);
        stack[%de] = %37;
        %37c = "76";
        %8d = "10";
        %26 = ($sp - %8d);
        %60 = "1";
        %d1 = (%26 + %60);
        stack[%d1] = %37c;
        %c2 = "54";
        %cf = "10";
        %3d = ($sp - %cf);
        %a1 = "2";
        %5a = (%3d + %a1);
        stack[%5a] = %c2;
        %2e = "32";
        %50 = "10";
        %06 = ($sp - %50);
        %96 = "3";
        %46 = (%06 + %96);
        stack[%46] = %2e;
        %01 = "90";
        %6d = "10";
        %c0 = ($sp - %6d);
        %2d = "4";
        %ae = (%c0 + %2d);
        stack[%ae] = %01;
        %ac = "80";
        %df = "10";
        %4b = ($sp - %df);
        %93 = "5";
        %48 = (%4b + %93);
        stack[%48] = %ac;
        %e9 = "70";
        %5d = "10";
        %cb8 = ($sp - %5d);
        %b6 = "6";
        %9c = (%cb8 + %b6);
        stack[%9c] = %e9;
        %c1 = "60";
        %60d = "10";
        %8f = ($sp - %60d);
        %c54 = "7";
        %ca = (%8f + %c54);
        stack[%ca] = %c1;
        %b9 = "50";
        %77 = "10";
        %c29 = ($sp - %77);
        %d11 = "8";
        %ad = (%c29 + %d11);
        stack[%ad] = %b9;
        %cfe = "40";
        %add = "10";
        %36 = ($sp - %add);
        %9ca = "9";
        %8f0 = (%36 + %9ca);
        stack[%8f0] = %cfe;
        %064 = "10";
        %d22 = ($sp - %064);
        %b3 = "0";
        %f1 = ($sp - %b3);
        %8a = "0";
        %14 = (%f1 + %8a);
        stack[%14] = %d22;
        %eb = "1";
        %369 = "10";
        %8c = ($sp - %369);
        %15 = (%8c + %eb);
        %601 = stack[%15];
        %04 = "2";
        %05 = ($sp + %04);
        stack[%05] = %601;
        %c4 = "1";
        %21 = ($sp + %c4);
        %5a2 = #b4;
        stack[%21] = %5a2;
        %d7 = #cb2;
        jump %d7;
    }

    proc #b4 {
        %2a = "10";
        %49 = ($sp - %2a);
        %4c = "1";
        %c9 = (%49 + %4c);
        %35 = stack[%c9];
        %1b = "2";
        %0d = ($sp + %1b);
        stack[%0d] = %35;
        %ed = "1";
        %56 = ($sp + %ed);
        %1c = #0e;
        stack[%56] = %1c;
        %97 = #cb2;
        jump %97;
    }

    proc #0e {
        %a96 = "1";
        %c7 = "0";
        %1d = ($sp - %c7);
        %9e = stack[%1d];
        %1a = (%9e + %a96);
        %3dc = stack[%1a];
        %0de = "2";
        %ff = ($sp + %0de);
        stack[%ff] = %3dc;
        %b4f = "1";
        %e1 = ($sp + %b4f);
        %42 = #93a;
        stack[%e1] = %42;
        %29 = #cb2;
        jump %29;
    }

    proc #93a {
        %b34 = "0";
        %60e = ($sp - %b34);
        %18 = stack[%60e];
        %c06 = "1";
        %84 = (%18 + %c06);
        %92 = stack[%84];
        %ffa = "2";
        %1d0 = ($sp + %ffa);
        stack[%1d0] = %92;
        %45 = "1";
        %77b = ($sp + %45);
        %7e = #aa;
        stack[%77b] = %7e;
        %9a = #cb2;
        jump %9a;
    }

    proc #aa {
        exit;
    }
}

func func.out {
    proc #cb2 {
        %b7 = "2";
        $sp = ($sp + %b7);
        %f5 = "0";
        %fa = ($sp - %f5);
        %28 = stack[%fa];
        out %28;
        %87 = "2";
        $sp = ($sp - %87);
        %65 = "1";
        %be = ($sp + %65);
        %30 = stack[%be];
        jump %30;
    }
}

func func.in {
    proc #a3 {
        %8af = "3";
        $sp = ($sp + %8af);
        %c71 = "0";
        %fd = ($sp - %c71);
        in;
        stack[%fd] = $answer;
        %845 = "0";
        %62 = ($sp - %845);
        %f55 = stack[%62];
        %7f = "1";
        %75 = ($sp - %7f);
        %d5 = stack[%75];
        %bf = "0";
        %11 = (%d5 + %bf);
        stack[%11] = %f55;
        %8f6 = "3";
        $sp = ($sp - %8f6);
        %96b = "1";
        %c1f = ($sp + %96b);
        %89 = stack[%c1f];
        jump %89;
    }
}