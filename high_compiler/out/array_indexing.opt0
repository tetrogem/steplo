main {
    proc #38 {
        $sp = "-1";
        %12 = #e0;
        jump %12;
    }
}

func main {
    proc #e0 {
        %47 = "12";
        $sp = ($sp + %47);
        %da = "98";
        %7d = "10";
        %9a = ($sp - %7d);
        %9d = "0";
        %cf = (%9a + %9d);
        stack[%cf] = %da;
        %90 = "76";
        %ac = "10";
        %34 = ($sp - %ac);
        %eb = "1";
        %73 = (%34 + %eb);
        stack[%73] = %90;
        %ce = "54";
        %42 = "10";
        %16 = ($sp - %42);
        %d8 = "2";
        %f3 = (%16 + %d8);
        stack[%f3] = %ce;
        %46 = "32";
        %d88 = "10";
        %1c = ($sp - %d88);
        %96 = "3";
        %dc = (%1c + %96);
        stack[%dc] = %46;
        %67 = "90";
        %14 = "10";
        %5f = ($sp - %14);
        %6a = "4";
        %1e = (%5f + %6a);
        stack[%1e] = %67;
        %d2 = "80";
        %be = "10";
        %ff = ($sp - %be);
        %fa = "5";
        %8c = (%ff + %fa);
        stack[%8c] = %d2;
        %36 = "70";
        %a1 = "10";
        %19 = ($sp - %a1);
        %1b = "6";
        %65 = (%19 + %1b);
        stack[%65] = %36;
        %d7 = "60";
        %901 = "10";
        %80 = ($sp - %901);
        %50 = "7";
        %9f = (%80 + %50);
        stack[%9f] = %d7;
        %1f = "50";
        %69 = "10";
        %904 = ($sp - %69);
        %2e = "8";
        %bed = (%904 + %2e);
        stack[%bed] = %1f;
        %b7 = "40";
        %79 = "10";
        %4a = ($sp - %79);
        %00 = "9";
        %ad = (%4a + %00);
        stack[%ad] = %b7;
        %5ff = "10";
        %aa = ($sp - %5ff);
        %dce = "0";
        %1a = ($sp - %dce);
        %94 = "0";
        %c3 = (%1a + %94);
        stack[%c3] = %aa;
        %968 = "1";
        %6e = "10";
        %32 = ($sp - %6e);
        %6d = (%32 + %968);
        %37 = stack[%6d];
        %2a = "2";
        %a0 = ($sp + %2a);
        stack[%a0] = %37;
        %f2 = "1";
        %93 = ($sp + %f2);
        %1c0 = #09;
        stack[%93] = %1c0;
        %f4 = #3a;
        jump %f4;
    }

    proc #09 {
        %43 = "10";
        %5c = ($sp - %43);
        %27 = "1";
        %83 = (%5c + %27);
        %67c = stack[%83];
        %70 = "2";
        %a8 = ($sp + %70);
        stack[%a8] = %67c;
        %d9 = "1";
        %6a2 = ($sp + %d9);
        %3c = #8d;
        stack[%6a2] = %3c;
        %43a = #3a;
        jump %43a;
    }

    proc #8d {
        %3b = "0";
        %d78 = ($sp - %3b);
        %e0f = stack[%d78];
        %df = "1";
        %71 = (%e0f + %df);
        %53 = stack[%71];
        %2f = "2";
        %84 = ($sp + %2f);
        stack[%84] = %53;
        %d3 = "1";
        %06 = ($sp + %d3);
        %97 = #48;
        stack[%06] = %97;
        %a80 = #3a;
        jump %a80;
    }

    proc #48 {
        exit;
    }
}

func func.out {
    proc #3a {
        %0f = "2";
        $sp = ($sp + %0f);
        %83c = "0";
        %675 = ($sp - %83c);
        %d8d = stack[%675];
        out %d8d;
        %23 = "2";
        $sp = ($sp - %23);
        %e4 = "1";
        %11 = ($sp + %e4);
        %d35 = stack[%11];
        jump %d35;
    }
}

func func.in {
    proc #92 {
        %24 = "3";
        $sp = ($sp + %24);
        %b9 = "0";
        %831 = ($sp - %b9);
        in;
        stack[%831] = $answer;
        %52 = "0";
        %d22 = ($sp - %52);
        %74 = stack[%d22];
        %e9 = "1";
        %6f = ($sp - %e9);
        %31 = stack[%6f];
        %9b = "0";
        %50f = (%31 + %9b);
        stack[%50f] = %74;
        %9d9 = "3";
        $sp = ($sp - %9d9);
        %40 = "1";
        %7f = ($sp + %40);
        %922 = stack[%7f];
        jump %922;
    }
}