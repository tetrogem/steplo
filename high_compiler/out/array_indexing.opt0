main {
    proc #e6 {
        $sp = "-1";
        %c2 = #db;
        jump %c2;
    }
}

func main {
    proc #db {
        %0c = "12";
        $sp = ($sp + %0c);
        %b8 = "98";
        %08 = "10";
        %ef = ($sp - %08);
        %4a = "0";
        %a1 = (%ef + %4a);
        stack[%a1] = %b8;
        %43 = "76";
        %a4 = "10";
        %e9 = ($sp - %a4);
        %8a = "1";
        %bb = (%e9 + %8a);
        stack[%bb] = %43;
        %7e = "54";
        %ea = "10";
        %fd = ($sp - %ea);
        %f4 = "2";
        %71 = (%fd + %f4);
        stack[%71] = %7e;
        %69 = "32";
        %30 = "10";
        %46 = ($sp - %30);
        %bd = "3";
        %01 = (%46 + %bd);
        stack[%01] = %69;
        %e1 = "90";
        %73 = "10";
        %dc = ($sp - %73);
        %a7 = "4";
        %c8 = (%dc + %a7);
        stack[%c8] = %e1;
        %c5 = "80";
        %732 = "10";
        %1d = ($sp - %732);
        %7a = "5";
        %66 = (%1d + %7a);
        stack[%66] = %c5;
        %0d = "70";
        %a7a = "10";
        %07 = ($sp - %a7a);
        %5f = "6";
        %41 = (%07 + %5f);
        stack[%41] = %0d;
        %ad = "60";
        %ab = "10";
        %b4 = ($sp - %ab);
        %a79 = "7";
        %64 = (%b4 + %a79);
        stack[%64] = %ad;
        %fb = "50";
        %3c = "10";
        %d7 = ($sp - %3c);
        %8d = "8";
        %5d = (%d7 + %8d);
        stack[%5d] = %fb;
        %e8 = "40";
        %d0 = "10";
        %47 = ($sp - %d0);
        %93 = "9";
        %5c = (%47 + %93);
        stack[%5c] = %e8;
        %81 = "10";
        %6e = ($sp - %81);
        %bbd = "0";
        %e5 = ($sp - %bbd);
        %52 = "0";
        %f2 = (%e5 + %52);
        stack[%f2] = %6e;
        %c3 = "1";
        %05 = "10";
        %87 = ($sp - %05);
        %53 = (%87 + %c3);
        %9a = stack[%53];
        %e66 = "2";
        %fa = ($sp + %e66);
        stack[%fa] = %9a;
        %059 = "1";
        %46c = ($sp + %059);
        %39 = #16;
        stack[%46c] = %39;
        %af = #b1;
        jump %af;
    }

    proc #16 {
        %efc = "10";
        %d75 = ($sp - %efc);
        %2a = "1";
        %fa7 = (%d75 + %2a);
        %59 = stack[%fa7];
        %60 = "2";
        %76 = ($sp + %60);
        stack[%76] = %59;
        %d9 = "1";
        %27 = ($sp + %d9);
        %1e = #68;
        stack[%27] = %1e;
        %d5 = #b1;
        jump %d5;
    }

    proc #68 {
        %91 = "1";
        %a14 = "0";
        %4f = ($sp - %a14);
        %3d = stack[%4f];
        %29 = (%3d + %91);
        %63 = stack[%29];
        %ca = "2";
        %aa = ($sp + %ca);
        stack[%aa] = %63;
        %d1 = "1";
        %1ee = ($sp + %d1);
        %91d = #308;
        stack[%1ee] = %91d;
        %f4c = #b1;
        jump %f4c;
    }

    proc #308 {
        %c24 = "0";
        %74 = ($sp - %c24);
        %24 = stack[%74];
        %b3 = "1";
        %397 = (%24 + %b3);
        %fd4 = stack[%397];
        %7f = "2";
        %43c = ($sp + %7f);
        stack[%43c] = %fd4;
        %f7 = "1";
        %8e = ($sp + %f7);
        %38 = #8b;
        stack[%8e] = %38;
        %11 = #b1;
        jump %11;
    }

    proc #8b {
        exit;
    }
}

func func.out {
    proc #b1 {
        %ab3 = "2";
        $sp = ($sp + %ab3);
        %90 = "0";
        %5ce = ($sp - %90);
        %ee = stack[%5ce];
        out %ee;
        %bb7 = "2";
        $sp = ($sp - %bb7);
        %c5b = "1";
        %8ab = ($sp + %c5b);
        %de = stack[%8ab];
        jump %de;
    }
}

func func.in {
    proc #13 {
        %49 = "3";
        $sp = ($sp + %49);
        %7b = "0";
        %fe = ($sp - %7b);
        in;
        stack[%fe] = $answer;
        %98 = "0";
        %b41 = ($sp - %98);
        %bd6 = stack[%b41];
        %99 = "1";
        %f8 = ($sp - %99);
        %5b = stack[%f8];
        %75 = "0";
        %51 = (%5b + %75);
        stack[%51] = %bd6;
        %013 = "3";
        $sp = ($sp - %013);
        %fe0 = "1";
        %605 = ($sp + %fe0);
        %84 = stack[%605];
        jump %84;
    }
}