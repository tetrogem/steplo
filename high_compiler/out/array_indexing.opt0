main {
    proc #6a {
        $sp = "-1";
        %c5 = #46;
        jump %c5;
    }
}

func main {
    proc #46 {
        %89 = "12";
        $sp = ($sp + %89);
        %b9 = "98";
        %90 = "10";
        %da = ($sp - %90);
        %6c = "0";
        %af = (%da + %6c);
        stack[%af] = %b9;
        %65 = "76";
        %9b = "10";
        %20 = ($sp - %9b);
        %894 = "1";
        %ea = (%20 + %894);
        stack[%ea] = %65;
        %83 = "54";
        %c7 = "10";
        %38 = ($sp - %c7);
        %8e = "2";
        %cf = (%38 + %8e);
        stack[%cf] = %83;
        %4d = "32";
        %92 = "10";
        %ce = ($sp - %92);
        %71 = "3";
        %2d = (%ce + %71);
        stack[%2d] = %4d;
        %a1 = "90";
        %afe = "10";
        %72 = ($sp - %afe);
        %43 = "4";
        %05 = (%72 + %43);
        stack[%05] = %a1;
        %7b = "80";
        %e5 = "10";
        %09 = ($sp - %e5);
        %1a = "5";
        %75 = (%09 + %1a);
        stack[%75] = %7b;
        %11 = "70";
        %431 = "10";
        %752 = ($sp - %431);
        %63 = "6";
        %22 = (%752 + %63);
        stack[%22] = %11;
        %8a = "60";
        %c1 = "10";
        %51 = ($sp - %c1);
        %24 = "7";
        %02 = (%51 + %24);
        stack[%02] = %8a;
        %c2 = "50";
        %45 = "10";
        %27 = ($sp - %45);
        %f4 = "8";
        %830 = (%27 + %f4);
        stack[%830] = %c2;
        %e0 = "40what";
        %d7 = "10";
        %ab = ($sp - %d7);
        %4db = "9";
        %72f = (%ab + %4db);
        stack[%72f] = %e0;
        %c0 = "10";
        %28 = ($sp - %c0);
        %c06 = "0";
        %6ab = ($sp - %c06);
        %33 = "0";
        %8c = (%6ab + %33);
        stack[%8c] = %28;
        %e1 = "1";
        %1d = "10";
        %60 = ($sp - %1d);
        %d7f = (%60 + %e1);
        %54 = stack[%d7f];
        %01 = "2";
        %905 = ($sp + %01);
        stack[%905] = %54;
        %f2 = "1";
        %2a = ($sp + %f2);
        %5e = #23;
        stack[%2a] = %5e;
        %5ec = #39;
        jump %5ec;
    }

    proc #23 {
        %458 = "10";
        %d9 = ($sp - %458);
        %47 = "1";
        %9f = (%d9 + %47);
        %78 = stack[%9f];
        %3b = "2";
        %10 = ($sp + %3b);
        stack[%10] = %78;
        %b3 = "1";
        %4c = ($sp + %b3);
        %26 = #6d;
        stack[%4c] = %26;
        %73 = #39;
        jump %73;
    }

    proc #6d {
        %d6 = "1";
        %73a = "0";
        %a5 = ($sp - %73a);
        %ef = stack[%a5];
        %7e = (%ef + %d6);
        %d94 = stack[%7e];
        %55 = "2";
        %e08 = ($sp + %55);
        stack[%e08] = %d94;
        %0a = "1";
        %b1 = ($sp + %0a);
        %f6 = #2e;
        stack[%b1] = %f6;
        %656 = #39;
        jump %656;
    }

    proc #2e {
        %ba = "0";
        %7c = ($sp - %ba);
        %76 = stack[%7c];
        %3a = "1";
        %eff = (%76 + %3a);
        %ec = stack[%eff];
        %7d = "2";
        %a4 = ($sp + %7d);
        stack[%a4] = %ec;
        %26e = "1";
        %ed = ($sp + %26e);
        %00 = #3c;
        stack[%ed] = %00;
        %69 = #39;
        jump %69;
    }

    proc #3c {
        exit;
    }
}

func func.out {
    proc #39 {
        %3d = "2";
        $sp = ($sp + %3d);
        %017 = "0";
        %0d = ($sp - %017);
        %e3 = stack[%0d];
        out %e3;
        %18 = "2";
        $sp = ($sp - %18);
        %002 = "1";
        %60a = ($sp + %002);
        %16 = stack[%60a];
        jump %16;
    }
}

func func.in {
    proc #e1e {
        %be = "3";
        $sp = ($sp + %be);
        %9fe = "0";
        %c3 = ($sp - %9fe);
        in;
        stack[%c3] = $answer;
        %1c = "0";
        %a2 = ($sp - %1c);
        %db = stack[%a2];
        %4a = "1";
        %3b1 = ($sp - %4a);
        %4f = stack[%3b1];
        %4e = "0";
        %09e = (%4f + %4e);
        stack[%09e] = %db;
        %dc = "3";
        $sp = ($sp - %dc);
        %ed5 = "1";
        %fd = ($sp + %ed5);
        %72c = stack[%fd];
        jump %72c;
    }
}