main {
    proc #8f {
        $sp = "-1";
        %9a = #16;
        jump %9a;
    }
}

func main {
    proc #16 {
        %3c = "12";
        $sp = ($sp + %3c);
        %b9 = "98";
        %54 = "10";
        %3d = ($sp - %54);
        %8e = "0";
        %57 = (%3d + %8e);
        stack[%57] = %b9;
        %0c = "76";
        %df = "10";
        %8e0 = ($sp - %df);
        %7d = "1";
        %db = (%8e0 + %7d);
        stack[%db] = %0c;
        %2b = "54";
        %c7 = "10";
        %13 = ($sp - %c7);
        %c0 = "2";
        %82 = (%13 + %c0);
        stack[%82] = %2b;
        %36 = "32";
        %94 = "10";
        %42 = ($sp - %94);
        %68 = "3";
        %1d = (%42 + %68);
        stack[%1d] = %36;
        %e5 = "90";
        %fe = "10";
        %7dc = ($sp - %fe);
        %17 = "4";
        %ae = (%7dc + %17);
        stack[%ae] = %e5;
        %cb = "80";
        %48 = "10";
        %1d9 = ($sp - %48);
        %2c = "5";
        %f2 = (%1d9 + %2c);
        stack[%f2] = %cb;
        %fa = "70";
        %88 = "10";
        %85 = ($sp - %88);
        %5c = "6";
        %25 = (%85 + %5c);
        stack[%25] = %fa;
        %8a = "60";
        %65 = "10";
        %77 = ($sp - %65);
        %fc = "7";
        %31 = (%77 + %fc);
        stack[%31] = %8a;
        %ea = "50";
        %eb = "10";
        %4e = ($sp - %eb);
        %96 = "8";
        %0d = (%4e + %96);
        stack[%0d] = %ea;
        %c2 = "40";
        %77b = "10";
        %03 = ($sp - %77b);
        %7f = "9";
        %5d = (%03 + %7f);
        stack[%5d] = %c2;
        %53 = "10";
        %94b = ($sp - %53);
        %c4 = "0";
        %bb = ($sp - %c4);
        %56 = "0";
        %2c2 = (%bb + %56);
        stack[%2c2] = %94b;
        %38 = "1";
        %a8 = "10";
        %32 = ($sp - %a8);
        %28 = (%32 + %38);
        %2a = stack[%28];
        %cc = "2";
        %19 = ($sp + %cc);
        stack[%19] = %2a;
        %74 = "1";
        %00 = ($sp + %74);
        %37 = #d6;
        stack[%00] = %37;
        %be = #d4;
        jump %be;
    }

    proc #d6 {
        %cc2 = "10";
        %67 = ($sp - %cc2);
        %5e = "1";
        %6d = (%67 + %5e);
        %8d = stack[%6d];
        %b94 = "2";
        %71 = ($sp + %b94);
        stack[%71] = %8d;
        %6e = "1";
        %87 = ($sp + %6e);
        %21 = #97;
        stack[%87] = %21;
        %91 = #d4;
        jump %91;
    }

    proc #97 {
        %321 = "1";
        %7e = "0";
        %27 = ($sp - %7e);
        %0a = stack[%27];
        %af = (%0a + %321);
        %08 = stack[%af];
        %84 = "2";
        %ba = ($sp + %84);
        stack[%ba] = %08;
        %08b = "1";
        %a6 = ($sp + %08b);
        %29 = #d6e;
        stack[%a6] = %29;
        %51 = #d4;
        jump %51;
    }

    proc #d6e {
        %8fb = "0";
        %86 = ($sp - %8fb);
        %2d = stack[%86];
        %99 = "1";
        %41 = (%2d + %99);
        %9b = stack[%41];
        %1a = "2";
        %7a = ($sp + %1a);
        stack[%7a] = %9b;
        %47 = "1";
        %8a4 = ($sp + %47);
        %58 = #9f;
        stack[%8a4] = %58;
        %d8 = #d4;
        jump %d8;
    }

    proc #9f {
        exit;
    }
}

func func.out {
    proc #d4 {
        %78 = "2";
        $sp = ($sp + %78);
        %7d0 = "0";
        %23 = ($sp - %7d0);
        %3da = stack[%23];
        out %3da;
        %6b = "2";
        $sp = ($sp - %6b);
        %588 = "1";
        %c6 = ($sp + %588);
        %dc = stack[%c6];
        jump %dc;
    }
}

func func.in {
    proc #e3 {
        %d7 = "3";
        $sp = ($sp + %d7);
        %86f = "0";
        %874 = ($sp - %86f);
        in;
        stack[%874] = $answer;
        %a5 = "0";
        %8dc = ($sp - %a5);
        %f7 = stack[%8dc];
        %c5 = "1";
        %a9 = ($sp - %c5);
        %da = stack[%a9];
        %f8 = "0";
        %5d0 = (%da + %f8);
        stack[%5d0] = %f7;
        %62 = "3";
        $sp = ($sp - %62);
        %f2a = "1";
        %11 = ($sp + %f2a);
        %ac = stack[%11];
        jump %ac;
    }
}