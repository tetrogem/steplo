main {
    proc #0a {
        $sp = "-1";
        %a8 = #9a;
        jump %a8;
    }
}

func main {
    proc #9a {
        %10 = "6";
        $sp = ($sp + %10);
        %d9 = "10";
        %c1 = "4";
        %f1 = ($sp - %c1);
        %6e = "0";
        %73 = (%f1 + %6e);
        stack[%73] = %d9;
        %f3 = "hello";
        %6ed = "3";
        %51 = ($sp - %6ed);
        %4b = "0";
        %de = (%51 + %4b);
        stack[%de] = %f3;
        %00 = "4";
        %fa = ($sp - %00);
        %07 = stack[%fa];
        %52 = "3";
        %49 = ($sp - %52);
        %03 = "0";
        %0c = (%49 + %03);
        stack[%0c] = %07;
        %56 = "3";
        %6c = ($sp - %56);
        %09 = stack[%6c];
        %68 = "4";
        %ca = ($sp - %68);
        %fb = "0";
        %ff = (%ca + %fb);
        stack[%ff] = %09;
        %27 = "4";
        %5b = ($sp - %27);
        %ab = "2";
        %ffe = ($sp - %ab);
        %d7 = "0";
        %2c = (%ffe + %d7);
        stack[%2c] = %5b;
        %ff2 = "3";
        %42 = ($sp - %ff2);
        %7c = "1";
        %69 = ($sp - %7c);
        %4d = "0";
        %1e = (%69 + %4d);
        stack[%1e] = %42;
        %c9 = "2";
        %fe = ($sp - %c9);
        %d6 = stack[%fe];
        %9b = "1";
        %ea = ($sp - %9b);
        %736 = "0";
        %45 = (%ea + %736);
        stack[%45] = %d6;
        %0f = "1";
        %f8 = ($sp - %0f);
        %37 = stack[%f8];
        %76 = "2";
        %8a = ($sp - %76);
        %d1 = "0";
        %19 = (%8a + %d1);
        stack[%19] = %37;
        %ca2 = "2";
        %44 = ($sp - %ca2);
        %cf = stack[%44];
        %422 = "3";
        %de0 = ($sp - %422);
        %78 = "0";
        %f15 = (%de0 + %78);
        stack[%f15] = %cf;
        %0b = "1";
        %ad = ($sp - %0b);
        %738 = stack[%ad];
        %79 = "3";
        %1e5 = ($sp - %79);
        %761 = "0";
        %2a = (%1e5 + %761);
        stack[%2a] = %738;
        %4bf = "3";
        %3a = ($sp - %4bf);
        %83 = stack[%3a];
        %d62 = "2";
        %8d = ($sp - %d62);
        %1a = "0";
        %95 = (%8d + %1a);
        stack[%95] = %83;
        %a1 = "3";
        %f5 = ($sp - %a1);
        %2e = stack[%f5];
        %d2 = "1";
        %c5 = ($sp - %d2);
        %525 = "0";
        %d3 = (%c5 + %525);
        stack[%d3] = %2e;
        %1d = "10";
        %88 = "0";
        %e6 = ($sp - %88);
        %5d = "0";
        %25 = (%e6 + %5d);
        stack[%25] = %1d;
        %75 = "0";
        %d63 = ($sp - %75);
        %90 = stack[%d63];
        %d8 = "4";
        %80 = ($sp - %d8);
        %ff1 = "0";
        %b6 = (%80 + %ff1);
        stack[%b6] = %90;
        %32 = "4";
        %85 = ($sp - %32);
        %20 = stack[%85];
        %f87 = "0";
        %e63 = ($sp - %f87);
        %eb = "0";
        %9a4 = (%e63 + %eb);
        stack[%9a4] = %20;
        %fc = "1";
        %db = ($sp - %fc);
        %3ae = stack[%db];
        %36 = "3";
        %0c2 = ($sp - %36);
        %8c = "0";
        %76f = (%0c2 + %8c);
        stack[%76f] = %3ae;
        %fd = "1";
        %ea5 = ($sp - %fd);
        %d0 = stack[%ea5];
        %2a7 = "4";
        %fbb = ($sp - %2a7);
        %6f = "0";
        %df = (%fbb + %6f);
        stack[%df] = %d0;
        %b9 = "1";
        %15 = ($sp - %b9);
        %16 = stack[%15];
        %01 = "0";
        %53 = ($sp - %01);
        %8a2 = "0";
        %455 = (%53 + %8a2);
        stack[%455] = %16;
        %c3 = "3";
        %70 = ($sp - %c3);
        %cc = stack[%70];
        %f0 = "3";
        %b9c = ($sp - %f0);
        %b1 = "0";
        %3d = (%b9c + %b1);
        stack[%3d] = %cc;
        %ac = "4";
        %196 = ($sp - %ac);
        %aba = stack[%196];
        %a2 = "4";
        %a9 = ($sp - %a2);
        %902 = "0";
        %70c = (%a9 + %902);
        stack[%70c] = %aba;
        %62 = "1";
        %93 = ($sp - %62);
        %3b = stack[%93];
        %8b = "1";
        %9d = ($sp - %8b);
        %0fa = "0";
        %aa = (%9d + %0fa);
        stack[%aa] = %3b;
        %72 = "2";
        %9e = ($sp - %72);
        %d38 = stack[%9e];
        %8e = "2";
        %a0 = ($sp - %8e);
        %447 = "0";
        %48 = (%a0 + %447);
        stack[%48] = %d38;
        %7e = "4";
        %cd = ($sp - %7e);
        %366 = stack[%cd];
        %54 = "3";
        %60 = ($sp - %54);
        %735 = "0";
        %ed = (%60 + %735);
        stack[%ed] = %366;
        %4b4 = "4";
        %6fb = ($sp - %4b4);
        %3e = stack[%6fb];
        %037 = "3";
        %24 = ($sp - %037);
        %889 = "0";
        %56b = (%24 + %889);
        stack[%56b] = %3e;
        %4e = "0";
        %9c = ($sp - %4e);
        %0b3 = stack[%9c];
        %20b = "4";
        %7ec = ($sp - %20b);
        %c7 = "0";
        %e3 = (%7ec + %c7);
        stack[%e3] = %0b3;
        %84 = "0";
        %40 = ($sp - %84);
        %20bd = stack[%40];
        %b9e = "4";
        %c34 = ($sp - %b9e);
        %6a = "0";
        %61 = (%c34 + %6a);
        stack[%61] = %20bd;
        %c4 = "0";
        %cc9 = ($sp - %c4);
        %57 = stack[%cc9];
        %26 = "3";
        %ec = ($sp - %26);
        %208 = "0";
        %ca0 = (%ec + %208);
        stack[%ca0] = %57;
        %1ed = "0";
        %7c6 = ($sp - %1ed);
        %e2 = stack[%7c6];
        %ee = "3";
        %57a = ($sp - %ee);
        %375 = "0";
        %f9 = (%57a + %375);
        stack[%f9] = %e2;
        %007 = "1";
        %a5 = ($sp - %007);
        %41 = stack[%a5];
        %0aa = "0";
        %1f = ($sp - %0aa);
        %cfd = "0";
        %245 = (%1f + %cfd);
        stack[%245] = %41;
        %40c = "1";
        %8ef = ($sp - %40c);
        %e3b = stack[%8ef];
        %9f = "0";
        %e7 = ($sp - %9f);
        %ec7 = "0";
        %aa3 = (%e7 + %ec7);
        stack[%aa3] = %e3b;
        %5c = "1";
        %243 = ($sp - %5c);
        %90e = stack[%243];
        %edb = "0";
        %6d = ($sp - %edb);
        %69b = "0";
        %02 = (%6d + %69b);
        stack[%02] = %90e;
        %e6d = "1";
        %bf = ($sp - %e6d);
        %50 = stack[%bf];
        %441 = "4";
        %34 = ($sp - %441);
        %faf = "0";
        %38 = (%34 + %faf);
        stack[%38] = %50;
        %a87 = "2";
        %341 = ($sp - %a87);
        %e6e = stack[%341];
        %ce = "4";
        %11 = ($sp - %ce);
        %0e = "0";
        %4c = (%11 + %0e);
        stack[%4c] = %e6e;
        exit;
    }
}

func func.out {
    proc #cc6 {
        %76c = "2";
        $sp = ($sp + %76c);
        %526 = "0";
        %ae = ($sp - %526);
        %c9a = stack[%ae];
        out %c9a;
        %89 = "2";
        $sp = ($sp - %89);
        %882 = "1";
        %ba = ($sp + %882);
        %f4 = stack[%ba];
        jump %f4;
    }
}

func func.in {
    proc #27d {
        %ccb = "3";
        $sp = ($sp + %ccb);
        %5a = "0";
        %cfb = ($sp - %5a);
        in;
        stack[%cfb] = $answer;
        %06 = "0";
        %855 = ($sp - %06);
        %99 = stack[%855];
        %12 = "1";
        %b7 = ($sp - %12);
        %8d2 = stack[%b7];
        %408 = "0";
        %aa2 = (%8d2 + %408);
        stack[%aa2] = %99;
        %eaf = "3";
        $sp = ($sp - %eaf);
        %92 = "1";
        %250 = ($sp + %92);
        %f9d = stack[%250];
        jump %f9d;
    }
}

func func.random_num {
    proc #66 {
        %64 = "5";
        $sp = ($sp + %64);
        %6e1 = "0";
        %ef = ($sp - %6e1);
        %02b = "0.0";
        %ec4 = "1.0";
        stack[%ef] = (%02b <random> %ec4);
        %c99 = "2";
        %e1 = ($sp - %c99);
        %39 = stack[%e1];
        %47 = "0";
        %99b = ($sp - %47);
        %798 = stack[%99b];
        %dc = "1";
        %e2f = ($sp - %dc);
        %18 = stack[%e2f];
        %761f = "2";
        %efa = ($sp - %761f);
        %279 = stack[%efa];
        %e8 = (%18 - %279);
        %57b = (%798 * %e8);
        %ada = (%39 + %57b);
        %47d = "3";
        %63 = ($sp - %47d);
        %f7 = stack[%63];
        %d74 = "0";
        %fcd = (%f7 + %d74);
        stack[%fcd] = %ada;
        %fc3 = "5";
        $sp = ($sp - %fc3);
        %59 = "1";
        %fb3 = ($sp + %59);
        %8e9 = stack[%fb3];
        jump %8e9;
    }
}

func func.random_int {
    proc #81 {
        %b91 = "5";
        $sp = ($sp + %b91);
        %59b = "0";
        %77 = ($sp - %59b);
        %0a5 = "2";
        %3ae7 = ($sp - %0a5);
        %8ce = stack[%3ae7];
        %32d = "1";
        %8e3 = ($sp - %32d);
        %3d3 = stack[%8e3];
        stack[%77] = (%8ce <random> %3d3);
        %8c9 = "0";
        %a01 = ($sp - %8c9);
        %35 = stack[%a01];
        %de6 = "3";
        %076 = ($sp - %de6);
        %772 = stack[%076];
        %ce9 = "0";
        %86 = (%772 + %ce9);
        stack[%86] = %35;
        %c2 = "5";
        $sp = ($sp - %c2);
        %667 = "1";
        %868 = ($sp + %667);
        %5dd = stack[%868];
        jump %5dd;
    }
}

func func.random_uint {
    proc #603 {
        %5f = "5";
        $sp = ($sp + %5f);
        %323 = "0";
        %f2 = ($sp - %323);
        %05 = "2";
        %f19 = ($sp - %05);
        %590 = stack[%f19];
        %8b5 = "1";
        %263 = ($sp - %8b5);
        %b2 = stack[%263];
        stack[%f2] = (%590 <random> %b2);
        %531 = "0";
        %1e3 = ($sp - %531);
        %5c1 = stack[%1e3];
        %4a = "3";
        %b1c = ($sp - %4a);
        %8f = stack[%b1c];
        %30 = "0";
        %351 = (%8f + %30);
        stack[%351] = %5c1;
        %62a = "5";
        $sp = ($sp - %62a);
        %ea1 = "1";
        %a91 = ($sp + %ea1);
        %cdb = stack[%a91];
        jump %cdb;
    }
}