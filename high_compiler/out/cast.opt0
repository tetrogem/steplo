main {
    proc #1f {
        $sp = "-1";
        %21 = #87;
        jump %21;
    }
}

func main {
    proc #87 {
        %11 = "6";
        $sp = ($sp + %11);
        %05 = "10";
        %7d = "4";
        %13 = ($sp - %7d);
        %17 = "0";
        %0b = (%13 + %17);
        stack[%0b] = %05;
        %97 = "hello";
        %18 = "3";
        %b9 = ($sp - %18);
        %7f = "0";
        %f5 = (%b9 + %7f);
        stack[%f5] = %97;
        %90 = "4";
        %98 = ($sp - %90);
        %43 = stack[%98];
        %3c = "3";
        %4c = ($sp - %3c);
        %c3 = "0";
        %e0 = (%4c + %c3);
        stack[%e0] = %43;
        %85 = "3";
        %6c = ($sp - %85);
        %fc = stack[%6c];
        %d4 = "4";
        %f5c = ($sp - %d4);
        %a3 = "0";
        %20 = (%f5c + %a3);
        stack[%20] = %fc;
        %a9 = "4";
        %ef = ($sp - %a9);
        %e1 = "2";
        %69 = ($sp - %e1);
        %f2 = "0";
        %2f = (%69 + %f2);
        stack[%2f] = %ef;
        %1fb = "3";
        %41 = ($sp - %1fb);
        %da = "1";
        %c32 = ($sp - %da);
        %c8 = "0";
        %df = (%c32 + %c8);
        stack[%df] = %41;
        %cd = "2";
        %b9d = ($sp - %cd);
        %88 = stack[%b9d];
        %9a = "1";
        %ed = ($sp - %9a);
        %5a = "0";
        %1d = (%ed + %5a);
        stack[%1d] = %88;
        %a2 = "1";
        %4b = ($sp - %a2);
        %20e = stack[%4b];
        %c4 = "2";
        %c34 = ($sp - %c4);
        %f3 = "0";
        %65 = (%c34 + %f3);
        stack[%65] = %20e;
        %44 = "2";
        %7b = ($sp - %44);
        %3d = stack[%7b];
        %f0 = "3";
        %d7 = ($sp - %f0);
        %33 = "0";
        %77 = (%d7 + %33);
        stack[%77] = %3d;
        %0a = "1";
        %9b = ($sp - %0a);
        %29 = stack[%9b];
        %12 = "3";
        %fc4 = ($sp - %12);
        %ce = "0";
        %5d = (%fc4 + %ce);
        stack[%5d] = %29;
        %a4 = "3";
        %14 = ($sp - %a4);
        %a5 = stack[%14];
        %71 = "2";
        %a1 = ($sp - %71);
        %15 = "0";
        %6f = (%a1 + %15);
        stack[%6f] = %a5;
        %c0 = "3";
        %b6 = ($sp - %c0);
        %c4e = stack[%b6];
        %86 = "1";
        %76 = ($sp - %86);
        %3c8 = "0";
        %d4b = (%76 + %3c8);
        stack[%d4b] = %c4e;
        %c7 = "10";
        %2fc = "0";
        %975 = ($sp - %2fc);
        %144 = "0";
        %60 = (%975 + %144);
        stack[%60] = %c7;
        %46 = "0";
        %0af = ($sp - %46);
        %a7 = stack[%0af];
        %16 = "4";
        %120 = ($sp - %16);
        %1b = "0";
        %a4e = (%120 + %1b);
        stack[%a4e] = %a7;
        %7e = "4";
        %47 = ($sp - %7e);
        %fb = stack[%47];
        %58 = "0";
        %140 = ($sp - %58);
        %182 = "0";
        %62 = (%140 + %182);
        stack[%62] = %fb;
        %760 = "1";
        %b0 = ($sp - %760);
        %57 = stack[%b0];
        %39 = "3";
        %a8 = ($sp - %39);
        %1c = "0";
        %e5 = (%a8 + %1c);
        stack[%e5] = %57;
        %0bc = "1";
        %33f = ($sp - %0bc);
        %e7 = stack[%33f];
        %08 = "4";
        %d5 = ($sp - %08);
        %e8 = "0";
        %4d = (%d5 + %e8);
        stack[%4d] = %e7;
        %cb = "1";
        %ba = ($sp - %cb);
        %a0 = stack[%ba];
        %128 = "0";
        %866 = ($sp - %128);
        %b3 = "0";
        %5a9 = (%866 + %b3);
        stack[%5a9] = %a0;
        %cc = "3";
        %18a = ($sp - %cc);
        %0c = stack[%18a];
        %b4 = "3";
        %2a = ($sp - %b4);
        %ccb = "0";
        %fd = (%2a + %ccb);
        stack[%fd] = %0c;
        %b05 = "4";
        %fa = ($sp - %b05);
        %b5 = stack[%fa];
        %93 = "4";
        %79 = ($sp - %93);
        %86e = "0";
        %06 = (%79 + %86e);
        stack[%06] = %b5;
        %fe = "1";
        %b8 = ($sp - %fe);
        %59 = stack[%b8];
        %e6 = "1";
        %32 = ($sp - %e6);
        %4dc = "0";
        %171 = (%32 + %4dc);
        stack[%171] = %59;
        %4a = "2";
        %27 = ($sp - %4a);
        %8f = stack[%27];
        %df6 = "2";
        %91 = ($sp - %df6);
        %6b = "0";
        %158 = (%91 + %6b);
        stack[%158] = %8f;
        %0aa = "4";
        %068 = ($sp - %0aa);
        %96 = stack[%068];
        %57a = "3";
        %ad = ($sp - %57a);
        %3f = "0";
        %0d = (%ad + %3f);
        stack[%0d] = %96;
        %654 = "4";
        %4e = ($sp - %654);
        %ef5 = stack[%4e];
        %68 = "3";
        %34 = ($sp - %68);
        %989 = "0";
        %52 = (%34 + %989);
        stack[%52] = %ef5;
        %2e = "0";
        %464 = ($sp - %2e);
        %1b0 = stack[%464];
        %20f = "4";
        %8b = ($sp - %20f);
        %e4 = "0";
        %ad8 = (%8b + %e4);
        stack[%ad8] = %1b0;
        %f01 = "0";
        %10 = ($sp - %f01);
        %16a = stack[%10];
        %b9d5 = "4";
        %415 = ($sp - %b9d5);
        %d9 = "0";
        %416 = (%415 + %d9);
        stack[%416] = %16a;
        %b4b = "0";
        %e3 = ($sp - %b4b);
        %7a = stack[%e3];
        %6a = "3";
        %94 = ($sp - %6a);
        %5b = "0";
        %2f2 = (%94 + %5b);
        stack[%2f2] = %7a;
        %d0 = "0";
        %581 = ($sp - %d0);
        %9be = stack[%581];
        %e1e = "3";
        %47d = ($sp - %e1e);
        %72 = "0";
        %58b = (%47d + %72);
        stack[%58b] = %9be;
        %22 = "1";
        %cba = ($sp - %22);
        %d2 = stack[%cba];
        %b34 = "0";
        %e9 = ($sp - %b34);
        %061 = "0";
        %ae = (%e9 + %061);
        stack[%ae] = %d2;
        %c48 = "1";
        %37 = ($sp - %c48);
        %78 = stack[%37];
        %f7 = "0";
        %c1 = ($sp - %f7);
        %c40 = "0";
        %20ec = (%c1 + %c40);
        stack[%20ec] = %78;
        %d1 = "1";
        %a29 = ($sp - %d1);
        %4f = stack[%a29];
        %f2f = "0";
        %63 = ($sp - %f2f);
        %45 = "0";
        %6e = (%63 + %45);
        stack[%6e] = %4f;
        %961 = "1";
        %a07 = ($sp - %961);
        %c2 = stack[%a07];
        %978 = "4";
        %b7 = ($sp - %978);
        %5f = "0";
        %7c = (%b7 + %5f);
        stack[%7c] = %c2;
        %a3d = "2";
        %b07 = ($sp - %a3d);
        %b1 = stack[%b07];
        %89 = "4";
        %7b3 = ($sp - %89);
        %476 = "0";
        %6ce = (%7b3 + %476);
        stack[%6ce] = %b1;
        exit;
    }
}

func func.out {
    proc #2a7 {
        %d5e = "2";
        $sp = ($sp + %d5e);
        %bd = "0";
        %b6c = ($sp - %bd);
        %1f9 = stack[%b6c];
        out %1f9;
        %39f = "2";
        $sp = ($sp - %39f);
        %398 = "1";
        %272 = ($sp + %398);
        %22b = stack[%272];
        jump %22b;
    }
}

func func.in {
    proc #0b6 {
        %7ee = "3";
        $sp = ($sp + %7ee);
        %1df = "0";
        %e0a = ($sp - %1df);
        in;
        stack[%e0a] = $answer;
        %78e = "0";
        %63b = ($sp - %78e);
        %7f1 = stack[%63b];
        %64 = "1";
        %65a = ($sp - %64);
        %8b3 = stack[%65a];
        %f1 = "0";
        %634 = (%8b3 + %f1);
        stack[%634] = %7f1;
        %b17 = "3";
        $sp = ($sp - %b17);
        %7c1 = "1";
        %082 = ($sp + %7c1);
        %204 = stack[%082];
        jump %204;
    }
}

func func.random_num {
    proc #1202 {
        %61 = "5";
        $sp = ($sp + %61);
        %9b5 = "0";
        %07 = ($sp - %9b5);
        %4ad = "0.0";
        %f0b = "1.0";
        stack[%07] = (%4ad <random> %f0b);
        %7af = "2";
        %d20 = ($sp - %7af);
        %28 = stack[%d20];
        %43f = "0";
        %f7b = ($sp - %43f);
        %445 = stack[%f7b];
        %c6 = "1";
        %05e = ($sp - %c6);
        %65c = stack[%05e];
        %fd1 = "2";
        %b2 = ($sp - %fd1);
        %a92 = stack[%b2];
        %e93 = (%65c - %a92);
        %64c = (%445 * %e93);
        %ced = (%28 + %64c);
        %73 = "3";
        %9d = ($sp - %73);
        %437 = stack[%9d];
        %8e = "0";
        %ee = (%437 + %8e);
        stack[%ee] = %ced;
        %b6d = "5";
        $sp = ($sp - %b6d);
        %c5 = "1";
        %e16 = ($sp + %c5);
        %4f2 = stack[%e16];
        jump %4f2;
    }
}

func func.random_int {
    proc #ca {
        %3b = "5";
        $sp = ($sp + %3b);
        %53 = "0";
        %411 = ($sp - %53);
        %32b = "2";
        %d94 = ($sp - %32b);
        %e6b = stack[%d94];
        %ac = "1";
        %2ec = ($sp - %ac);
        %183 = stack[%2ec];
        stack[%411] = (%e6b <random> %183);
        %b21 = "0";
        %6c0 = ($sp - %b21);
        %40 = stack[%6c0];
        %29b = "3";
        %24 = ($sp - %29b);
        %86b = stack[%24];
        %0f = "0";
        %6bf = (%86b + %0f);
        stack[%6bf] = %40;
        %92 = "5";
        $sp = ($sp - %92);
        %eff = "1";
        %7f6 = ($sp + %eff);
        %e00 = stack[%7f6];
        jump %e00;
    }
}

func func.random_uint {
    proc #f8 {
        %c20 = "5";
        $sp = ($sp + %c20);
        %03 = "0";
        %0a9 = ($sp - %03);
        %714 = "2";
        %10d = ($sp - %714);
        %405 = stack[%10d];
        %08e = "1";
        %dd = ($sp - %08e);
        %b56 = stack[%dd];
        stack[%0a9] = (%405 <random> %b56);
        %b67 = "0";
        %a6 = ($sp - %b67);
        %926 = stack[%a6];
        %f2a = "3";
        %67 = ($sp - %f2a);
        %919 = stack[%67];
        %7c2 = "0";
        %613 = (%919 + %7c2);
        stack[%613] = %926;
        %1da = "5";
        $sp = ($sp - %1da);
        %e68 = "1";
        %26 = ($sp + %e68);
        %64b = stack[%26];
        jump %64b;
    }
}