main {
    proc #8a {
        $sp = "-1";
        %43 = #9b;
        jump %43;
    }
}

func main {
    proc #9b {
        %02 = "5";
        $sp = ($sp + %02);
        %18 = "10";
        %78 = "3";
        %52 = ($sp - %78);
        %28 = "0";
        %e8 = (%52 + %28);
        stack[%e8] = %18;
        %f0 = "20";
        %69 = "2";
        %c2 = ($sp - %69);
        %38 = "0";
        %4e = (%c2 + %38);
        stack[%4e] = %f0;
        %3a = "3";
        %45 = ($sp - %3a);
        %3f = stack[%45];
        %3b = "2";
        %1a = ($sp - %3b);
        %00 = "0";
        %cc = (%1a + %00);
        stack[%cc] = %3f;
        %ac = "2";
        %d5 = ($sp - %ac);
        %60 = stack[%d5];
        %77 = "3";
        %01 = ($sp - %77);
        %0a = "0";
        %99 = (%01 + %0a);
        stack[%99] = %60;
        %72 = "3";
        %69e = ($sp - %72);
        %de = "1";
        %25 = ($sp - %de);
        %58 = "0";
        %21 = (%25 + %58);
        stack[%21] = %69e;
        %35 = "2";
        %9e = ($sp - %35);
        %53 = "0";
        %70 = ($sp - %53);
        %4a = "0";
        %a3 = (%70 + %4a);
        stack[%a3] = %9e;
        %37 = "1";
        %aa = ($sp - %37);
        %b5 = stack[%aa];
        %51 = "0";
        %0f = ($sp - %51);
        %e7 = "0";
        %8d = (%0f + %e7);
        stack[%8d] = %b5;
        %d3 = "0";
        %cd = ($sp - %d3);
        %54 = stack[%cd];
        %be = "1";
        %f8 = ($sp - %be);
        %7d = "0";
        %4d = (%f8 + %7d);
        stack[%4d] = %54;
        %85 = "1";
        %52c = ($sp - %85);
        %b4 = stack[%52c];
        %07 = "2";
        %08 = ($sp - %07);
        %a5 = "0";
        %d51 = (%08 + %a5);
        stack[%d51] = %b4;
        %11 = "0";
        %a6 = ($sp - %11);
        %74 = stack[%a6];
        %74f = "2";
        %3e = ($sp - %74f);
        %cf = "0";
        %7da = (%3e + %cf);
        stack[%7da] = %74;
        %858 = "2";
        %0fb = ($sp - %858);
        %ed = stack[%0fb];
        %b0 = "1";
        %a2 = ($sp - %b0);
        %728 = "0";
        %1ae = (%a2 + %728);
        stack[%1ae] = %ed;
        %80 = "2";
        %c3 = ($sp - %80);
        %9ea = stack[%c3];
        %22 = "0";
        %81 = ($sp - %22);
        %28d = "0";
        %98 = (%81 + %28d);
        stack[%98] = %9ea;
        exit;
    }
}

func func.out {
    proc #50 {
        %83 = "2";
        $sp = ($sp + %83);
        %99f = "0";
        %d0 = ($sp - %99f);
        %a28 = stack[%d0];
        out %a28;
        %26 = "2";
        $sp = ($sp - %26);
        %09 = "1";
        %94 = ($sp + %09);
        %9d = stack[%94];
        jump %9d;
    }
}

func func.in {
    proc #20 {
        %aa8 = "3";
        $sp = ($sp + %aa8);
        %5b = "0";
        %bf = ($sp - %5b);
        in;
        stack[%bf] = $answer;
        %93 = "0";
        %8c = ($sp - %93);
        %e5 = stack[%8c];
        %93c = "1";
        %66 = ($sp - %93c);
        %c5 = stack[%66];
        %6d = "0";
        %44 = (%c5 + %6d);
        stack[%44] = %e5;
        %810 = "3";
        $sp = ($sp - %810);
        %b6 = "1";
        %6c = ($sp + %b6);
        %ce = stack[%6c];
        jump %ce;
    }
}

func func.random {
    proc #0d {
        %026 = "5";
        $sp = ($sp + %026);
        %fb = "0";
        %e1 = ($sp - %fb);
        %fe = "2";
        %0a9 = ($sp - %fe);
        %0b = stack[%0a9];
        %5d = "1";
        %a64 = ($sp - %5d);
        %7b = stack[%a64];
        stack[%e1] = (%0b <random> %7b);
        %25a = "0";
        %24 = ($sp - %25a);
        %7f = stack[%24];
        %f2 = "3";
        %90 = ($sp - %f2);
        %b01 = stack[%90];
        %95 = "0";
        %6e = (%b01 + %95);
        stack[%6e] = %7f;
        %fd = "5";
        $sp = ($sp - %fd);
        %9a = "1";
        %9d1 = ($sp + %9a);
        %7e = stack[%9d1];
        jump %7e;
    }
}