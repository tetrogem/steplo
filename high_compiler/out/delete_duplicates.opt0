main {
    proc #89 {
        $sp = "-1";
        %b5 = #a1;
        jump %b5;
    }
}

func main {
    proc #a1 {
        %ea = "13";
        $sp = ($sp + %ea);
        %29 = "1";
        %76 = "11";
        %b8 = ($sp - %76);
        %09 = "0";
        %c6 = (%b8 + %09);
        stack[%c6] = %29;
        %b6 = "1";
        %e2 = "11";
        %6a = ($sp - %e2);
        %53 = "1";
        %0a = (%6a + %53);
        stack[%0a] = %b6;
        %c3 = "2";
        %b0 = "11";
        %a5 = ($sp - %b0);
        %5f = "2";
        %28 = (%a5 + %5f);
        stack[%28] = %c3;
        %fb = "3";
        %13 = "11";
        %19 = ($sp - %13);
        %05 = "3";
        %b2 = (%19 + %05);
        stack[%b2] = %fb;
        %3e = "3";
        %a8 = "11";
        %a6 = ($sp - %a8);
        %e8 = "4";
        %d2 = (%a6 + %e8);
        stack[%d2] = %3e;
        %9a = "4";
        %2f = "11";
        %b7 = ($sp - %2f);
        %fc = "5";
        %e7 = (%b7 + %fc);
        stack[%e7] = %9a;
        %d7 = "5";
        %89e = "11";
        %60 = ($sp - %89e);
        %a9 = "6";
        %1f = (%60 + %a9);
        stack[%1f] = %d7;
        %e8f = "6";
        %6e = "11";
        %05d = ($sp - %6e);
        %22 = "7";
        %13c = (%05d + %22);
        stack[%13c] = %e8f;
        %5b = "6";
        %04 = "11";
        %c65 = ($sp - %04);
        %d3 = "8";
        %ff = (%c65 + %d3);
        stack[%ff] = %5b;
        %86 = "6";
        %f2 = "11";
        %4b = ($sp - %f2);
        %74 = "9";
        %c5 = (%4b + %74);
        stack[%c5] = %86;
        %42 = "7";
        %6d = "11";
        %601 = ($sp - %6d);
        %33 = "10";
        %b71 = (%601 + %33);
        stack[%b71] = %42;
        %fe = "With duplicates:";
        %9e = "2";
        %f1 = ($sp + %9e);
        stack[%f1] = %fe;
        %1f8 = "1";
        %fe9 = ($sp + %1f8);
        %6a8 = #a5d;
        stack[%fe9] = %6a8;
        %287 = #0c;
        jump %287;
    }

    proc #a5d {
        %b0b = "11";
        %34 = ($sp - %b0b);
        %80 = "2";
        %db = ($sp + %80);
        stack[%db] = %34;
        %4c = "11";
        %9f = "3";
        %e3 = ($sp + %9f);
        stack[%e3] = %4c;
        %8e = "1";
        %cd = ($sp + %8e);
        %7f = #ac;
        stack[%cd] = %7f;
        %c2 = #88;
        jump %c2;
    }

    proc #ac {
        %895 = "0";
        %d23 = ($sp - %895);
        %9b = "2";
        %c1 = ($sp + %9b);
        stack[%c1] = %d23;
        %f0 = "11";
        %0e = ($sp - %f0);
        %17 = "3";
        %c1b = ($sp + %17);
        stack[%c1b] = %0e;
        %ed = "1";
        %d6 = ($sp + %ed);
        %18 = #4c3;
        stack[%d6] = %18;
        %00 = #a66;
        jump %00;
    }

    proc #4c3 {
        %805 = "Without duplicates:";
        %36 = "2";
        %e6 = ($sp + %36);
        stack[%e6] = %805;
        %72 = "1";
        %54 = ($sp + %72);
        %64 = #3f;
        stack[%54] = %64;
        %9e0 = #0c;
        jump %9e0;
    }

    proc #3f {
        %31 = "11";
        %c0 = ($sp - %31);
        %51 = "2";
        %fe4 = ($sp + %51);
        stack[%fe4] = %c0;
        %ab = "0";
        %96 = ($sp - %ab);
        %c04 = stack[%96];
        %16 = "3";
        %fa = ($sp + %16);
        stack[%fa] = %c04;
        %0ee = "1";
        %5be = ($sp + %0ee);
        %d0 = #c39;
        stack[%5be] = %d0;
        %38 = #88;
        jump %38;
    }

    proc #c39 {
        exit;
    }
}

func func.delete_duplicates {
    proc #a66 {
        %cd7 = "6";
        $sp = ($sp + %cd7);
        %0d = "0";
        %1a = "1";
        %e8b = ($sp - %1a);
        %eab = "0";
        %c9 = (%e8b + %eab);
        stack[%c9] = %0d;
        %53a = "11";
        %68 = "0";
        %fcd = ($sp - %68);
        %f4 = "0";
        %884 = (%fcd + %f4);
        stack[%884] = %53a;
        %70 = "0";
        %706 = "2";
        %ba = ($sp - %706);
        %297 = "0";
        %10 = (%ba + %297);
        stack[%10] = %70;
        %14 = #7c;
        jump %14;
    }

    proc #bb {
        %c6d = "0";
        %687 = ($sp - %c6d);
        %7e = stack[%687];
        %d4 = "4";
        %9fe = ($sp - %d4);
        %50 = stack[%9fe];
        %84 = "0";
        %ab1 = (%50 + %84);
        stack[%ab1] = %7e;
        %0db = "6";
        $sp = ($sp - %0db);
        %15 = "1";
        %fa2 = ($sp + %15);
        %312 = stack[%fa2];
        jump %312;
    }

    proc #424 {
        %183 = "1";
        %ef = ($sp - %183);
        %d8 = stack[%ef];
        %71 = "0";
        %d9 = (%d8 > %71);
        %f10 = "1";
        %8b = ($sp - %f10);
        %1c = stack[%8b];
        %cf = "3";
        %b24 = ($sp - %cf);
        %840 = stack[%b24];
        %45 = (%840 + %1c);
        %cc = stack[%45];
        %27 = "2";
        %be = ($sp - %27);
        %425 = stack[%be];
        %b3 = (%cc == %425);
        %bc = (%d9 && %b3);
        %eb = #47;
        %52 = #12;
        if %bc then jump %eb else jump %52;
    }

    proc #503 {
        %282 = "1";
        %c8 = ($sp - %282);
        %f8 = stack[%c8];
        %78 = "1";
        %144 = (%f8 + %78);
        %f7 = "1";
        %8ec = ($sp - %f7);
        %e0 = "0";
        %f4e = (%8ec + %e0);
        stack[%f4e] = %144;
        %280 = #7c;
        jump %280;
    }

    proc #47 {
        %a19 = "3";
        %d65 = ($sp - %a19);
        %9c = stack[%d65];
        %e70 = "2";
        %59 = ($sp + %e70);
        stack[%59] = %9c;
        %98 = "1";
        %0b = ($sp - %98);
        %f0c = stack[%0b];
        %c66 = "3";
        %f71 = ($sp + %c66);
        stack[%f71] = %f0c;
        %d8e = "1";
        %56 = ($sp + %d8e);
        %764 = #0b4;
        stack[%56] = %764;
        %c3d = #94;
        jump %c3d;
    }

    proc #0b4 {
        %30 = "1";
        %ca = ($sp - %30);
        %c3b = stack[%ca];
        %6f = "1";
        %69 = (%c3b - %6f);
        %4a = "1";
        %ef4 = ($sp - %4a);
        %29f = "0";
        %e3d = (%ef4 + %29f);
        stack[%e3d] = %69;
        %38b = "0";
        %34f = ($sp - %38b);
        %cc2 = stack[%34f];
        %8a = "1";
        %0f = (%cc2 - %8a);
        %d5 = "0";
        %143 = ($sp - %d5);
        %22c = "0";
        %fc4 = (%143 + %22c);
        stack[%fc4] = %0f;
        %af = #503;
        jump %af;
    }

    proc #12 {
        %d91 = "1";
        %504 = ($sp - %d91);
        %ce = stack[%504];
        %b36 = "3";
        %38a = ($sp - %b36);
        %c2a = stack[%38a];
        %2f3 = (%c2a + %ce);
        %6ed = stack[%2f3];
        %90 = "2";
        %23 = ($sp - %90);
        %2a = "0";
        %b5c = (%23 + %2a);
        stack[%b5c] = %6ed;
        %500 = #503;
        jump %500;
    }

    proc #7c {
        %4e = "1";
        %a6c = ($sp - %4e);
        %fcf = stack[%a6c];
        %a3 = "0";
        %e25 = ($sp - %a3);
        %44 = stack[%e25];
        %765 = (%fcf < %44);
        %7a = #424;
        %62 = #bb;
        if %765 then jump %7a else jump %62;
    }
}

func func.delete_index {
    proc #94 {
        %ec = "4";
        $sp = ($sp + %ec);
        %52f = "0";
        %d34 = "0";
        %d3e = ($sp - %d34);
        %cef = "0";
        %fc9 = (%d3e + %cef);
        stack[%fc9] = %52f;
        %c0a = #11;
        jump %c0a;
    }

    proc #9c1 {
        %57 = "4";
        $sp = ($sp - %57);
        %c4 = "1";
        %9d = ($sp + %c4);
        %ad = stack[%9d];
        jump %ad;
    }

    proc #b09 {
        %67 = "0";
        %d1 = ($sp - %67);
        %6a87 = stack[%d1];
        %75 = "1";
        %99 = ($sp - %75);
        %9ec = stack[%99];
        %d96 = (%6a87 > %9ec);
        %2ab = #c93;
        %2d = #d97;
        if %d96 then jump %2ab else jump %2d;
    }

    proc #d97 {
        %8ed = "0";
        %e4 = ($sp - %8ed);
        %32 = stack[%e4];
        %50f = "1";
        %63 = (%32 + %50f);
        %1b = "0";
        %de = ($sp - %1b);
        %627 = "0";
        %95 = (%de + %627);
        stack[%95] = %63;
        %a61 = #11;
        jump %a61;
    }

    proc #c93 {
        %a0 = "0";
        %fd = ($sp - %a0);
        %5bf = stack[%fd];
        %a18 = "2";
        %c5d = ($sp - %a18);
        %43 = stack[%c5d];
        %3a = (%43 + %5bf);
        %906 = stack[%3a];
        %be8 = "0";
        %a0e = ($sp - %be8);
        %4ac = stack[%a0e];
        %04b = "1";
        %02 = (%4ac - %04b);
        %e6f = "2";
        %65 = ($sp - %e6f);
        %9c2 = stack[%65];
        %f6 = (%9c2 + %02);
        %b39 = "0";
        %b63 = (%f6 + %b39);
        stack[%b63] = %906;
        %acb = #d97;
        jump %acb;
    }

    proc #11 {
        %b32 = "0";
        %961 = ($sp - %b32);
        %96e = stack[%961];
        %df = "11";
        %1a5 = (%96e < %df);
        %83 = #b09;
        %ba2 = #9c1;
        if %1a5 then jump %83 else jump %ba2;
    }
}

func func.print_arr {
    proc #88 {
        %5a = "5";
        $sp = ($sp + %5a);
        %2aa = "[";
        %21 = "0";
        %2a1 = ($sp - %21);
        %869 = "0";
        %d3a = (%2a1 + %869);
        stack[%d3a] = %2aa;
        %8057 = "0";
        %17f = "1";
        %605 = ($sp - %17f);
        %0a8 = "0";
        %81 = (%605 + %0a8);
        stack[%81] = %8057;
        %1bc = #55;
        jump %1bc;
    }

    proc #97 {
        %f9 = "0";
        %ab6 = ($sp - %f9);
        %79 = stack[%ab6];
        %956 = "]";
        %1c4 = (%79 ~ %956);
        %ec0 = "0";
        %c9e = ($sp - %ec0);
        %9a2 = "0";
        %981 = (%c9e + %9a2);
        stack[%981] = %1c4;
        %a82 = "0";
        %fab = ($sp - %a82);
        %ec4 = stack[%fab];
        %4e0 = "2";
        %3ec = ($sp + %4e0);
        stack[%3ec] = %ec4;
        %5f9 = "1";
        %f40 = ($sp + %5f9);
        %66 = #db6;
        stack[%f40] = %66;
        %2a4 = #0c;
        jump %2a4;
    }

    proc #db6 {
        %1e = "5";
        $sp = ($sp - %1e);
        %8d = "1";
        %55a = ($sp + %8d);
        %99c = stack[%55a];
        jump %99c;
    }

    proc #661 {
        %41 = "0";
        %a98 = ($sp - %41);
        %d05 = stack[%a98];
        %ee = "1";
        %1b4 = ($sp - %ee);
        %630 = stack[%1b4];
        %46 = "3";
        %889 = ($sp - %46);
        %338 = stack[%889];
        %82 = (%338 + %630);
        %90c = stack[%82];
        %efa = (%d05 ~ %90c);
        %8b5 = "0";
        %89e8 = ($sp - %8b5);
        %803 = "0";
        %784 = (%89e8 + %803);
        stack[%784] = %efa;
        %684 = "1";
        %99a = ($sp - %684);
        %f01 = stack[%99a];
        %f5 = "2";
        %025 = ($sp - %f5);
        %c27 = stack[%025];
        %4b1 = "1";
        %3ad = (%c27 - %4b1);
        %285 = (!(%f01 == %3ad));
        %f56 = #f79;
        %4a1 = #54e;
        if %285 then jump %f56 else jump %4a1;
    }

    proc #54e {
        %1be = "1";
        %36a = ($sp - %1be);
        %463 = stack[%36a];
        %b0b5 = "1";
        %6f4 = (%463 + %b0b5);
        %d9c = "1";
        %845 = ($sp - %d9c);
        %c62 = "0";
        %34c = (%845 + %c62);
        stack[%34c] = %6f4;
        %6c = #55;
        jump %6c;
    }

    proc #f79 {
        %9b4 = "0";
        %10e = ($sp - %9b4);
        %f0b = stack[%10e];
        %e3c = ", ";
        %c02 = (%f0b ~ %e3c);
        %896 = "0";
        %48 = ($sp - %896);
        %ed1 = "0";
        %1e0 = (%48 + %ed1);
        stack[%1e0] = %c02;
        %634 = #54e;
        jump %634;
    }

    proc #55 {
        %e1 = "1";
        %baf = ($sp - %e1);
        %434 = stack[%baf];
        %38c = "2";
        %90d = ($sp - %38c);
        %962 = stack[%90d];
        %ca7 = (%434 < %962);
        %25 = #661;
        %028 = #97;
        if %ca7 then jump %25 else jump %028;
    }
}

func func.out {
    proc #0c {
        %48d = "2";
        $sp = ($sp + %48d);
        %ffb = "0";
        %c96 = ($sp - %ffb);
        %b1 = stack[%c96];
        out %b1;
        %ac5 = "2";
        $sp = ($sp - %ac5);
        %6d7 = "1";
        %d4b = ($sp + %6d7);
        %08 = stack[%d4b];
        jump %08;
    }
}

func func.in {
    proc #ab8 {
        %f78 = "3";
        $sp = ($sp + %f78);
        %2b = "0";
        %98d = ($sp - %2b);
        in;
        stack[%98d] = $answer;
        %bf = "0";
        %ac0 = ($sp - %bf);
        %ca4 = stack[%ac0];
        %4f = "1";
        %4b11 = ($sp - %4f);
        %b83 = stack[%4b11];
        %01 = "0";
        %34fb = (%b83 + %01);
        stack[%34fb] = %ca4;
        %f52 = "3";
        $sp = ($sp - %f52);
        %9bd = "1";
        %ed8 = ($sp + %9bd);
        %7ac = stack[%ed8];
        jump %7ac;
    }
}