main {
    proc #51 {
        $sp = "-1";
        %f1 = #73;
        jump %f1;
    }
}

func main {
    proc #73 {
        %a9 = "13";
        $sp = ($sp + %a9);
        %60 = "1";
        %8c = "11";
        %49 = ($sp - %8c);
        %01 = "0";
        %df = (%49 + %01);
        stack[%df] = %60;
        %0c = "1";
        %18 = "11";
        %5e = ($sp - %18);
        %09 = "1";
        %b1 = (%5e + %09);
        stack[%b1] = %0c;
        %d3 = "2";
        %d6 = "11";
        %5f = ($sp - %d6);
        %c9 = "2";
        %89 = (%5f + %c9);
        stack[%89] = %d3;
        %f16 = "3";
        %87 = "11";
        %5d = ($sp - %87);
        %39 = "3";
        %3e = (%5d + %39);
        stack[%3e] = %f16;
        %c2 = "3";
        %d1 = "11";
        %ea = ($sp - %d1);
        %c3 = "4";
        %21 = (%ea + %c3);
        stack[%21] = %c2;
        %9e = "4";
        %03 = "11";
        %ae = ($sp - %03);
        %12 = "5";
        %2b = (%ae + %12);
        stack[%2b] = %9e;
        %00 = "5";
        %c8 = "11";
        %d5 = ($sp - %c8);
        %fe = "6";
        %24 = (%d5 + %fe);
        stack[%24] = %00;
        %d52 = "6";
        %65 = "11";
        %186 = ($sp - %65);
        %a7 = "7";
        %9c = (%186 + %a7);
        stack[%9c] = %d52;
        %32 = "6";
        %aec = "11";
        %db = ($sp - %aec);
        %7b = "8";
        %c2d = (%db + %7b);
        stack[%c2d] = %32;
        %f12 = "6";
        %a8 = "11";
        %cf = ($sp - %a8);
        %88 = "9";
        %c0 = (%cf + %88);
        stack[%c0] = %f12;
        %6f = "7";
        %85 = "11";
        %19 = ($sp - %85);
        %03b = "10";
        %602 = (%19 + %03b);
        stack[%602] = %6f;
        %9f = "With duplicates:";
        %23 = "2";
        %81 = ($sp + %23);
        stack[%81] = %9f;
        %d4 = "1";
        %ad = ($sp + %d4);
        %7a = #7f;
        stack[%ad] = %7a;
        %af = #22;
        jump %af;
    }

    proc #7f {
        %9b = "11";
        %86 = ($sp - %9b);
        %2a = "2";
        %fe1 = ($sp + %2a);
        stack[%fe1] = %86;
        %69 = "11";
        %f5 = "3";
        %05 = ($sp + %f5);
        stack[%05] = %69;
        %a4 = "1";
        %3c = ($sp + %a4);
        %4e = #cf9;
        stack[%3c] = %4e;
        %3c4 = #b6;
        jump %3c4;
    }

    proc #cf9 {
        %e1 = "0";
        %29 = ($sp - %e1);
        %f6 = "2";
        %02 = ($sp + %f6);
        stack[%02] = %29;
        %f2 = "11";
        %5c = ($sp - %f2);
        %180 = "3";
        %0a = ($sp + %180);
        stack[%0a] = %5c;
        %f7 = "1";
        %e3 = ($sp + %f7);
        %3b = #6d;
        stack[%e3] = %3b;
        %ed = #85b;
        jump %ed;
    }

    proc #6d {
        %be = "Without duplicates:";
        %06 = "2";
        %55 = ($sp + %06);
        stack[%55] = %be;
        %e8 = "1";
        %27 = ($sp + %e8);
        %1a = #325;
        stack[%27] = %1a;
        %71 = #22;
        jump %71;
    }

    proc #325 {
        %5ca = "11";
        %b14 = ($sp - %5ca);
        %bb = "2";
        %68 = ($sp + %bb);
        stack[%68] = %b14;
        %8a = "0";
        %42 = ($sp - %8a);
        %2d = stack[%42];
        %c98 = "3";
        %68f = ($sp + %c98);
        stack[%68f] = %2d;
        %d5e = "1";
        %012 = ($sp + %d5e);
        %33 = #5c4;
        stack[%012] = %33;
        %7a1 = #b6;
        jump %7a1;
    }

    proc #5c4 {
        exit;
    }
}

func func.delete_duplicates {
    proc #85b {
        %a6 = "6";
        $sp = ($sp + %a6);
        %f74 = "0";
        %c4 = "1";
        %338 = ($sp - %c4);
        %8cc = "0";
        %5db = (%338 + %8cc);
        stack[%5db] = %f74;
        %87e = "11";
        %73e = "0";
        %d2 = ($sp - %73e);
        %d8 = "0";
        %d66 = (%d2 + %d8);
        stack[%d66] = %87e;
        %5a = "0";
        %5c0 = "2";
        %e4 = ($sp - %5c0);
        %3a = "0";
        %6b = (%e4 + %3a);
        stack[%6b] = %5a;
        %ef = #eb;
        jump %ef;
    }

    proc #14 {
        %11 = "0";
        %c6 = ($sp - %11);
        %d82 = stack[%c6];
        %78 = "4";
        %08 = ($sp - %78);
        %ac = stack[%08];
        %4d = "0";
        %242 = (%ac + %4d);
        stack[%242] = %d82;
        %334 = "6";
        $sp = ($sp - %334);
        %228 = "1";
        %15 = ($sp + %228);
        %608 = stack[%15];
        jump %608;
    }

    proc #c1 {
        %92 = "1";
        %58 = ($sp - %92);
        %f8 = stack[%58];
        %31 = "0";
        %35 = (%f8 > %31);
        %6d8 = "1";
        %3f = ($sp - %6d8);
        %002 = stack[%3f];
        %83 = "3";
        %40 = ($sp - %83);
        %72 = stack[%40];
        %494 = (%72 + %002);
        %050 = stack[%494];
        %75 = "2";
        %7ad = ($sp - %75);
        %2f = stack[%7ad];
        %c5 = (%050 == %2f);
        %1f = (%35 && %c5);
        %c7 = #b17;
        %c20 = #25;
        if %1f then jump %c7 else jump %c20;
    }

    proc #b5 {
        %027 = "1";
        %e8d = ($sp - %027);
        %43 = stack[%e8d];
        %22f = "1";
        %fa = (%43 + %22f);
        %c79 = "1";
        %e1f = ($sp - %c79);
        %27c = "0";
        %10 = (%e1f + %27c);
        stack[%10] = %fa;
        %357 = #eb;
        jump %357;
    }

    proc #b17 {
        %9c3 = "3";
        %61 = ($sp - %9c3);
        %212 = stack[%61];
        %604 = "2";
        %d9 = ($sp + %604);
        stack[%d9] = %212;
        %bb1 = "1";
        %3a2 = ($sp - %bb1);
        %86a = stack[%3a2];
        %1e = "3";
        %91 = ($sp + %1e);
        stack[%91] = %86a;
        %0e = "1";
        %cf1 = ($sp + %0e);
        %6fe = #21d;
        stack[%cf1] = %6fe;
        %e8a = #cb;
        jump %e8a;
    }

    proc #21d {
        %c8f = "1";
        %606 = ($sp - %c8f);
        %36 = stack[%606];
        %82 = "1";
        %2d3 = (%36 - %82);
        %4b = "1";
        %d5f = ($sp - %4b);
        %4c = "0";
        %99 = (%d5f + %4c);
        stack[%99] = %2d3;
        %79 = "0";
        %291 = ($sp - %79);
        %90 = stack[%291];
        %76 = "1";
        %94 = (%90 - %76);
        %d11 = "0";
        %a0 = ($sp - %d11);
        %f20 = "0";
        %60c = (%a0 + %f20);
        stack[%60c] = %94;
        %faa = #b5;
        jump %faa;
    }

    proc #25 {
        %9e1 = "1";
        %a2 = ($sp - %9e1);
        %226 = stack[%a2];
        %925 = "3";
        %57 = ($sp - %925);
        %ad5 = stack[%57];
        %125 = (%ad5 + %226);
        %d0 = stack[%125];
        %6e = "2";
        %41 = ($sp - %6e);
        %d2b = "0";
        %5f9 = (%41 + %d2b);
        stack[%5f9] = %d0;
        %8b = #b5;
        jump %8b;
    }

    proc #eb {
        %b8 = "1";
        %7d = ($sp - %b8);
        %a8a = stack[%7d];
        %e8c = "0";
        %09a = ($sp - %e8c);
        %8f = stack[%09a];
        %adc = (%a8a < %8f);
        %cc = #c1;
        %903 = #14;
        if %adc then jump %cc else jump %903;
    }
}

func func.delete_index {
    proc #cb {
        %e0 = "4";
        $sp = ($sp + %e0);
        %2c = "0";
        %b89 = "0";
        %5a6 = ($sp - %b89);
        %0c0 = "0";
        %511 = (%5a6 + %0c0);
        stack[%511] = %2c;
        %38 = #193;
        jump %38;
    }

    proc #df6 {
        %f0 = "4";
        $sp = ($sp - %f0);
        %2cd = "1";
        %2bf = ($sp + %2cd);
        %e9 = stack[%2bf];
        jump %e9;
    }

    proc #dbf {
        %2b4 = "0";
        %f9 = ($sp - %2b4);
        %d50 = stack[%f9];
        %c04 = "1";
        %ab = ($sp - %c04);
        %09ad = stack[%ab];
        %103 = (%d50 > %09ad);
        %c2b = #64;
        %38a = #b57;
        if %103 then jump %c2b else jump %38a;
    }

    proc #b57 {
        %824 = "0";
        %8e = ($sp - %824);
        %50 = stack[%8e];
        %244 = "1";
        %26 = (%50 + %244);
        %6c = "0";
        %1ee = ($sp - %6c);
        %a5 = "0";
        %1ee5 = (%1ee + %a5);
        stack[%1ee5] = %26;
        %2e = #193;
        jump %2e;
    }

    proc #64 {
        %764 = "0";
        %4f = ($sp - %764);
        %310 = stack[%4f];
        %e3c = "2";
        %ef3 = ($sp - %e3c);
        %915 = stack[%ef3];
        %46 = (%915 + %310);
        %d04 = stack[%46];
        %03e = "0";
        %6e1 = ($sp - %03e);
        %7e = stack[%6e1];
        %44 = "1";
        %c5a = (%7e - %44);
        %e6 = "2";
        %f84 = ($sp - %e6);
        %241 = stack[%f84];
        %ee = (%241 + %c5a);
        %bc = "0";
        %a3 = (%ee + %bc);
        stack[%a3] = %d04;
        %b8d = #b57;
        jump %b8d;
    }

    proc #193 {
        %dd = "0";
        %878 = ($sp - %dd);
        %ef2 = stack[%878];
        %8f9 = "11";
        %e41 = (%ef2 < %8f9);
        %1a3 = #dbf;
        %c0e = #df6;
        if %e41 then jump %1a3 else jump %c0e;
    }
}

func func.print_arr {
    proc #b6 {
        %2eb = "5";
        $sp = ($sp + %2eb);
        %b0 = "[";
        %fe8 = "0";
        %182 = ($sp - %fe8);
        %ce = "0";
        %ba = (%182 + %ce);
        stack[%ba] = %b0;
        %cf8 = "0";
        %cee = "1";
        %c89 = ($sp - %cee);
        %8ea = "0";
        %4bf = (%c89 + %8ea);
        stack[%4bf] = %cf8;
        %03a = #514;
        jump %03a;
    }

    proc #88a {
        %88c = "0";
        %2d9 = ($sp - %88c);
        %468 = stack[%2d9];
        %696 = "]";
        %0276 = (%468 ~ %696);
        %30 = "0";
        %04 = ($sp - %30);
        %2e2 = "0";
        %555 = (%04 + %2e2);
        stack[%555] = %0276;
        %ec = "0";
        %7b2 = ($sp - %ec);
        %c62 = stack[%7b2];
        %f56 = "2";
        %31b = ($sp + %f56);
        stack[%31b] = %c62;
        %42f = "1";
        %018 = ($sp + %42f);
        %bca = #b893;
        stack[%018] = %bca;
        %cd = #22;
        jump %cd;
    }

    proc #b893 {
        %63 = "5";
        $sp = ($sp - %63);
        %6df = "1";
        %b7 = ($sp + %6df);
        %8f6 = stack[%b7];
        jump %8f6;
    }

    proc #8ac {
        %268 = "0";
        %62 = ($sp - %268);
        %60c0 = stack[%62];
        %6f0 = "1";
        %c0b = ($sp - %6f0);
        %ccf = stack[%c0b];
        %28 = "3";
        %6a = ($sp - %28);
        %1804 = stack[%6a];
        %283 = (%1804 + %ccf);
        %618 = stack[%283];
        %028 = (%60c0 ~ %618);
        %8a7 = "0";
        %491 = ($sp - %8a7);
        %a4a = "0";
        %84 = (%491 + %a4a);
        stack[%84] = %028;
        %ca = "1";
        %6ac = ($sp - %ca);
        %22c = stack[%6ac];
        %14a = "2";
        %b8b = ($sp - %14a);
        %c97 = stack[%b8b];
        %294 = "1";
        %7c = (%c97 - %294);
        %6fd = (!(%22c == %7c));
        %56 = #e17;
        %a00 = #36d;
        if %6fd then jump %56 else jump %a00;
    }

    proc #36d {
        %f6a = "1";
        %4d8 = ($sp - %f6a);
        %788 = stack[%4d8];
        %519 = "1";
        %d2d = (%788 + %519);
        %d08 = "1";
        %4a = ($sp - %d08);
        %69e = "0";
        %04b = (%4a + %69e);
        stack[%04b] = %d2d;
        %8b2 = #514;
        jump %8b2;
    }

    proc #e17 {
        %8245 = "0";
        %b0f = ($sp - %8245);
        %295 = stack[%b0f];
        %0f = ", ";
        %ff = (%295 ~ %0f);
        %c8b = "0";
        %7bf = ($sp - %c8b);
        %94a = "0";
        %0d = (%7bf + %94a);
        stack[%0d] = %ff;
        %6f7 = #36d;
        jump %6f7;
    }

    proc #514 {
        %e7 = "1";
        %64d = ($sp - %e7);
        %41d = stack[%64d];
        %b02 = "2";
        %3d = ($sp - %b02);
        %7b5 = stack[%3d];
        %db7 = (%41d < %7b5);
        %563 = #8ac;
        %1a0 = #88a;
        if %db7 then jump %563 else jump %1a0;
    }
}

func func.out {
    proc #22 {
        %514a = "2";
        $sp = ($sp + %514a);
        %38ac = "0";
        %a59 = ($sp - %38ac);
        %8a77 = stack[%a59];
        out %8a77;
        %8e0 = "2";
        $sp = ($sp - %8e0);
        %550 = "1";
        %c26 = ($sp + %550);
        %0e2 = stack[%c26];
        jump %0e2;
    }
}

func func.in {
    proc #e82 {
        %192 = "3";
        $sp = ($sp + %192);
        %55a = "0";
        %e0c = ($sp - %55a);
        in;
        stack[%e0c] = $answer;
        %033 = "0";
        %c51 = ($sp - %033);
        %d40 = stack[%c51];
        %1f1 = "1";
        %036 = ($sp - %1f1);
        %5d8 = stack[%036];
        %26b = "0";
        %e2 = (%5d8 + %26b);
        stack[%e2] = %d40;
        %8b4 = "3";
        $sp = ($sp - %8b4);
        %912 = "1";
        %8a6 = ($sp + %912);
        %fb = stack[%8a6];
        jump %fb;
    }
}