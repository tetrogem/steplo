main {
    proc #90 {
        $sp = "-1";
        %ad = #2b;
        jump %ad;
    }
}

func main {
    proc #2b {
        %4c = "3";
        $sp = ($sp + %4c);
        %3c = "Enter how many iterations to perform:";
        %51 = "2";
        %bd = ($sp + %51);
        stack[%bd] = %3c;
        %17 = "1";
        %da = ($sp + %17);
        %909 = #38;
        stack[%da] = %909;
        %91 = #2a;
        jump %91;
    }

    proc #38 {
        %d0 = "0";
        %98 = ($sp - %d0);
        %d4 = "2";
        %b4 = ($sp + %d4);
        stack[%b4] = %98;
        %4e = "1";
        %4a = ($sp + %4e);
        %fc = #1d;
        stack[%4a] = %fc;
        %e9 = #ff;
        jump %e9;
    }

    proc #1d {
        %c2 = "1";
        %6a = "1";
        %919 = ($sp - %6a);
        %dc = "0";
        %cc = (%919 + %dc);
        stack[%cc] = %c2;
        %79 = #b7;
        jump %79;
    }

    proc #01 {
        %4c8 = "Done!";
        %23 = "2";
        %2c = ($sp + %23);
        stack[%2c] = %4c8;
        %05 = "1";
        %93 = ($sp + %05);
        %42 = #b71;
        stack[%93] = %42;
        %95 = #2a;
        jump %95;
    }

    proc #b71 {
        exit;
    }

    proc #5a {
        %f3 = "1";
        %da8 = ($sp - %f3);
        %00 = stack[%da8];
        %ae = "15";
        %52 = (%00 % %ae);
        %1f = "0";
        %78 = (%52 == %1f);
        %09 = #d9;
        %6b = #1a;
        if %78 then jump %09 else jump %6b;
    }

    proc #3e {
        %ab = "1";
        %aed = ($sp - %ab);
        %dd = stack[%aed];
        %57 = "1";
        %61 = (%dd + %57);
        %1e = "1";
        %27 = ($sp - %1e);
        %13 = "0";
        %ce = (%27 + %13);
        stack[%ce] = %61;
        %6ac = #b7;
        jump %6ac;
    }

    proc #d9 {
        %8a = "FizzBuzz";
        %9c = "2";
        %dc2 = ($sp + %9c);
        stack[%dc2] = %8a;
        %be = "1";
        %e2 = ($sp + %be);
        %e3 = #e4;
        stack[%e2] = %e3;
        %80 = #2a;
        jump %80;
    }

    proc #e4 {
        %27a = #3e;
        jump %27a;
    }

    proc #1a {
        %85 = "1";
        %96 = ($sp - %85);
        %4c82 = stack[%96];
        %50 = "3";
        %10 = (%4c82 % %50);
        %2c2 = "0";
        %1a0 = (%10 == %2c2);
        %bda = #af;
        %75 = #74;
        if %1a0 then jump %bda else jump %75;
    }

    proc #52c {
        %ca = #3e;
        jump %ca;
    }

    proc #af {
        %86 = "Fizz";
        %ee = "2";
        %6ab = ($sp + %ee);
        stack[%6ab] = %86;
        %4cc = "1";
        %02 = ($sp + %4cc);
        %b70 = #72;
        stack[%02] = %b70;
        %806 = #2a;
        jump %806;
    }

    proc #72 {
        %83 = #52c;
        jump %83;
    }

    proc #74 {
        %89 = "1";
        %c0 = ($sp - %89);
        %5d = stack[%c0];
        %f0 = "5";
        %b3 = (%5d % %f0);
        %4f = "0";
        %ad7 = (%b3 == %4f);
        %7d = #f4;
        %fa = #e8;
        if %ad7 then jump %7d else jump %fa;
    }

    proc #fa5 {
        %70 = #52c;
        jump %70;
    }

    proc #f4 {
        %4b = "Buzz";
        %4ad = "2";
        %98b = ($sp + %4ad);
        stack[%98b] = %4b;
        %8e = "1";
        %835 = ($sp + %8e);
        %20 = #755;
        stack[%835] = %20;
        %89a = #2a;
        jump %89a;
    }

    proc #755 {
        %1ff = #fa5;
        jump %1ff;
    }

    proc #e8 {
        %420 = "1";
        %1db = ($sp - %420);
        %84 = stack[%1db];
        %7a = "2";
        %46 = ($sp + %7a);
        stack[%46] = %84;
        %859 = "1";
        %44 = ($sp + %859);
        %7b = #9cd;
        stack[%44] = %7b;
        %cd = #2a;
        jump %cd;
    }

    proc #9cd {
        %64 = #fa5;
        jump %64;
    }

    proc #b7 {
        %3a = "1";
        %a9 = ($sp - %3a);
        %03 = stack[%a9];
        %25 = "0";
        %cdf = ($sp - %25);
        %4ed = stack[%cdf];
        %b8 = (!(%03 > %4ed));
        %056 = #5a;
        %0b = #01;
        if %b8 then jump %056 else jump %0b;
    }
}

func func.out {
    proc #2a {
        %cac = "2";
        $sp = ($sp + %cac);
        %23e = "0";
        %bc = ($sp - %23e);
        %8f = stack[%bc];
        out %8f;
        %94 = "2";
        $sp = ($sp - %94);
        %613 = "1";
        %96b = ($sp + %613);
        %854 = stack[%96b];
        jump %854;
    }
}

func func.in {
    proc #ff {
        %3d = "3";
        $sp = ($sp + %3d);
        %2ca = "0";
        %a2 = ($sp - %2ca);
        in;
        stack[%a2] = $answer;
        %c1 = "0";
        %24 = ($sp - %c1);
        %d6 = stack[%24];
        %6e = "1";
        %f8 = ($sp - %6e);
        %04 = stack[%f8];
        %03d = "0";
        %7a3 = (%04 + %03d);
        stack[%7a3] = %d6;
        %21 = "3";
        $sp = ($sp - %21);
        %d03 = "1";
        %4be = ($sp + %d03);
        %5f = stack[%4be];
        jump %5f;
    }
}