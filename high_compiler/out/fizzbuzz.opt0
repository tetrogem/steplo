main {
    proc #4a {
        $sp = "-1";
        %31 = #0f;
        jump %31;
    }
}

func main {
    proc #0f {
        %84 = "3";
        $sp = ($sp + %84);
        %29 = "Enter how many iterations to perform:";
        %47 = "2";
        %c7 = ($sp + %47);
        stack[%c7] = %29;
        %35 = "1";
        %d7 = ($sp + %35);
        %88 = #b1;
        stack[%d7] = %88;
        %471 = #0b;
        jump %471;
    }

    proc #b1 {
        %46 = "0";
        %ed = ($sp - %46);
        %b8 = "2";
        %a7 = ($sp + %b8);
        stack[%a7] = %ed;
        %ba = "1";
        %8a = ($sp + %ba);
        %42 = #27;
        stack[%8a] = %42;
        %72 = #0a;
        jump %72;
    }

    proc #27 {
        %12 = "1";
        %a4 = "1";
        %7e = ($sp - %a4);
        %3e = "0";
        %7c = (%7e + %3e);
        stack[%7c] = %12;
        %b3 = #c2;
        jump %b3;
    }

    proc #469 {
        %c1 = "Done!";
        %37 = "2";
        %a1 = ($sp + %37);
        stack[%a1] = %c1;
        %93 = "1";
        %92 = ($sp + %93);
        %30 = #e3;
        stack[%92] = %30;
        %64 = #0b;
        jump %64;
    }

    proc #e3 {
        exit;
    }

    proc #1f {
        %4d = "1";
        %08 = ($sp - %4d);
        %9f = stack[%08];
        %f2 = "15";
        %ad = (%9f % %f2);
        %ac = "0";
        %fb = (%ad == %ac);
        %37b = #c3;
        %66 = #acd;
        if %fb then jump %37b else jump %66;
    }

    proc #55 {
        %c5 = "1";
        %bf = ($sp - %c5);
        %2d = stack[%bf];
        %f1 = "1";
        %eb = (%2d + %f1);
        %6a = "1";
        %07 = ($sp - %6a);
        %03 = "0";
        %7b = (%07 + %03);
        stack[%7b] = %eb;
        %b2 = #c2;
        jump %b2;
    }

    proc #c3 {
        %6e = "FizzBuzz";
        %43 = "2";
        %460 = ($sp + %43);
        stack[%460] = %6e;
        %53 = "1";
        %3d = ($sp + %53);
        %475 = #e6;
        stack[%3d] = %475;
        %e5 = #0b;
        jump %e5;
    }

    proc #e6 {
        %05 = #55;
        jump %05;
    }

    proc #acd {
        %54 = "1";
        %db = ($sp - %54);
        %13 = stack[%db];
        %e2 = "3";
        %7d = (%13 % %e2);
        %cd = "0";
        %d8 = (%7d == %cd);
        %317 = #d4;
        %1a = #2e;
        if %d8 then jump %317 else jump %1a;
    }

    proc #5d {
        %7f = #55;
        jump %7f;
    }

    proc #d4 {
        %cd7 = "Fizz";
        %eb5 = "2";
        %9fe = ($sp + %eb5);
        stack[%9fe] = %cd7;
        %66b = "1";
        %d6 = ($sp + %66b);
        %62 = #c9;
        stack[%d6] = %62;
        %90 = #0b;
        jump %90;
    }

    proc #c9 {
        %4c = #5d;
        jump %4c;
    }

    proc #2e {
        %d5 = "1";
        %23 = ($sp - %d5);
        %f8 = stack[%23];
        %0d = "5";
        %2de = (%f8 % %0d);
        %cd75 = "0";
        %38 = (%2de == %cd75);
        %85 = #384;
        %4b = #f0;
        if %38 then jump %85 else jump %4b;
    }

    proc #93e {
        %26 = #5d;
        jump %26;
    }

    proc #384 {
        %5f = "Buzz";
        %07a = "2";
        %50 = ($sp + %07a);
        stack[%50] = %5f;
        %f8e = "1";
        %d9 = ($sp + %f8e);
        %a76 = #7cf;
        stack[%d9] = %a76;
        %a0 = #0b;
        jump %a0;
    }

    proc #7cf {
        %57 = #93e;
        jump %57;
    }

    proc #f0 {
        %8af = "1";
        %4e = ($sp - %8af);
        %5f4 = stack[%4e];
        %87 = "2";
        %22 = ($sp + %87);
        stack[%22] = %5f4;
        %3d7 = "1";
        %bf2 = ($sp + %3d7);
        %40 = #8b;
        stack[%bf2] = %40;
        %a77 = #0b;
        jump %a77;
    }

    proc #8b {
        %19 = #93e;
        jump %19;
    }

    proc #c2 {
        %475b = "1";
        %de = ($sp - %475b);
        %0fe = stack[%de];
        %275 = "0";
        %58 = ($sp - %275);
        %60 = stack[%58];
        %037 = (%0fe <= %60);
        %48 = #1f;
        %f0c = #469;
        if %037 then jump %48 else jump %f0c;
    }
}

func func.out {
    proc #0b {
        %82 = "2";
        $sp = ($sp + %82);
        %0d7 = "0";
        %5fc = ($sp - %0d7);
        %dbe = stack[%5fc];
        out %dbe;
        %02 = "2";
        $sp = ($sp - %02);
        %c39 = "1";
        %e7 = ($sp + %c39);
        %dd = stack[%e7];
        jump %dd;
    }
}

func func.in {
    proc #0a {
        %ff = "3";
        $sp = ($sp + %ff);
        %ca = "0";
        %20 = ($sp - %ca);
        in;
        stack[%20] = $answer;
        %0a6 = "0";
        %4e9 = ($sp - %0a6);
        %b9 = stack[%4e9];
        %601 = "1";
        %f2c = ($sp - %601);
        %825 = "0";
        %e3e = (%f2c + %825);
        %0e = stack[%e3e];
        stack[%0e] = %b9;
        %b84 = "3";
        $sp = ($sp - %b84);
        %96 = "1";
        %ebf = ($sp + %96);
        %b5 = stack[%ebf];
        jump %b5;
    }
}