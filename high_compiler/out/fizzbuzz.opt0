main {
    proc #62 {
        $sp = "-1";
        %6f = #a0;
        jump %6f;
    }
}

func main {
    proc #a0 {
        %ff = "3";
        $sp = ($sp + %ff);
        %16 = "Enter how many iterations to perform:";
        %06 = "2";
        %70 = ($sp + %06);
        stack[%70] = %16;
        %86 = "1";
        %7a = ($sp + %86);
        %e8 = #fc;
        stack[%7a] = %e8;
        %aa = #f1;
        jump %aa;
    }

    proc #fc {
        %ad = "0";
        %eb = ($sp - %ad);
        %b0 = "2";
        %53 = ($sp + %b0);
        stack[%53] = %eb;
        %bb = "1";
        %ee = ($sp + %bb);
        %36 = #d2;
        stack[%ee] = %36;
        %12 = #95;
        jump %12;
    }

    proc #d2 {
        %82 = "1";
        %53b = "1";
        %90 = ($sp - %53b);
        %ca = "0";
        %29 = (%90 + %ca);
        stack[%29] = %82;
        %b4 = #2b;
        jump %b4;
    }

    proc #64 {
        %4d = "Done!";
        %87 = "2";
        %0d = ($sp + %87);
        stack[%0d] = %4d;
        %ed = "1";
        %d6 = ($sp + %ed);
        %c6 = #a09;
        stack[%d6] = %c6;
        %72 = #f1;
        jump %72;
    }

    proc #a09 {
        exit;
    }

    proc #b2 {
        %bb7 = "1";
        %df = ($sp - %bb7);
        %bd = stack[%df];
        %25 = "15";
        %5e = (%bd % %25);
        %e1 = "0";
        %53b1 = (%5e == %e1);
        %e85 = #ede;
        %54 = #e3;
        if %53b1 then jump %e85 else jump %54;
    }

    proc #d3 {
        %13 = "1";
        %d9 = ($sp - %13);
        %a1 = stack[%d9];
        %58 = "1";
        %1b = (%a1 + %58);
        %c62 = "1";
        %52 = ($sp - %c62);
        %cb = "0";
        %98 = (%52 + %cb);
        stack[%98] = %1b;
        %9d = #2b;
        jump %9d;
    }

    proc #ede {
        %97 = "FizzBuzz";
        %1a = "2";
        %35 = ($sp + %1a);
        stack[%35] = %97;
        %9e = "1";
        %99 = ($sp + %9e);
        %b6 = #54b;
        stack[%99] = %b6;
        %c7 = #f1;
        jump %c7;
    }

    proc #54b {
        %59 = #d3;
        jump %59;
    }

    proc #e3 {
        %7c = "1";
        %3c = ($sp - %7c);
        %ef = stack[%3c];
        %9b = "3";
        %f7 = (%ef % %9b);
        %f9 = "0";
        %37 = (%f7 == %f9);
        %be = #73;
        %5e8 = #361;
        if %37 then jump %be else jump %5e8;
    }

    proc #bb71 {
        %3c4 = #d3;
        jump %3c4;
    }

    proc #73 {
        %580 = "Fizz";
        %3e = "2";
        %42 = ($sp + %3e);
        stack[%42] = %580;
        %e6 = "1";
        %14 = ($sp + %e6);
        %51 = #85;
        stack[%14] = %51;
        %80 = #f1;
        jump %80;
    }

    proc #85 {
        %11 = #bb71;
        jump %11;
    }

    proc #361 {
        %db = "1";
        %61 = ($sp - %db);
        %03 = stack[%61];
        %85d = "5";
        %69 = (%03 % %85d);
        %e0 = "0";
        %3f = (%69 == %e0);
        %b9 = #15;
        %f2 = #3ed;
        if %3f then jump %b9 else jump %f2;
    }

    proc #6d {
        %148 = #bb71;
        jump %148;
    }

    proc #15 {
        %79 = "Buzz";
        %d2c = "2";
        %9bb = ($sp + %d2c);
        stack[%9bb] = %79;
        %594 = "1";
        %c9 = ($sp + %594);
        %37e = #46;
        stack[%c9] = %37e;
        %07 = #f1;
        jump %07;
    }

    proc #46 {
        %f6 = #6d;
        jump %f6;
    }

    proc #3ed {
        %f0 = "1";
        %794 = ($sp - %f0);
        %d8 = stack[%794];
        %26 = "2";
        %641 = ($sp + %26);
        stack[%641] = %d8;
        %10 = "1";
        %4e = ($sp + %10);
        %6d1 = #f99;
        stack[%4e] = %6d1;
        %5d = #f1;
        jump %5d;
    }

    proc #f99 {
        %d3a = #6d;
        jump %d3a;
    }

    proc #2b {
        %736 = "1";
        %30 = ($sp - %736);
        %c6d = stack[%30];
        %50 = "0";
        %d0 = ($sp - %50);
        %78 = stack[%d0];
        %0b = (%c6d <= %78);
        %036 = #b2;
        %fc1 = #64;
        if %0b then jump %036 else jump %fc1;
    }
}

func func.out {
    proc #f1 {
        %fa = "2";
        $sp = ($sp + %fa);
        %5c = "0";
        %d4 = ($sp - %5c);
        %74 = stack[%d4];
        out %74;
        %31 = "2";
        $sp = ($sp - %31);
        %75 = "1";
        %e5 = ($sp + %75);
        %f8 = stack[%e5];
        jump %f8;
    }
}

func func.in {
    proc #95 {
        %642 = "3";
        $sp = ($sp + %642);
        %37ee = "0";
        %514 = ($sp - %37ee);
        in;
        stack[%514] = $answer;
        %a4 = "0";
        %427 = ($sp - %a4);
        %eeb = stack[%427];
        %f3 = "1";
        %03e = ($sp - %f3);
        %e7 = "0";
        %e3b = (%03e + %e7);
        %a7 = stack[%e3b];
        stack[%a7] = %eeb;
        %8b = "3";
        $sp = ($sp - %8b);
        %8d = "1";
        %a5 = ($sp + %8d);
        %c63 = stack[%a5];
        jump %c63;
    }
}