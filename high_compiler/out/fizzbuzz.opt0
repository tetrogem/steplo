main {
    proc #9a {
        $sp = "-1";
        %85 = #39;
        jump %85;
    }
}

func main {
    proc #39 {
        %6a = "3";
        $sp = ($sp + %6a);
        %2d = "Enter how many iterations to perform:";
        %a0 = "2";
        %3d = ($sp + %a0);
        stack[%3d] = %2d;
        %87 = "1";
        %52 = ($sp + %87);
        %e8 = #15;
        stack[%52] = %e8;
        %be = #855;
        jump %be;
    }

    proc #15 {
        %2d9 = "0";
        %ba = ($sp - %2d9);
        %c2 = "2";
        %2c = ($sp + %c2);
        stack[%2c] = %ba;
        %2e = "1";
        %25 = ($sp + %2e);
        %bc = #a2;
        stack[%25] = %bc;
        %73 = #74;
        jump %73;
    }

    proc #a2 {
        %db = "1";
        %850 = "1";
        %f2 = ($sp - %850);
        %37 = "0";
        %4a = (%f2 + %37);
        stack[%4a] = %db;
        %86 = #a8;
        jump %86;
    }

    proc #f3 {
        %84 = "Done!";
        %d1 = "2";
        %cf = ($sp + %d1);
        stack[%cf] = %84;
        %c4 = "1";
        %08 = ($sp + %c4);
        %90 = #ca;
        stack[%08] = %90;
        %bca = #855;
        jump %bca;
    }

    proc #ca {
        exit;
    }

    proc #19 {
        %a1 = "1";
        %11 = ($sp - %a1);
        %78 = stack[%11];
        %2d6 = "15";
        %194 = (%78 % %2d6);
        %eb = "0";
        %27 = (%194 == %eb);
        %f35 = #91;
        %7a = #a9;
        if %27 then jump %f35 else jump %7a;
    }

    proc #53 {
        %a13 = "1";
        %50 = ($sp - %a13);
        %746 = stack[%50];
        %c3 = "1";
        %71 = (%746 + %c3);
        %7f = "1";
        %c0 = ($sp - %7f);
        %c7 = "0";
        %8f = (%c0 + %c7);
        stack[%8f] = %71;
        %6b = #a8;
        jump %6b;
    }

    proc #91 {
        %fb = "FizzBuzz";
        %ab = "2";
        %f3b = ($sp + %ab);
        stack[%f3b] = %fb;
        %5e = "1";
        %20 = ($sp + %5e);
        %a4 = #24;
        stack[%20] = %a4;
        %de = #855;
        jump %de;
    }

    proc #24 {
        %31 = #53;
        jump %31;
    }

    proc #a9 {
        %8fb = "1";
        %59 = ($sp - %8fb);
        %29 = stack[%59];
        %115 = "3";
        %531 = (%29 % %115);
        %a10 = "0";
        %b8 = (%531 == %a10);
        %2cc = #ce;
        %1c = #534;
        if %b8 then jump %2cc else jump %1c;
    }

    proc #ebe {
        %42 = #53;
        jump %42;
    }

    proc #ce {
        %40 = "Fizz";
        %a7 = "2";
        %b0 = ($sp + %a7);
        stack[%b0] = %40;
        %55 = "1";
        %14 = ($sp + %55);
        %b02 = #32;
        stack[%14] = %b02;
        %c9 = #855;
        jump %c9;
    }

    proc #32 {
        %44 = #ebe;
        jump %44;
    }

    proc #534 {
        %8fc = "1";
        %39d = ($sp - %8fc);
        %c9b = stack[%39d];
        %17 = "5";
        %0f = (%c9b % %17);
        %275 = "0";
        %cc = (%0f == %275);
        %96 = #291;
        %bf = #ab1;
        if %cc then jump %96 else jump %bf;
    }

    proc #d8 {
        %bce = #ebe;
        jump %bce;
    }

    proc #291 {
        %e1 = "Buzz";
        %f27 = "2";
        %d2 = ($sp + %f27);
        stack[%d2] = %e1;
        %49 = "1";
        %12 = ($sp + %49);
        %f27c = #8c;
        stack[%12] = %f27c;
        %02 = #855;
        jump %02;
    }

    proc #8c {
        %09 = #d8;
        jump %09;
    }

    proc #ab1 {
        %6e = "1";
        %78a = ($sp - %6e);
        %34 = stack[%78a];
        %fbc = "2";
        %06 = ($sp + %fbc);
        stack[%06] = %34;
        %34f = "1";
        %ee = ($sp + %34f);
        %495 = #d7;
        stack[%ee] = %495;
        %dbc = #855;
        jump %dbc;
    }

    proc #d7 {
        %e4 = #d8;
        jump %e4;
    }

    proc #a8 {
        %83 = "1";
        %55c = ($sp - %83);
        %a48 = stack[%55c];
        %f9 = "0";
        %509 = ($sp - %f9);
        %854 = stack[%509];
        %e0 = (!(%a48 > %854));
        %e0e = #19;
        %62 = #f3;
        if %e0 then jump %e0e else jump %62;
    }
}

func func.out {
    proc #855 {
        %397 = "2";
        $sp = ($sp + %397);
        %865 = "0";
        %1a = ($sp - %865);
        %16 = stack[%1a];
        out %16;
        %51 = "2";
        $sp = ($sp - %51);
        %716 = "1";
        %1f = ($sp + %716);
        %96f = stack[%1f];
        jump %96f;
    }
}

func func.in {
    proc #74 {
        %27a = "3";
        $sp = ($sp + %27a);
        %e2 = "0";
        %6d = ($sp - %e2);
        in;
        stack[%6d] = $answer;
        %1a2 = "0";
        %d8a = ($sp - %1a2);
        %193 = stack[%d8a];
        %62f = "1";
        %8e = ($sp - %62f);
        %aa = stack[%8e];
        %18 = "0";
        %b2 = (%aa + %18);
        stack[%b2] = %193;
        %a19 = "3";
        $sp = ($sp - %a19);
        %b2f = "1";
        %dc = ($sp + %b2f);
        %38 = stack[%dc];
        jump %38;
    }
}

func func.random {
    proc #79 {
        %081 = "5";
        $sp = ($sp + %081);
        %143 = "0";
        %b7 = ($sp - %143);
        %c48 = "2";
        %d7b = ($sp - %c48);
        %04 = stack[%d7b];
        %6f = "1";
        %c99 = ($sp - %6f);
        %a191 = stack[%c99];
        stack[%b7] = (%04 <random> %a191);
        %93 = "0";
        %390 = ($sp - %93);
        %86b = stack[%390];
        %f7 = "3";
        %95 = ($sp - %f7);
        %f0 = stack[%95];
        %84e = "0";
        %ef = (%f0 + %84e);
        stack[%ef] = %86b;
        %1a4 = "5";
        $sp = ($sp - %1a4);
        %66 = "1";
        %39d4 = ($sp + %66);
        %8cc = stack[%39d4];
        jump %8cc;
    }
}