main {
    proc #27 {
        $sp = "-1";
        %89 = #0d;
        jump %89;
    }
}

func main {
    proc #0d {
        %f5 = "3";
        $sp = ($sp + %f5);
        %ce = "Enter how many iterations to perform:";
        %59 = "2";
        %40 = ($sp + %59);
        stack[%40] = %ce;
        %fb = "1";
        %c4 = ($sp + %fb);
        %d9 = #7d;
        stack[%c4] = %d9;
        %48 = #f5d;
        jump %48;
    }

    proc #7d {
        %7c = "0";
        %0b = ($sp - %7c);
        %ca = "2";
        %98 = ($sp + %ca);
        stack[%98] = %0b;
        %91 = "1";
        %66 = ($sp + %91);
        %a0 = #d8;
        stack[%66] = %a0;
        %82 = #45;
        jump %82;
    }

    proc #d8 {
        %b0 = "1";
        %13 = "1";
        %6a = ($sp - %13);
        %ec = "0";
        %12 = (%6a + %ec);
        stack[%12] = %b0;
        %c6 = #cc;
        jump %c6;
    }

    proc #f57 {
        %24 = "Done!";
        %f2 = "2";
        %e3 = ($sp + %f2);
        stack[%e3] = %24;
        %fe = "1";
        %e30 = ($sp + %fe);
        %67 = #4d;
        stack[%e30] = %67;
        %96 = #f5d;
        jump %96;
    }

    proc #4d {
        exit;
    }

    proc #f8 {
        %58 = "1";
        %4db = ($sp - %58);
        %127 = stack[%4db];
        %ab = "15";
        %9c = (%127 % %ab);
        %a6 = "0";
        %a3 = (%9c == %a6);
        %32 = #fbb;
        %6d = #3c;
        if %a3 then jump %32 else jump %6d;
    }

    proc #ed {
        %63 = "1";
        %1c = ($sp - %63);
        %75 = stack[%1c];
        %7c2 = "1";
        %c3 = (%75 + %7c2);
        %6b = "1";
        %2c = ($sp - %6b);
        %8a = "0";
        %0f = (%2c + %8a);
        stack[%0f] = %c3;
        %20 = #cc;
        jump %20;
    }

    proc #fbb {
        %cd = "FizzBuzz";
        %bd = "2";
        %ea = ($sp + %bd);
        stack[%ea] = %cd;
        %7ce = "1";
        %d2 = ($sp + %7ce);
        %f7 = #25;
        stack[%d2] = %f7;
        %d5 = #f5d;
        jump %d5;
    }

    proc #25 {
        %db = #ed;
        jump %db;
    }

    proc #3c {
        %29 = "1";
        %00 = ($sp - %29);
        %4f = stack[%00];
        %46 = "3";
        %c9 = (%4f % %46);
        %8a9 = "0";
        %bf = (%c9 == %8a9);
        %e31 = #22;
        %8d = #581;
        if %bf then jump %e31 else jump %8d;
    }

    proc #325 {
        %a9 = #ed;
        jump %a9;
    }

    proc #22 {
        %09 = "Fizz";
        %f6 = "2";
        %ca7 = ($sp + %f6);
        stack[%ca7] = %09;
        %c1 = "1";
        %33 = ($sp + %c1);
        %e37 = #1b;
        stack[%33] = %e37;
        %68 = #f5d;
        jump %68;
    }

    proc #1b {
        %cb = #325;
        jump %cb;
    }

    proc #581 {
        %db2 = "1";
        %c12 = ($sp - %db2);
        %bb = stack[%c12];
        %e5 = "5";
        %2e = (%bb % %e5);
        %73 = "0";
        %4b = (%2e == %73);
        %9a = #78;
        %34 = #e9;
        if %4b then jump %9a else jump %34;
    }

    proc #ee {
        %667 = #325;
        jump %667;
    }

    proc #78 {
        %e4 = "Buzz";
        %1a = "2";
        %21 = ($sp + %1a);
        stack[%21] = %e4;
        %16 = "1";
        %59a = ($sp + %16);
        %e8 = #76;
        stack[%59a] = %e8;
        %19 = #f5d;
        jump %19;
    }

    proc #76 {
        %a7 = #ee;
        jump %a7;
    }

    proc #e9 {
        %b4 = "1";
        %64 = ($sp - %b4);
        %349 = stack[%64];
        %bb2 = "2";
        %44 = ($sp + %bb2);
        stack[%44] = %349;
        %915 = "1";
        %443 = ($sp + %915);
        %e53 = #87;
        stack[%443] = %e53;
        %f7e = #f5d;
        jump %f7e;
    }

    proc #87 {
        %323 = #ee;
        jump %323;
    }

    proc #cc {
        %ac = "1";
        %c2 = ($sp - %ac);
        %86 = stack[%c2];
        %3a = "0";
        %9f = ($sp - %3a);
        %35 = stack[%9f];
        %08 = (%86 <= %35);
        %da = #f8;
        %6d6 = #f57;
        if %08 then jump %da else jump %6d6;
    }
}

func func.out {
    proc #f5d {
        %ac5 = "2";
        $sp = ($sp + %ac5);
        %59d = "0";
        %c97 = ($sp - %59d);
        %e88 = stack[%c97];
        out %e88;
        %8b = "2";
        $sp = ($sp - %8b);
        %a0a = "1";
        %b1 = ($sp + %a0a);
        %b5 = stack[%b1];
        jump %b5;
    }
}

func func.in {
    proc #45 {
        %cf = "3";
        $sp = ($sp + %cf);
        %68e = "0";
        %90 = ($sp - %68e);
        in;
        stack[%90] = $answer;
        %5a = "0";
        %7e = ($sp - %5a);
        %d6 = stack[%7e];
        %d7 = "1";
        %be = ($sp - %d7);
        %635 = "0";
        %e6 = (%be + %635);
        %c17 = stack[%e6];
        stack[%c17] = %d6;
        %eed = "3";
        $sp = ($sp - %eed);
        %197 = "1";
        %aa = ($sp + %197);
        %93 = stack[%aa];
        jump %93;
    }
}