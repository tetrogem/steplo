main {
    proc #4c {
        $sp = "-1";
        %e4 = #33;
        jump %e4;
    }
}

func main {
    proc #33 {
        %40 = "3";
        $sp = ($sp + %40);
        %04 = "Enter how many iterations to perform:";
        %17 = "2";
        %bc = ($sp + %17);
        stack[%bc] = %04;
        %75 = "1";
        %76 = ($sp + %75);
        %38 = #bc3;
        stack[%76] = %38;
        %87 = #28;
        jump %87;
    }

    proc #bc3 {
        %41 = "0";
        %2f = ($sp - %41);
        %bcf = "2";
        %8f = ($sp + %bcf);
        stack[%8f] = %2f;
        %043 = "1";
        %f4 = ($sp + %043);
        %48 = #6a;
        stack[%f4] = %48;
        %5c = #c2;
        jump %5c;
    }

    proc #6a {
        %ef = "1";
        %0a = "1";
        %752 = ($sp - %0a);
        %fe = "0";
        %70 = (%752 + %fe);
        stack[%70] = %ef;
        %20 = #b5;
        jump %20;
    }

    proc #49 {
        %62 = "Done!";
        %05 = "2";
        %8e = ($sp + %05);
        stack[%8e] = %62;
        %93 = "1";
        %ac = ($sp + %93);
        %b3 = #08;
        stack[%ac] = %b3;
        %23 = #28;
        jump %23;
    }

    proc #08 {
        exit;
    }

    proc #b8 {
        %6ab = "1";
        %44 = ($sp - %6ab);
        %8b = stack[%44];
        %c8 = "15";
        %15 = (%8b % %c8);
        %bd = "0";
        %b7 = (%15 == %bd);
        %acd = #f44;
        %03 = #5f;
        if %b7 then jump %acd else jump %03;
    }

    proc #c0 {
        %18 = "1";
        %acc = ($sp - %18);
        %3a = stack[%acc];
        %338 = "1";
        %f2 = (%3a + %338);
        %289 = "1";
        %d4 = ($sp - %289);
        %b0 = "0";
        %8c = (%d4 + %b0);
        stack[%8c] = %f2;
        %b8b = #b5;
        jump %b8b;
    }

    proc #f44 {
        %d9 = "FizzBuzz";
        %07 = "2";
        %5fb = ($sp + %07);
        stack[%5fb] = %d9;
        %cc = "1";
        %a5 = ($sp + %cc);
        %90 = #c22;
        stack[%a5] = %90;
        %c3 = #28;
        jump %c3;
    }

    proc #c22 {
        %40a = #c0;
        jump %40a;
    }

    proc #5f {
        %27 = "1";
        %92 = ($sp - %27);
        %c7 = stack[%92];
        %a4 = "3";
        %fb = (%c7 % %a4);
        %4e = "0";
        %f5 = (%fb == %4e);
        %86 = #031;
        %dd = #f6;
        if %f5 then jump %86 else jump %dd;
    }

    proc #13 {
        %b7e = #c0;
        jump %b7e;
    }

    proc #031 {
        %82 = "Fizz";
        %65 = "2";
        %bde = ($sp + %65);
        stack[%bde] = %82;
        %7c = "1";
        %8bc = ($sp + %7c);
        %382 = #20a;
        stack[%8bc] = %382;
        %f8 = #28;
        jump %f8;
    }

    proc #20a {
        %02 = #13;
        jump %02;
    }

    proc #f6 {
        %ca = "1";
        %bc1 = ($sp - %ca);
        %8cf = stack[%bc1];
        %66 = "5";
        %34 = (%8cf % %66);
        %e9 = "0";
        %6b = (%34 == %e9);
        %69 = #cc1;
        %5b = #342;
        if %6b then jump %69 else jump %5b;
    }

    proc #751 {
        %75b = #13;
        jump %75b;
    }

    proc #cc1 {
        %c39 = "Buzz";
        %21 = "2";
        %5c3 = ($sp + %21);
        stack[%5c3] = %c39;
        %c5 = "1";
        %9a = ($sp + %c5);
        %21c = #77;
        stack[%9a] = %21c;
        %b72 = #28;
        jump %b72;
    }

    proc #77 {
        %01 = #751;
        jump %01;
    }

    proc #342 {
        %a0 = "1";
        %2b = ($sp - %a0);
        %cb = stack[%2b];
        %06 = "2";
        %e8 = ($sp + %06);
        stack[%e8] = %cb;
        %76f = "1";
        %217 = ($sp + %76f);
        %cd = #47;
        stack[%217] = %cd;
        %27d = #28;
        jump %27d;
    }

    proc #47 {
        %ac6 = #751;
        jump %ac6;
    }

    proc #b5 {
        %13f = "1";
        %0b = ($sp - %13f);
        %4a = stack[%0b];
        %52 = "0";
        %1e = ($sp - %52);
        %5d = stack[%1e];
        %0c = (!(%4a > %5d));
        %32 = #b8;
        %7cf = #49;
        if %0c then jump %32 else jump %7cf;
    }
}

func func.out {
    proc #28 {
        %f3 = "2";
        $sp = ($sp + %f3);
        %81 = "0";
        %98 = ($sp - %81);
        %b50 = stack[%98];
        out %b50;
        %c85 = "2";
        $sp = ($sp - %c85);
        %8d = "1";
        %a1 = ($sp + %8d);
        %1d = stack[%a1];
        jump %1d;
    }
}

func func.in {
    proc #c2 {
        %f1 = "3";
        $sp = ($sp + %f1);
        %9d = "0";
        %987 = ($sp - %9d);
        in;
        stack[%987] = $answer;
        %984 = "0";
        %46 = ($sp - %984);
        %50 = stack[%46];
        %5c8 = "1";
        %22 = ($sp - %5c8);
        %286 = stack[%22];
        %9f = "0";
        %e7 = (%286 + %9f);
        stack[%e7] = %50;
        %7d = "3";
        $sp = ($sp - %7d);
        %0b8 = "1";
        %f7 = ($sp + %0b8);
        %88 = stack[%f7];
        jump %88;
    }
}