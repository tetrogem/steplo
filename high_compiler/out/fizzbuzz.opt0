main {
    proc #2f {
        $sp = "-1";
        %67 = #59;
        jump %67;
    }
}

func main {
    proc #59 {
        %b8 = "3";
        $sp = ($sp + %b8);
        %4d = "Enter how many iterations to perform:";
        %1e = "2";
        %b8b = ($sp + %1e);
        stack[%b8b] = %4d;
        %54 = "1";
        %2b = ($sp + %54);
        %6c = #38;
        stack[%2b] = %6c;
        %fe = #3c;
        jump %fe;
    }

    proc #38 {
        %dc = "0";
        %5c = ($sp - %dc);
        %f1 = "2";
        %75 = ($sp + %f1);
        stack[%75] = %5c;
        %86 = "1";
        %da = ($sp + %86);
        %76 = #61;
        stack[%da] = %76;
        %cf = #e9;
        jump %cf;
    }

    proc #61 {
        %21 = "1";
        %c2 = "1";
        %7b = ($sp - %c2);
        %fd = "0";
        %96 = (%7b + %fd);
        stack[%96] = %21;
        %c3 = #c8;
        jump %c3;
    }

    proc #93 {
        %9a = "Done!";
        %32 = "2";
        %3b = ($sp + %32);
        stack[%3b] = %9a;
        %8e = "1";
        %00 = ($sp + %8e);
        %36 = #a9;
        stack[%00] = %36;
        %bc = #3c;
        jump %bc;
    }

    proc #a9 {
        exit;
    }

    proc #f19 {
        %4f = "1";
        %09 = ($sp - %4f);
        %9d = stack[%09];
        %dcf = "15";
        %863 = (%9d % %dcf);
        %e4 = "0";
        %0f = (%863 == %e4);
        %78 = #ed;
        %26 = #82;
        if %0f then jump %78 else jump %26;
    }

    proc #aa {
        %5b = "1";
        %5f = ($sp - %5b);
        %04 = stack[%5f];
        %26c = "1";
        %50 = (%04 + %26c);
        %03 = "1";
        %da0 = ($sp - %03);
        %33 = "0";
        %f0 = (%da0 + %33);
        stack[%f0] = %50;
        %ab = #c8;
        jump %ab;
    }

    proc #ed {
        %0fa = "FizzBuzz";
        %27 = "2";
        %d1 = ($sp + %27);
        stack[%d1] = %0fa;
        %92 = "1";
        %cd = ($sp + %92);
        %e4c = #9f;
        stack[%cd] = %e4c;
        %bf = #3c;
        jump %bf;
    }

    proc #9f {
        %14 = #aa;
        jump %14;
    }

    proc #82 {
        %68 = "1";
        %e3 = ($sp - %68);
        %44 = stack[%e3];
        %f3 = "3";
        %77 = (%44 % %f3);
        %aaa = "0";
        %c7 = (%77 == %aaa);
        %37 = #5e;
        %28 = #a7;
        if %c7 then jump %37 else jump %28;
    }

    proc #40 {
        %b5 = #aa;
        jump %b5;
    }

    proc #5e {
        %0b = "Fizz";
        %76a = "2";
        %048 = ($sp + %76a);
        stack[%048] = %0b;
        %9f5 = "1";
        %44b = ($sp + %9f5);
        %fb = #de;
        stack[%44b] = %fb;
        %1b = #3c;
        jump %1b;
    }

    proc #de {
        %b84 = #40;
        jump %b84;
    }

    proc #a7 {
        %2b4 = "1";
        %b0 = ($sp - %2b4);
        %e47 = stack[%b0];
        %3f = "5";
        %97 = (%e47 % %3f);
        %dd = "0";
        %cf9 = (%97 == %dd);
        %43 = #448;
        %62 = #1c;
        if %cf9 then jump %43 else jump %62;
    }

    proc #5e6 {
        %672 = #40;
        jump %672;
    }

    proc #448 {
        %e6 = "Buzz";
        %26ce = "2";
        %98 = ($sp + %26ce);
        stack[%98] = %e6;
        %cc = "1";
        %fb3 = ($sp + %cc);
        %3e = #9a0;
        stack[%fb3] = %3e;
        %6b = #3c;
        jump %6b;
    }

    proc #9a0 {
        %7d = #5e6;
        jump %7d;
    }

    proc #1c {
        %b1 = "1";
        %cca = ($sp - %b1);
        %689 = stack[%cca];
        %83 = "2";
        %bf5 = ($sp + %83);
        stack[%bf5] = %689;
        %01 = "1";
        %39 = ($sp + %01);
        %6f = #3e7;
        stack[%39] = %6f;
        %1d = #3c;
        jump %1d;
    }

    proc #3e7 {
        %60 = #5e6;
        jump %60;
    }

    proc #c8 {
        %8d = "1";
        %84 = ($sp - %8d);
        %c1 = stack[%84];
        %06 = "0";
        %1f = ($sp - %06);
        %976 = stack[%1f];
        %f31 = (%c1 <= %976);
        %d0 = #f19;
        %81 = #93;
        if %f31 then jump %d0 else jump %81;
    }
}

func func.out {
    proc #3c {
        %c0 = "2";
        $sp = ($sp + %c0);
        %76f = "0";
        %04c = ($sp - %76f);
        %3f7 = stack[%04c];
        out %3f7;
        %abf = "2";
        $sp = ($sp - %abf);
        %035 = "1";
        %c2f = ($sp + %035);
        %8c = stack[%c2f];
        jump %8c;
    }
}

func func.in {
    proc #e9 {
        %3b3 = "3";
        $sp = ($sp + %3b3);
        %8f = "0";
        %59a = ($sp - %8f);
        in;
        stack[%59a] = $answer;
        %5ce = "0";
        %9e = ($sp - %5ce);
        %6c5 = stack[%9e];
        %ba = "1";
        %85 = ($sp - %ba);
        %d05 = stack[%85];
        %b6 = "0";
        %f3a = (%d05 + %b6);
        stack[%f3a] = %6c5;
        %bb = "3";
        $sp = ($sp - %bb);
        %0b9 = "1";
        %a95 = ($sp + %0b9);
        %bd = stack[%a95];
        jump %bd;
    }
}