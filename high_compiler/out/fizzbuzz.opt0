main {
    proc #af {
        $sp = "-1";
        %b5 = #04;
        jump %b5;
    }
}

func main {
    proc #04 {
        %14 = "3";
        $sp = ($sp + %14);
        %35 = "Enter how many iterations to perform:";
        %4f = "2";
        %cc = ($sp + %4f);
        stack[%cc] = %35;
        %f7 = "1";
        %dd = ($sp + %f7);
        %a2 = #c7;
        stack[%dd] = %a2;
        %ba = #043;
        jump %ba;
    }

    proc #c7 {
        %19 = "0";
        %7e = ($sp - %19);
        %a8 = "2";
        %29 = ($sp + %a8);
        stack[%29] = %7e;
        %19a = "1";
        %aa = ($sp + %19a);
        %07 = #58;
        stack[%aa] = %07;
        %89 = #be;
        jump %89;
    }

    proc #58 {
        %b3 = "1";
        %f5 = "1";
        %e7 = ($sp - %f5);
        %72 = "0";
        %60 = (%e7 + %72);
        stack[%60] = %b3;
        %79 = #3e;
        jump %79;
    }

    proc #e9 {
        %0e = "Done!";
        %bc = "2";
        %48 = ($sp + %bc);
        stack[%48] = %0e;
        %98 = "1";
        %cd = ($sp + %98);
        %30 = #a8a;
        stack[%cd] = %30;
        %d6 = #043;
        jump %d6;
    }

    proc #a8a {
        exit;
    }

    proc #db {
        %c7a = "1";
        %f4 = ($sp - %c7a);
        %68 = stack[%f4];
        %73 = "15";
        %94 = (%68 % %73);
        %05 = "0";
        %140 = (%94 == %05);
        %7b = #ad;
        %d5 = #8d;
        if %140 then jump %7b else jump %d5;
    }

    proc #bb {
        %09 = "1";
        %40 = ($sp - %09);
        %12 = stack[%40];
        %66 = "1";
        %11 = (%12 + %66);
        %3f = "1";
        %e71 = ($sp - %3f);
        %e4 = "0";
        %ea = (%e71 + %e4);
        stack[%ea] = %11;
        %1e = #3e;
        jump %1e;
    }

    proc #ad {
        %0ee = "FizzBuzz";
        %50 = "2";
        %1f = ($sp + %50);
        stack[%1f] = %0ee;
        %dd3 = "1";
        %b7 = ($sp + %dd3);
        %ac = #72e;
        stack[%b7] = %ac;
        %c7d = #043;
        jump %c7d;
    }

    proc #72e {
        %44 = #bb;
        jump %44;
    }

    proc #8d {
        %f4e = "1";
        %f51 = ($sp - %f4e);
        %cd4 = stack[%f51];
        %d0 = "3";
        %20 = (%cd4 % %d0);
        %6a = "0";
        %e3 = (%20 == %6a);
        %08 = #57;
        %203 = #9e;
        if %e3 then jump %08 else jump %203;
    }

    proc #733 {
        %b76 = #bb;
        jump %b76;
    }

    proc #57 {
        %03 = "Fizz";
        %a4 = "2";
        %4b = ($sp + %a4);
        stack[%4b] = %03;
        %575 = "1";
        %2a = ($sp + %575);
        %81 = #88;
        stack[%2a] = %81;
        %ee = #043;
        jump %ee;
    }

    proc #88 {
        %98a = #733;
        jump %98a;
    }

    proc #9e {
        %77 = "1";
        %bb2 = ($sp - %77);
        %cf = stack[%bb2];
        %ac2 = "5";
        %e70 = (%cf % %ac2);
        %407 = "0";
        %cc3 = (%e70 == %407);
        %15 = #b74;
        %04c = #96;
        if %cc3 then jump %15 else jump %04c;
    }

    proc #e5 {
        %7b5 = #733;
        jump %7b5;
    }

    proc #b74 {
        %47 = "Buzz";
        %040 = "2";
        %46 = ($sp + %040);
        stack[%46] = %47;
        %fa = "1";
        %478 = ($sp + %fa);
        %f73 = #34;
        stack[%478] = %f73;
        %9a = #043;
        jump %9a;
    }

    proc #34 {
        %fab = #e5;
        jump %fab;
    }

    proc #96 {
        %61 = "1";
        %37 = ($sp - %61);
        %1d = stack[%37];
        %d62 = "2";
        %5d = ($sp + %d62);
        stack[%5d] = %1d;
        %2ac = "1";
        %59 = ($sp + %2ac);
        %ee0 = #a0;
        stack[%59] = %ee0;
        %592 = #043;
        jump %592;
    }

    proc #a0 {
        %b5a = #e5;
        jump %b5a;
    }

    proc #3e {
        %b2 = "1";
        %32 = ($sp - %b2);
        %31 = stack[%32];
        %61b = "0";
        %84 = ($sp - %61b);
        %3c = stack[%84];
        %8b = (!(%31 > %3c));
        %309 = #db;
        %e7a = #e9;
        if %8b then jump %309 else jump %e7a;
    }
}

func func.out {
    proc #043 {
        %26 = "2";
        $sp = ($sp + %26);
        %fc = "0";
        %c4 = ($sp - %fc);
        %80 = stack[%c4];
        out %80;
        %fd = "2";
        $sp = ($sp - %fd);
        %99 = "1";
        %da = ($sp + %99);
        %28 = stack[%da];
        jump %28;
    }
}

func func.in {
    proc #be {
        %5f = "3";
        $sp = ($sp + %5f);
        %45 = "0";
        %61f = ($sp - %45);
        in;
        stack[%61f] = $answer;
        %f5b = "0";
        %70 = ($sp - %f5b);
        %d3 = stack[%70];
        %7e8 = "1";
        %b2f = ($sp - %7e8);
        %709 = stack[%b2f];
        %87 = "0";
        %9b = (%709 + %87);
        stack[%9b] = %d3;
        %359 = "3";
        $sp = ($sp - %359);
        %a24 = "1";
        %e8 = ($sp + %a24);
        %807 = stack[%e8];
        jump %807;
    }
}