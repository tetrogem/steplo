main {
    proc #8b {
        $sp = "-1";
        %34 = #ac;
        jump %34;
    }
}

func main {
    proc #ac {
        %55 = "25";
        $sp = ($sp + %55);
        %b6 = "-3";
        %e1 = "23";
        %8e = ($sp - %e1);
        %d8 = "0";
        %02 = (%8e + %d8);
        stack[%02] = %b6;
        %32 = "-2";
        %73 = "23";
        %ae = ($sp - %73);
        %ed = "1";
        %1f = (%ae + %ed);
        stack[%1f] = %32;
        %04 = "0";
        %90 = "23";
        %50 = ($sp - %90);
        %501 = "2";
        %cd = (%50 + %501);
        stack[%cd] = %04;
        %f0 = "0";
        %22 = "23";
        %72 = ($sp - %22);
        %08 = "3";
        %5c = (%72 + %08);
        stack[%5c] = %f0;
        %52 = "0";
        %1c = "23";
        %c6 = ($sp - %1c);
        %12 = "4";
        %61 = (%c6 + %12);
        stack[%61] = %52;
        %37 = "6";
        %b5 = "23";
        %fe = ($sp - %b5);
        %f6 = "5";
        %2e = (%fe + %f6);
        stack[%2e] = %37;
        %ef = "7";
        %40 = "23";
        %9f = ($sp - %40);
        %43 = "6";
        %13 = (%9f + %43);
        stack[%13] = %ef;
        %9e = "0";
        %ca = "23";
        %38 = ($sp - %ca);
        %7a = "7";
        %0f = (%38 + %7a);
        stack[%0f] = %9e;
        %35 = "0";
        %7b = "23";
        %b1 = ($sp - %7b);
        %16 = "8";
        %c1 = (%b1 + %16);
        stack[%c1] = %35;
        %7e = "0";
        %de = "23";
        %19 = ($sp - %de);
        %1f8 = "9";
        %aeb = (%19 + %1f8);
        stack[%aeb] = %7e;
        %77 = "0";
        %72f = "23";
        %f5 = ($sp - %72f);
        %68 = "10";
        %28 = (%f5 + %68);
        stack[%28] = %77;
        %25 = "0";
        %7af = "23";
        %36 = ($sp - %7af);
        %75 = "11";
        %98 = (%36 + %75);
        stack[%98] = %25;
        %ff = "0";
        %74 = "23";
        %81 = ($sp - %74);
        %ab = "12";
        %49 = (%81 + %ab);
        stack[%49] = %ff;
        %bf = "-1";
        %11 = "8";
        %0d = ($sp - %11);
        %06 = "0";
        %a9 = (%0d + %06);
        stack[%a9] = %bf;
        %6f = "1";
        %e12 = "8";
        %9d = ($sp - %e12);
        %d5 = "1";
        %8f = (%9d + %d5);
        stack[%8f] = %6f;
        %db = "1";
        %ba = "8";
        %41 = ($sp - %ba);
        %4a = "2";
        %ce = (%41 + %4a);
        stack[%ce] = %db;
        %4ae = "1";
        %b5e = "8";
        %122 = ($sp - %b5e);
        %70 = "3";
        %ae5 = (%122 + %70);
        stack[%ae5] = %4ae;
        %39 = "2";
        %135 = "8";
        %d3 = ($sp - %135);
        %69 = "4";
        %f0d = (%d3 + %69);
        stack[%f0d] = %39;
        %45 = "3";
        %cd1 = "8";
        %b2 = ($sp - %cd1);
        %30 = "5";
        %5b = (%b2 + %30);
        stack[%5b] = %45;
        %d4 = "10";
        %2b = ($sp - %d4);
        %3f = "2";
        %a8 = ($sp + %3f);
        stack[%a8] = %2b;
        %ad = "23";
        %a5 = ($sp - %ad);
        %8c = "3";
        %49d = ($sp + %8c);
        stack[%49d] = %a5;
        %8d = "13";
        %c0 = "4";
        %b52 = ($sp + %c0);
        stack[%b52] = %8d;
        %ba0 = "1";
        %31 = ($sp + %ba0);
        %1c8 = #fd;
        stack[%31] = %1c8;
        %59 = #17;
        jump %59;
    }

    proc #fd {
        %2bc = "2";
        %6b = ($sp - %2bc);
        %67 = "2";
        %10 = ($sp + %67);
        stack[%10] = %6b;
        %397 = "8";
        %0c = ($sp - %397);
        %83 = "3";
        %99 = ($sp + %83);
        stack[%99] = %0c;
        %62 = "6";
        %75c = "4";
        %03 = ($sp + %75c);
        stack[%03] = %62;
        %6a = "1";
        %29 = ($sp + %6a);
        %cf = #34c;
        stack[%29] = %cf;
        %86 = #17;
        jump %86;
    }

    proc #34c {
        %3fd = "0";
        %2f = ($sp - %3fd);
        %26 = "2";
        %e6 = ($sp + %26);
        stack[%e6] = %2f;
        %ced = "10";
        %df = ($sp - %ced);
        %1e = "3";
        %5bd = ($sp + %1e);
        stack[%5bd] = %df;
        %c3 = "1";
        %1ed = ($sp + %c3);
        %ce6 = #feb;
        stack[%1ed] = %ce6;
        %64 = #af;
        jump %64;
    }

    proc #feb {
        %229 = "0";
        %400 = ($sp - %229);
        %3b = stack[%400];
        %9b = "2";
        %7c = ($sp + %9b);
        stack[%7c] = %3b;
        %1a = "1";
        %d41 = ($sp + %1a);
        %e64 = #75b;
        stack[%d41] = %e64;
        %989 = #70b;
        jump %989;
    }

    proc #75b {
        %51 = "0";
        %1a4 = ($sp - %51);
        %3d = "2";
        %dbd = ($sp + %3d);
        stack[%dbd] = %1a4;
        %12a = "2";
        %ce1 = ($sp - %12a);
        %8da = "3";
        %9e1 = ($sp + %8da);
        stack[%9e1] = %ce1;
        %f3 = "1";
        %db6 = ($sp + %f3);
        %a5e = #100;
        stack[%db6] = %a5e;
        %f1 = #af;
        jump %f1;
    }

    proc #100 {
        %da = "0";
        %60 = ($sp - %da);
        %24 = stack[%60];
        %288 = "2";
        %593 = ($sp + %288);
        stack[%593] = %24;
        %f12 = "1";
        %16d = ($sp + %f12);
        %dfd = #98f;
        stack[%16d] = %dfd;
        %0da = #70b;
        jump %0da;
    }

    proc #98f {
        %f15 = "10";
        %0a = ($sp - %f15);
        %e2 = "2";
        %41c = ($sp + %e2);
        stack[%41c] = %0a;
        %20 = "7";
        %00 = "3";
        %56 = ($sp + %00);
        stack[%56] = %20;
        %3e = "2";
        %b0 = ($sp - %3e);
        %b9 = "4";
        %9a = ($sp + %b9);
        stack[%9a] = %b0;
        %a3 = "6";
        %79 = "5";
        %993 = ($sp + %79);
        stack[%993] = %a3;
        %ffc = "1";
        %87 = ($sp + %ffc);
        %81b = #b0d;
        stack[%87] = %81b;
        %d5f = #4ae5;
        jump %d5f;
    }

    proc #b0d {
        %53 = "0";
        %241 = ($sp - %53);
        %46 = "2";
        %d6 = ($sp + %46);
        stack[%d6] = %241;
        %d1 = "10";
        %65 = ($sp - %d1);
        %c6b = "3";
        %cd18 = ($sp + %c6b);
        stack[%cd18] = %65;
        %d2 = "1";
        %98b = ($sp + %d2);
        %774 = #7ee;
        stack[%98b] = %774;
        %3e4 = #af;
        jump %3e4;
    }

    proc #7ee {
        %508 = "Merged: ";
        %15 = "0";
        %396 = ($sp - %15);
        %e8 = stack[%396];
        %d50 = (%508 ~ %e8);
        %69e = "2";
        %d66 = ($sp + %69e);
        stack[%d66] = %d50;
        %adb = "1";
        %a7 = ($sp + %adb);
        %3d5 = #d2f;
        stack[%a7] = %3d5;
        %c11 = #70b;
        jump %c11;
    }

    proc #d2f {
        exit;
    }
}

func func.Vector_new {
    proc #17 {
        %dd = "4";
        $sp = ($sp + %dd);
        %651 = "1";
        %c4 = ($sp - %651);
        %7f = stack[%c4];
        %ef9 = "2";
        %3e1 = ($sp - %ef9);
        %263 = stack[%3e1];
        %55f = "0";
        %98d = (%263 + %55f);
        stack[%98d] = %7f;
        %44 = "0";
        %c5 = ($sp - %44);
        %e4 = stack[%c5];
        %89 = "2";
        %b3 = ($sp - %89);
        %7c9 = stack[%b3];
        %de1 = "1";
        %1cd = (%7c9 + %de1);
        stack[%1cd] = %e4;
        %be = "4";
        $sp = ($sp - %be);
        %9b0 = "1";
        %21 = ($sp + %9b0);
        %84 = stack[%21];
        jump %84;
    }
}

func func.Vector_vals_ref {
    proc #27 {
        %0f9 = "3";
        $sp = ($sp + %0f9);
        %264 = "0";
        %732 = ($sp - %264);
        %8d0 = stack[%732];
        %250 = "0";
        %305 = (%8d0 + %250);
        %8c0 = stack[%305];
        %9de = "1";
        %1c0 = ($sp - %9de);
        %0c9 = stack[%1c0];
        %9fa = "0";
        %5bf = (%0c9 + %9fa);
        stack[%5bf] = %8c0;
        %279 = "3";
        $sp = ($sp - %279);
        %439 = "1";
        %c7 = ($sp + %439);
        %38e = stack[%c7];
        jump %38e;
    }
}

func func.Vector_len {
    proc #ec {
        %d9 = "3";
        $sp = ($sp + %d9);
        %3a = "0";
        %85 = ($sp - %3a);
        %5e = stack[%85];
        %96 = "1";
        %63 = (%5e + %96);
        %63a = stack[%63];
        %fa = "1";
        %f3d = ($sp - %fa);
        %a2 = stack[%f3d];
        %df4 = "0";
        %ece = (%a2 + %df4);
        stack[%ece] = %63a;
        %b07 = "3";
        $sp = ($sp - %b07);
        %cc = "1";
        %251 = ($sp + %cc);
        %d86 = stack[%251];
        jump %d86;
    }
}

func func.Vector_to_string {
    proc #af {
        %bc = "8";
        $sp = ($sp + %bc);
        %b03 = "2";
        %e7 = ($sp - %b03);
        %a32 = "2";
        %ee = ($sp + %a32);
        stack[%ee] = %e7;
        %a2a = "5";
        %e48 = ($sp - %a2a);
        %cf6 = stack[%e48];
        %d3e = "3";
        %ed8 = ($sp + %d3e);
        stack[%ed8] = %cf6;
        %bfa = "1";
        %77e = ($sp + %bfa);
        %3f0 = #07;
        stack[%77e] = %3f0;
        %a5d = #27;
        jump %a5d;
    }

    proc #07 {
        %42 = "1";
        %f9 = ($sp - %42);
        %83a = "2";
        %f7 = ($sp + %83a);
        stack[%f7] = %f9;
        %0f3 = "5";
        %bf3 = ($sp - %0f3);
        %268 = stack[%bf3];
        %7bd = "3";
        %5d = ($sp + %7bd);
        stack[%5d] = %268;
        %b7 = "1";
        %3c = ($sp + %b7);
        %da4 = #d49;
        stack[%3c] = %da4;
        %c00 = #ec;
        jump %c00;
    }

    proc #d49 {
        %64c = "[";
        %9db = "4";
        %1d = ($sp - %9db);
        %086 = "0";
        %bb = (%1d + %086);
        stack[%bb] = %64c;
        %2e2 = "0";
        %f54 = "3";
        %54 = ($sp - %f54);
        %7ef = "0";
        %a90 = (%54 + %7ef);
        stack[%a90] = %2e2;
        %76 = #ec1;
        jump %76;
    }

    proc #26f {
        %5c0 = "4";
        %33 = ($sp - %5c0);
        %e0 = stack[%33];
        %599 = "]";
        %464 = (%e0 ~ %599);
        %544 = "4";
        %01 = ($sp - %544);
        %4f = "0";
        %f1d = (%01 + %4f);
        stack[%f1d] = %464;
        %fc = "4";
        %45b = ($sp - %fc);
        %392 = stack[%45b];
        %b97 = "6";
        %626 = ($sp - %b97);
        %8d5 = stack[%626];
        %2d = "0";
        %770 = (%8d5 + %2d);
        stack[%770] = %392;
        %18 = "8";
        $sp = ($sp - %18);
        %4f9 = "1";
        %5cb = ($sp + %4f9);
        %d507 = stack[%5cb];
        jump %d507;
    }

    proc #af6 {
        %558 = "2";
        %7f5 = ($sp - %558);
        %66 = stack[%7f5];
        %2d3 = "3";
        %2a = ($sp - %2d3);
        %fd5 = stack[%2a];
        %2f5 = (%66 + %fd5);
        %c8 = stack[%2f5];
        %91 = "0";
        %0c0 = ($sp - %91);
        %029 = "0";
        %f4 = (%0c0 + %029);
        stack[%f4] = %c8;
        %a71 = "4";
        %d1b = ($sp - %a71);
        %e5 = stack[%d1b];
        %ffa = "0";
        %05 = ($sp - %ffa);
        %24f = stack[%05];
        %91e = (%e5 ~ %24f);
        %b33 = "4";
        %a6 = ($sp - %b33);
        %2a5 = "0";
        %4b = (%a6 + %2a5);
        stack[%4b] = %91e;
        %4fb = "3";
        %08e = ($sp - %4fb);
        %47 = stack[%08e];
        %f32 = "1";
        %9d7 = (%47 + %f32);
        %e10 = "1";
        %084 = ($sp - %e10);
        %220 = stack[%084];
        %450 = (%9d7 < %220);
        %4aa = #78;
        %301 = #cb;
        if %450 then jump %4aa else jump %301;
    }

    proc #cb {
        %fa2 = "3";
        %be0 = ($sp - %fa2);
        %80 = stack[%be0];
        %896 = "1";
        %75c8 = (%80 + %896);
        %8b9 = "3";
        %19d = ($sp - %8b9);
        %d0 = "0";
        %fad = (%19d + %d0);
        stack[%fad] = %75c8;
        %877 = #ec1;
        jump %877;
    }

    proc #78 {
        %431 = "4";
        %dc = ($sp - %431);
        %50e = stack[%dc];
        %8f2 = ", ";
        %ce4 = (%50e ~ %8f2);
        %c39 = "4";
        %f7e = ($sp - %c39);
        %c83 = "0";
        %b02 = (%f7e + %c83);
        stack[%b02] = %ce4;
        %59c = #cb;
        jump %59c;
    }

    proc #ec1 {
        %190 = "3";
        %deb = ($sp - %190);
        %077 = stack[%deb];
        %3ec = "1";
        %a1 = ($sp - %3ec);
        %dff = stack[%a1];
        %781 = (%077 < %dff);
        %2ad = #af6;
        %767 = #26f;
        if %781 then jump %2ad else jump %767;
    }
}

func func.merge_sorted_vecs {
    proc #4ae5 {
        %7d = "10";
        $sp = ($sp + %7d);
        %03b = "3";
        %fc9 = ($sp - %03b);
        %259 = "2";
        %6e = ($sp + %259);
        stack[%6e] = %fc9;
        %13f = "8";
        %93 = ($sp - %13f);
        %e2f = stack[%93];
        %6514 = "3";
        %c71 = ($sp + %6514);
        stack[%c71] = %e2f;
        %290 = "1";
        %3d9 = ($sp + %290);
        %bf5 = #da7;
        stack[%3d9] = %bf5;
        %4c = #27;
        jump %4c;
    }

    proc #da7 {
        %870 = "2";
        %405 = ($sp - %870);
        %0c3 = "2";
        %b34 = ($sp + %0c3);
        stack[%b34] = %405;
        %787 = "6";
        %f3df = ($sp - %787);
        %114 = stack[%f3df];
        %f4a = "3";
        %cd1f = ($sp + %f4a);
        stack[%cd1f] = %114;
        %cf60 = "1";
        %00f = ($sp + %cf60);
        %497 = #87c;
        stack[%00f] = %497;
        %2b6 = #27;
        jump %2b6;
    }

    proc #87c {
        %e22 = "7";
        %5cb8 = ($sp - %e22);
        %368 = stack[%5cb8];
        %0e = "5";
        %851 = ($sp - %0e);
        %df0 = stack[%851];
        %eee = (%368 + %df0);
        %e56 = "1";
        %e6d = (%eee - %e56);
        %a26 = "4";
        %7f3 = ($sp - %a26);
        %678 = "0";
        %e9 = (%7f3 + %678);
        stack[%e9] = %e6d;
        %4d = #cec;
        jump %4d;
    }

    proc #243 {
        %c7e = "10";
        $sp = ($sp - %c7e);
        %863 = "1";
        %0a0 = ($sp + %863);
        %595 = stack[%0a0];
        jump %595;
    }

    proc #0a1 {
        %ee9 = "3";
        %c7ef = ($sp - %ee9);
        %c30 = stack[%c7ef];
        %e8a = "7";
        %f4b = ($sp - %e8a);
        %c9 = stack[%f4b];
        %81be = (%c30 + %c9);
        %4e = "1";
        %4de = (%81be - %4e);
        %0a5 = stack[%4de];
        %95 = "1";
        %31e = ($sp - %95);
        %49d0 = "0";
        %82 = (%31e + %49d0);
        stack[%82] = %0a5;
        %c53 = "2";
        %4fbd = ($sp - %c53);
        %cb7 = stack[%4fbd];
        %cb2 = "5";
        %ba4 = ($sp - %cb2);
        %12b = stack[%ba4];
        %9ad = (%cb7 + %12b);
        %f18 = "1";
        %a6e = (%9ad - %f18);
        %67c = stack[%a6e];
        %b4 = "0";
        %f8 = ($sp - %b4);
        %7d5 = "0";
        %ea = (%f8 + %7d5);
        stack[%ea] = %67c;
        %fd9 = "5";
        %081 = ($sp - %fd9);
        %05d = stack[%081];
        %c95 = "0";
        %aa = (!(%05d > %c95));
        %50d = "1";
        %74f = ($sp - %50d);
        %f47 = stack[%74f];
        %613 = "0";
        %f9f = ($sp - %613);
        %5ea = stack[%f9f];
        %dc7 = (!(%f47 < %5ea));
        %dc0 = (%aa || %dc7);
        %b10 = #4c8;
        %93e = #97;
        if %dc0 then jump %b10 else jump %93e;
    }

    proc #857 {
        %4c6 = "4";
        %a3b = ($sp - %4c6);
        %50a = stack[%a3b];
        %48 = "1";
        %d6d = (%50a - %48);
        %410 = "4";
        %0b = ($sp - %410);
        %794 = "0";
        %d37 = (%0b + %794);
        stack[%d37] = %d6d;
        %808 = #cec;
        jump %808;
    }

    proc #4c8 {
        %538 = "1";
        %2e7 = ($sp - %538);
        %09 = stack[%2e7];
        %7a8 = "3";
        %746 = ($sp - %7a8);
        %d06 = stack[%746];
        %11d = "4";
        %6a4 = ($sp - %11d);
        %72d = stack[%6a4];
        %e3 = (%d06 + %72d);
        %9e0 = "0";
        %900 = (%e3 + %9e0);
        stack[%900] = %09;
        %416 = "7";
        %a5c = ($sp - %416);
        %b4e = stack[%a5c];
        %e87 = "1";
        %1cc = (%b4e - %e87);
        %dfd5 = "7";
        %dd4 = ($sp - %dfd5);
        %00a = "0";
        %484 = (%dd4 + %00a);
        stack[%484] = %1cc;
        %8c3 = #857;
        jump %8c3;
    }

    proc #97 {
        %60d = "0";
        %5cbe = ($sp - %60d);
        %d10 = stack[%5cbe];
        %94 = "3";
        %0a59 = ($sp - %94);
        %f96 = stack[%0a59];
        %226 = "4";
        %88 = ($sp - %226);
        %fdf = stack[%88];
        %82e = (%f96 + %fdf);
        %b26 = "0";
        %a6e6 = (%82e + %b26);
        stack[%a6e6] = %d10;
        %d92 = "5";
        %111 = ($sp - %d92);
        %24c = stack[%111];
        %f68 = "1";
        %ff5 = (%24c - %f68);
        %fb = "5";
        %2639 = ($sp - %fb);
        %1db = "0";
        %fa7 = (%2639 + %1db);
        stack[%fa7] = %ff5;
        %d502 = #857;
        jump %d502;
    }

    proc #cec {
        %67cd = "4";
        %bd = ($sp - %67cd);
        %6fe = stack[%bd];
        %fbd = "0";
        %527 = (!(%6fe < %fbd));
        %b7b = #0a1;
        %f2 = #243;
        if %527 then jump %b7b else jump %f2;
    }
}

func func.out {
    proc #70b {
        %2adc = "2";
        $sp = ($sp + %2adc);
        %2c = "0";
        %fcf = ($sp - %2c);
        %afb = stack[%fcf];
        out %afb;
        %edf = "2";
        $sp = ($sp - %edf);
        %078 = "1";
        %365 = ($sp + %078);
        %4fb7 = stack[%365];
        jump %4fb7;
    }
}

func func.in {
    proc #954 {
        %03c = "3";
        $sp = ($sp + %03c);
        %89e = "0";
        %2a5b = ($sp - %89e);
        in;
        stack[%2a5b] = $answer;
        %748 = "0";
        %b15 = ($sp - %748);
        %05a = stack[%b15];
        %f7d = "1";
        %ecc = ($sp - %f7d);
        %a98 = stack[%ecc];
        %cb5 = "0";
        %883 = (%a98 + %cb5);
        stack[%883] = %05a;
        %e47 = "3";
        $sp = ($sp - %e47);
        %032 = "1";
        %49a = ($sp + %032);
        %e92 = stack[%49a];
        jump %e92;
    }
}