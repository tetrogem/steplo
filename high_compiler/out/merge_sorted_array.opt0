main {
    proc #12 {
        $sp = "-1";
        %1b = #89;
        jump %1b;
    }
}

func main {
    proc #89 {
        %15 = "25";
        $sp = ($sp + %15);
        %07 = "-3";
        %77 = "23";
        %cf = ($sp - %77);
        %16 = "0";
        %78 = (%cf + %16);
        stack[%78] = %07;
        %31 = "-2";
        %58 = "23";
        %f6 = ($sp - %58);
        %39 = "1";
        %b2 = (%f6 + %39);
        stack[%b2] = %31;
        %c8 = "0";
        %7d = "23";
        %08 = ($sp - %7d);
        %9d = "2";
        %93 = (%08 + %9d);
        stack[%93] = %c8;
        %a9 = "0";
        %a1 = "23";
        %c1 = ($sp - %a1);
        %88 = "3";
        %8b = (%c1 + %88);
        stack[%8b] = %a9;
        %99 = "0";
        %a2 = "23";
        %95 = ($sp - %a2);
        %e3 = "4";
        %b7 = (%95 + %e3);
        stack[%b7] = %99;
        %8d = "6";
        %3d = "23";
        %f2 = ($sp - %3d);
        %f4 = "5";
        %d4 = (%f2 + %f4);
        stack[%d4] = %8d;
        %68 = "7";
        %b74 = "23";
        %d6 = ($sp - %b74);
        %ef = "6";
        %9e = (%d6 + %ef);
        stack[%9e] = %68;
        %b0 = "0";
        %bc = "23";
        %58b = ($sp - %bc);
        %11 = "7";
        %28 = (%58b + %11);
        stack[%28] = %b0;
        %b4 = "0";
        %09 = "23";
        %5b = ($sp - %09);
        %28c = "8";
        %0f = (%5b + %28c);
        stack[%0f] = %b4;
        %73 = "0";
        %b2f = "23";
        %f9 = ($sp - %b2f);
        %5e = "9";
        %38 = (%f9 + %5e);
        stack[%38] = %73;
        %3b = "0";
        %eb = "23";
        %38b = ($sp - %eb);
        %dd = "10";
        %a6 = (%38b + %dd);
        stack[%a6] = %3b;
        %d44 = "0";
        %e0 = "23";
        %94 = ($sp - %e0);
        %68e = "11";
        %8bb = (%94 + %68e);
        stack[%8bb] = %d44;
        %7b = "0";
        %23 = "23";
        %48 = ($sp - %23);
        %995 = "12";
        %314 = (%48 + %995);
        stack[%314] = %7b;
        %b8 = "-1";
        %c5 = "8";
        %01 = ($sp - %c5);
        %e9 = "0";
        %b1 = (%01 + %e9);
        stack[%b1] = %b8;
        %f6d = "1";
        %8f = "8";
        %90 = ($sp - %8f);
        %ad = "1";
        %4f = (%90 + %ad);
        stack[%4f] = %f6d;
        %f1 = "1";
        %df = "8";
        %21 = ($sp - %df);
        %154 = "2";
        %64 = (%21 + %154);
        stack[%64] = %f1;
        %f8 = "1";
        %55 = "8";
        %25 = ($sp - %55);
        %125 = "3";
        %2c = (%25 + %125);
        stack[%2c] = %f8;
        %63 = "2";
        %67 = "8";
        %d8 = ($sp - %67);
        %7b7 = "4";
        %0a = (%d8 + %7b7);
        stack[%0a] = %63;
        %d40 = "3";
        %a3 = "8";
        %fa = ($sp - %a3);
        %37 = "5";
        %d3 = (%fa + %37);
        stack[%d3] = %d40;
        %07a = "10";
        %e3c = ($sp - %07a);
        %f81 = "2";
        %c3 = ($sp + %f81);
        stack[%c3] = %e3c;
        %cb = "23";
        %898 = ($sp - %cb);
        %72 = "3";
        %7f = ($sp + %72);
        stack[%7f] = %898;
        %4f2 = "13";
        %9de = "4";
        %f4f = ($sp + %9de);
        stack[%f4f] = %4f2;
        %43 = "1";
        %2ca = ($sp + %43);
        %92 = #70;
        stack[%2ca] = %92;
        %f0 = #ec;
        jump %f0;
    }

    proc #70 {
        %2d = "2";
        %22 = ($sp - %2d);
        %c6 = "2";
        %91 = ($sp + %c6);
        stack[%91] = %22;
        %35 = "8";
        %70b = ($sp - %35);
        %db = "3";
        %e0e = ($sp + %db);
        stack[%e0e] = %70b;
        %238 = "6";
        %41 = "4";
        %2b = ($sp + %41);
        stack[%2b] = %238;
        %26 = "1";
        %1b1 = ($sp + %26);
        %ec8 = #34;
        stack[%1b1] = %ec8;
        %5d = #ec;
        jump %5d;
    }

    proc #34 {
        %b27 = "0";
        %ba = ($sp - %b27);
        %393 = "2";
        %ab = ($sp + %393);
        stack[%ab] = %ba;
        %4a = "10";
        %05 = ($sp - %4a);
        %5c = "3";
        %df3 = ($sp + %5c);
        stack[%df3] = %05;
        %c1e = "1";
        %554 = ($sp + %c1e);
        %fd = #c37;
        stack[%554] = %fd;
        %f05 = #a0;
        jump %f05;
    }

    proc #c37 {
        %d7 = "0";
        %920 = ($sp - %d7);
        %31f = stack[%920];
        %b27c = "2";
        %ca = ($sp + %b27c);
        stack[%ca] = %31f;
        %df2 = "1";
        %1a = ($sp + %df2);
        %486 = #c9;
        stack[%1a] = %486;
        %f18 = #ae;
        jump %f18;
    }

    proc #c9 {
        %98 = "0";
        %936 = ($sp - %98);
        %53 = "2";
        %345 = ($sp + %53);
        stack[%345] = %936;
        %33 = "2";
        %c9e = ($sp - %33);
        %956 = "3";
        %d7e = ($sp + %956);
        stack[%d7e] = %c9e;
        %29 = "1";
        %983 = ($sp + %29);
        %61 = #1d;
        stack[%983] = %61;
        %f5 = #a0;
        jump %f5;
    }

    proc #1d {
        %611 = "0";
        %ca5 = ($sp - %611);
        %fc = stack[%ca5];
        %9b = "2";
        %d0 = ($sp + %9b);
        stack[%d0] = %fc;
        %b5 = "1";
        %6b = ($sp + %b5);
        %3c = #85;
        stack[%6b] = %3c;
        %0e = #ae;
        jump %0e;
    }

    proc #85 {
        %921 = "10";
        %39a = ($sp - %921);
        %f46 = "2";
        %c2 = ($sp + %f46);
        stack[%c2] = %39a;
        %2c1 = "7";
        %f84 = "3";
        %a1c = ($sp + %f84);
        stack[%a1c] = %2c1;
        %2bb = "2";
        %b2c = ($sp - %2bb);
        %8e = "4";
        %b5d = ($sp + %8e);
        stack[%b5d] = %b2c;
        %bd = "6";
        %a24 = "5";
        %c6f = ($sp + %a24);
        stack[%c6f] = %bd;
        %fb = "1";
        %992 = ($sp + %fb);
        %59 = #ac;
        stack[%992] = %59;
        %62 = #c6f9;
        jump %62;
    }

    proc #ac {
        %0ad = "0";
        %20 = ($sp - %0ad);
        %c9a = "2";
        %c3f = ($sp + %c9a);
        stack[%c3f] = %20;
        %b4e = "10";
        %200 = ($sp - %b4e);
        %5e6 = "3";
        %072 = ($sp + %5e6);
        stack[%072] = %200;
        %efd = "1";
        %7c = ($sp + %efd);
        %d6e = #27;
        stack[%7c] = %d6e;
        %db4 = #a0;
        jump %db4;
    }

    proc #27 {
        %483 = "Merged: ";
        %784 = "0";
        %331 = ($sp - %784);
        %0c = stack[%331];
        %29f = (%483 ~ %0c);
        %fd0 = "2";
        %d3c = ($sp + %fd0);
        stack[%d3c] = %29f;
        %c3b = "1";
        %8982 = ($sp + %c3b);
        %259 = #86;
        stack[%8982] = %259;
        %b3 = #ae;
        jump %b3;
    }

    proc #86 {
        exit;
    }
}

func func.Vector_new {
    proc #ec {
        %372 = "4";
        $sp = ($sp + %372);
        %20e = "1";
        %f3 = ($sp - %20e);
        %55c = stack[%f3];
        %4b = "2";
        %bb = ($sp - %4b);
        %d8f = stack[%bb];
        %b5c = "0";
        %5bd = (%d8f + %b5c);
        stack[%5bd] = %55c;
        %10 = "0";
        %ee = ($sp - %10);
        %c7 = stack[%ee];
        %59d = "2";
        %5f = ($sp - %59d);
        %51 = stack[%5f];
        %e92 = "1";
        %ea = (%51 + %e92);
        stack[%ea] = %c7;
        %5db = "4";
        $sp = ($sp - %5db);
        %8f6 = "1";
        %7e = ($sp + %8f6);
        %bcc = stack[%7e];
        jump %bcc;
    }
}

func func.Vector_vals_r {
    proc #3e {
        %83 = "3";
        $sp = ($sp + %83);
        %a7 = "0";
        %34c = "0";
        %b9 = ($sp - %34c);
        %66 = stack[%b9];
        %40 = (%66 + %a7);
        %76 = stack[%40];
        %50 = "1";
        %e5 = ($sp - %50);
        %81 = stack[%e5];
        %cab = "0";
        %157 = (%81 + %cab);
        stack[%157] = %76;
        %91f = "3";
        $sp = ($sp - %91f);
        %ac3 = "1";
        %d5 = ($sp + %ac3);
        %832 = stack[%d5];
        jump %832;
    }
}

func func.Vector_len {
    proc #0cb {
        %341 = "3";
        $sp = ($sp + %341);
        %739 = "1";
        %1d7 = "0";
        %96 = ($sp - %1d7);
        %bcb = stack[%96];
        %c73 = (%bcb + %739);
        %f4b = stack[%c73];
        %be = "1";
        %13 = ($sp - %be);
        %90e = stack[%13];
        %e04 = "0";
        %b26 = (%90e + %e04);
        stack[%b26] = %f4b;
        %18 = "3";
        $sp = ($sp - %18);
        %e8 = "1";
        %e8c = ($sp + %e8);
        %52 = stack[%e8c];
        jump %52;
    }
}

func func.Vector_to_string {
    proc #a0 {
        %ec4 = "8";
        $sp = ($sp + %ec4);
        %092 = "2";
        %130 = ($sp - %092);
        %b02 = "2";
        %524 = ($sp + %b02);
        stack[%524] = %130;
        %7ba = "5";
        %949 = ($sp - %7ba);
        %35c = stack[%949];
        %fa7 = "3";
        %0f5 = ($sp + %fa7);
        stack[%0f5] = %35c;
        %4fd = "1";
        %b77 = ($sp + %4fd);
        %e93 = #5c7;
        stack[%b77] = %e93;
        %69 = #3e;
        jump %69;
    }

    proc #5c7 {
        %af = "1";
        %299 = ($sp - %af);
        %9e8 = "2";
        %36 = ($sp + %9e8);
        stack[%36] = %299;
        %3a = "5";
        %f89 = ($sp - %3a);
        %1b1d = stack[%f89];
        %964 = "3";
        %283 = ($sp + %964);
        stack[%283] = %1b1d;
        %6e = "1";
        %88c = ($sp + %6e);
        %662 = #fad;
        stack[%88c] = %662;
        %bc1 = #0cb;
        jump %bc1;
    }

    proc #fad {
        %018 = "[";
        %e5d = "4";
        %fdf = ($sp - %e5d);
        %56 = "0";
        %b10 = (%fdf + %56);
        stack[%b10] = %018;
        %a25 = "0";
        %d78 = "3";
        %a4 = ($sp - %d78);
        %23b = "0";
        %98e = (%a4 + %23b);
        stack[%98e] = %a25;
        %8f9 = #534;
        jump %8f9;
    }

    proc #1f {
        %d88 = "4";
        %b1a = ($sp - %d88);
        %ea2 = stack[%b1a];
        %85e = "]";
        %865 = (%ea2 ~ %85e);
        %dbd = "4";
        %70f = ($sp - %dbd);
        %bbd = "0";
        %dc = (%70f + %bbd);
        stack[%dc] = %865;
        %482 = "4";
        %a17 = ($sp - %482);
        %d71 = stack[%a17];
        %d71a = "6";
        %2b5 = ($sp - %d71a);
        %892 = stack[%2b5];
        %99c = "0";
        %78a = (%892 + %99c);
        stack[%78a] = %d71;
        %06 = "8";
        $sp = ($sp - %06);
        %f32 = "1";
        %996 = ($sp + %f32);
        %c18 = stack[%996];
        jump %c18;
    }

    proc #553 {
        %e4 = "3";
        %4b2 = ($sp - %e4);
        %66b = stack[%4b2];
        %0e8 = "2";
        %151 = ($sp - %0e8);
        %0ab = stack[%151];
        %4b6 = (%0ab + %66b);
        %cc = stack[%4b6];
        %3d3 = "0";
        %1c = ($sp - %3d3);
        %a8 = "0";
        %7c6 = (%1c + %a8);
        stack[%7c6] = %cc;
        %b7d = "4";
        %dc3 = ($sp - %b7d);
        %61a = stack[%dc3];
        %864 = "0";
        %c7b = ($sp - %864);
        %f7 = stack[%c7b];
        %a21 = (%61a ~ %f7);
        %a4d = "4";
        %79 = ($sp - %a4d);
        %c7d = "0";
        %f33 = (%79 + %c7d);
        stack[%f33] = %a21;
        %413 = "3";
        %3f = ($sp - %413);
        %e1 = stack[%3f];
        %228 = "1";
        %9c = (%e1 + %228);
        %760 = "1";
        %2f = ($sp - %760);
        %51f = stack[%2f];
        %765 = (%9c < %51f);
        %5f8 = #5b3;
        %3dc = #f82;
        if %765 then jump %5f8 else jump %3dc;
    }

    proc #f82 {
        %fbc = "3";
        %8be = ($sp - %fbc);
        %2e = stack[%8be];
        %b88 = "1";
        %aa = (%2e + %b88);
        %9964 = "3";
        %4fb = ($sp - %9964);
        %a99 = "0";
        %f47 = (%4fb + %a99);
        stack[%f47] = %aa;
        %931 = #534;
        jump %931;
    }

    proc #5b3 {
        %75 = "4";
        %5b3e = ($sp - %75);
        %8a = stack[%5b3e];
        %1a3 = ", ";
        %3f7 = (%8a ~ %1a3);
        %d79 = "4";
        %46 = ($sp - %d79);
        %71 = "0";
        %2de = (%46 + %71);
        stack[%2de] = %3f7;
        %7e3 = #f82;
        jump %7e3;
    }

    proc #534 {
        %58e = "3";
        %649 = ($sp - %58e);
        %ed = stack[%649];
        %435 = "1";
        %f61 = ($sp - %435);
        %66c = stack[%f61];
        %30 = (%ed < %66c);
        %302 = #553;
        %87 = #1f;
        if %30 then jump %302 else jump %87;
    }
}

func func.merge_sorted_vecs {
    proc #c6f9 {
        %3b5 = "10";
        $sp = ($sp + %3b5);
        %4b28 = "3";
        %93e = ($sp - %4b28);
        %ea7 = "2";
        %98e6 = ($sp + %ea7);
        stack[%98e6] = %93e;
        %b24 = "8";
        %1a2 = ($sp - %b24);
        %69d = stack[%1a2];
        %ea1 = "3";
        %19 = ($sp + %ea1);
        stack[%19] = %69d;
        %ec7 = "1";
        %2b4 = ($sp + %ec7);
        %b94 = #b4a;
        stack[%2b4] = %b94;
        %17 = #3e;
        jump %17;
    }

    proc #b4a {
        %c9d = "2";
        %876 = ($sp - %c9d);
        %8a0 = "2";
        %3a3 = ($sp + %8a0);
        stack[%3a3] = %876;
        %e3f = "6";
        %a88 = ($sp - %e3f);
        %670 = stack[%a88];
        %efdf = "3";
        %b86 = ($sp + %efdf);
        stack[%b86] = %670;
        %8a4 = "1";
        %6b7 = ($sp + %8a4);
        %38e = #18f;
        stack[%6b7] = %38e;
        %940 = #3e;
        jump %940;
    }

    proc #18f {
        %c4 = "7";
        %65 = ($sp - %c4);
        %af6 = stack[%65];
        %014 = "5";
        %c89 = ($sp - %014);
        %42 = stack[%c89];
        %24 = (%af6 + %42);
        %3cd = "1";
        %5a = (%24 - %3cd);
        %48f = "4";
        %ee7 = ($sp - %48f);
        %da = "0";
        %585 = (%ee7 + %da);
        stack[%585] = %5a;
        %300 = #50d;
        jump %300;
    }

    proc #66a {
        %729 = "10";
        $sp = ($sp - %729);
        %7bd = "1";
        %1b2 = ($sp + %7bd);
        %c3c = stack[%1b2];
        jump %c3c;
    }

    proc #f45 {
        %f74 = "7";
        %86b = ($sp - %f74);
        %a3e = stack[%86b];
        %e13 = "1";
        %54 = (%a3e - %e13);
        %66a6 = "3";
        %f1a = ($sp - %66a6);
        %bba = stack[%f1a];
        %dbb = (%bba + %54);
        %45 = stack[%dbb];
        %9a = "1";
        %c31 = ($sp - %9a);
        %683 = "0";
        %077 = (%c31 + %683);
        stack[%077] = %45;
        %aaa = "5";
        %f0e = ($sp - %aaa);
        %2e8 = stack[%f0e];
        %a87 = "1";
        %a2c = (%2e8 - %a87);
        %862 = "2";
        %e31 = ($sp - %862);
        %6c = stack[%e31];
        %8d8 = (%6c + %a2c);
        %a80 = stack[%8d8];
        %edd = "0";
        %af3 = ($sp - %edd);
        %71b = "0";
        %835 = (%af3 + %71b);
        stack[%835] = %a80;
        %18a = "5";
        %28a = ($sp - %18a);
        %295 = stack[%28a];
        %97 = "0";
        %189 = (!(%295 > %97));
        %fc5 = "1";
        %730 = ($sp - %fc5);
        %543 = stack[%730];
        %1cd = "0";
        %fda = ($sp - %1cd);
        %098 = stack[%fda];
        %4bf = (!(%543 < %098));
        %f56 = (%189 || %4bf);
        %cb4 = #2b8;
        %d9 = #cb9;
        if %f56 then jump %cb4 else jump %d9;
    }

    proc #49 {
        %eac = "4";
        %ebb = ($sp - %eac);
        %ce = stack[%ebb];
        %79f = "1";
        %134 = (%ce - %79f);
        %71e = "4";
        %1a4 = ($sp - %71e);
        %10e = "0";
        %a6e = (%1a4 + %10e);
        stack[%a6e] = %134;
        %588 = #50d;
        jump %588;
    }

    proc #2b8 {
        %87b = "1";
        %236 = ($sp - %87b);
        %633 = stack[%236];
        %cb8 = "4";
        %14 = ($sp - %cb8);
        %73b = stack[%14];
        %c38 = "3";
        %0c9 = ($sp - %c38);
        %d55 = stack[%0c9];
        %2a = (%d55 + %73b);
        %505 = "0";
        %566 = (%2a + %505);
        stack[%566] = %633;
        %8d4 = "7";
        %2ac = ($sp - %8d4);
        %bc9 = stack[%2ac];
        %55d = "1";
        %876a = (%bc9 - %55d);
        %eee = "7";
        %ab8 = ($sp - %eee);
        %e10 = "0";
        %e6 = (%ab8 + %e10);
        stack[%e6] = %876a;
        %35b = #49;
        jump %35b;
    }

    proc #cb9 {
        %9b9 = "0";
        %28e = ($sp - %9b9);
        %6c4 = stack[%28e];
        %929 = "4";
        %972 = ($sp - %929);
        %3f8 = stack[%972];
        %457 = "3";
        %767 = ($sp - %457);
        %92c = stack[%767];
        %80 = (%92c + %3f8);
        %e2 = "0";
        %f1f = (%80 + %e2);
        stack[%f1f] = %6c4;
        %73f = "5";
        %d09 = ($sp - %73f);
        %11a = stack[%d09];
        %e5d2 = "1";
        %cce = (%11a - %e5d2);
        %04 = "5";
        %1e = ($sp - %04);
        %01e = "0";
        %7e4 = (%1e + %01e);
        stack[%7e4] = %cce;
        %149 = #49;
        jump %149;
    }

    proc #50d {
        %ea6 = "4";
        %7b3 = ($sp - %ea6);
        %bdc = stack[%7b3];
        %726 = "0";
        %2f7 = (!(%bdc < %726));
        %651 = #f45;
        %74 = #66a;
        if %2f7 then jump %651 else jump %74;
    }
}

func func.out {
    proc #ae {
        %f9f = "2";
        $sp = ($sp + %f9f);
        %fb7 = "0";
        %d1 = ($sp - %fb7);
        %f80 = stack[%d1];
        out %f80;
        %453 = "2";
        $sp = ($sp - %453);
        %490 = "1";
        %08d = ($sp + %490);
        %535 = stack[%08d];
        jump %535;
    }
}

func func.in {
    proc #fd9 {
        %bbf = "3";
        $sp = ($sp + %bbf);
        %d68 = "0";
        %108 = ($sp - %d68);
        in;
        stack[%108] = $answer;
        %b46 = "0";
        %e1a = ($sp - %b46);
        %2f75 = stack[%e1a];
        %422 = "1";
        %c2f = ($sp - %422);
        %5057 = stack[%c2f];
        %1fa = "0";
        %02 = (%5057 + %1fa);
        stack[%02] = %2f75;
        %0b = "3";
        $sp = ($sp - %0b);
        %62f = "1";
        %ca53 = ($sp + %62f);
        %b8c = stack[%ca53];
        jump %b8c;
    }
}