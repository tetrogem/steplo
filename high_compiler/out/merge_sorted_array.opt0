main {
    proc #40 {
        $sp = "-1";
        %86 = #2c;
        jump %86;
    }
}

func main {
    proc #2c {
        %da = "25";
        $sp = ($sp + %da);
        %8a = "-3";
        %76 = "23";
        %7c = ($sp - %76);
        %cf = "0";
        %12 = (%7c + %cf);
        stack[%12] = %8a;
        %b6 = "-2";
        %5e = "23";
        %f5 = ($sp - %5e);
        %5ef = "1";
        %f4 = (%f5 + %5ef);
        stack[%f4] = %b6;
        %99 = "0";
        %c2 = "23";
        %1c = ($sp - %c2);
        %5f = "2";
        %40c = (%1c + %5f);
        stack[%40c] = %99;
        %54 = "0";
        %ef = "23";
        %c9 = ($sp - %ef);
        %83 = "3";
        %08 = (%c9 + %83);
        stack[%08] = %54;
        %99d = "0";
        %ed = "23";
        %94 = ($sp - %ed);
        %c8 = "4";
        %92 = (%94 + %c8);
        stack[%92] = %99d;
        %45 = "6";
        %b7 = "23";
        %5d = ($sp - %b7);
        %16 = "5";
        %be = (%5d + %16);
        stack[%be] = %45;
        %48 = "7";
        %cb = "23";
        %89 = ($sp - %cb);
        %5f1 = "6";
        %15 = (%89 + %5f1);
        stack[%15] = %48;
        %7d = "0";
        %eb = "23";
        %92e = ($sp - %eb);
        %42 = "7";
        %e1 = (%92e + %42);
        stack[%e1] = %7d;
        %9e = "0";
        %db = "23";
        %c0 = ($sp - %db);
        %f9 = "8";
        %8f = (%c0 + %f9);
        stack[%8f] = %9e;
        %b1 = "0";
        %d9 = "23";
        %39 = ($sp - %d9);
        %9d = "9";
        %79 = (%39 + %9d);
        stack[%79] = %b1;
        %31 = "0";
        %8b = "23";
        %72 = ($sp - %8b);
        %98 = "10";
        %59 = (%72 + %98);
        stack[%59] = %31;
        %c7 = "0";
        %2f = "23";
        %14 = ($sp - %2f);
        %0e = "11";
        %3d = (%14 + %0e);
        stack[%3d] = %c7;
        %2a = "0";
        %5db = "23";
        %70 = ($sp - %5db);
        %b14 = "12";
        %56 = (%70 + %b14);
        stack[%56] = %2a;
        %b0 = "-1";
        %20 = "8";
        %37 = ($sp - %20);
        %4e = "0";
        %316 = (%37 + %4e);
        stack[%316] = %b0;
        %04 = "1";
        %17 = "8";
        %ff = ($sp - %17);
        %33 = "1";
        %4d = (%ff + %33);
        stack[%4d] = %04;
        %4b = "1";
        %09 = "8";
        %df = ($sp - %09);
        %92b = "2";
        %b9 = (%df + %92b);
        stack[%b9] = %4b;
        %2e = "1";
        %c95 = "8";
        %1a = ($sp - %c95);
        %65 = "3";
        %86a = (%1a + %65);
        stack[%86a] = %2e;
        %30 = "2";
        %ae = "8";
        %69 = ($sp - %ae);
        %95 = "4";
        %ba = (%69 + %95);
        stack[%ba] = %30;
        %657 = "3";
        %81 = "8";
        %b8 = ($sp - %81);
        %9a = "5";
        %1d = (%b8 + %9a);
        stack[%1d] = %657;
        %f3 = "10";
        %10 = ($sp - %f3);
        %1da = "2";
        %a9 = ($sp + %1da);
        stack[%a9] = %10;
        %37e = "23";
        %cbf = ($sp - %37e);
        %49 = "3";
        %df4 = ($sp + %49);
        stack[%df4] = %cbf;
        %2b = "13";
        %125 = "4";
        %8c = ($sp + %125);
        stack[%8c] = %2b;
        %65c = "1";
        %e6 = ($sp + %65c);
        %6c = #e3;
        stack[%e6] = %6c;
        %be2 = #de;
        jump %be2;
    }

    proc #e3 {
        %44 = "2";
        %28 = ($sp - %44);
        %1f = "2";
        %5df = ($sp + %1f);
        stack[%5df] = %28;
        %ca = "8";
        %948 = ($sp - %ca);
        %30a = "3";
        %87 = ($sp + %30a);
        stack[%87] = %948;
        %9b = "6";
        %13 = "4";
        %8c1 = ($sp + %13);
        stack[%8c1] = %9b;
        %af = "1";
        %68 = ($sp + %af);
        %8d = #a9c;
        stack[%68] = %8d;
        %a2 = #de;
        jump %a2;
    }

    proc #a9c {
        %cbe = "0";
        %701 = ($sp - %cbe);
        %07 = "2";
        %ab = ($sp + %07);
        stack[%ab] = %701;
        %3c = "10";
        %c82 = ($sp - %3c);
        %e63 = "3";
        %c24 = ($sp + %e63);
        stack[%c24] = %c82;
        %26 = "1";
        %43 = ($sp + %26);
        %c5 = #e9;
        stack[%43] = %c5;
        %8fa = #15a;
        jump %8fa;
    }

    proc #e9 {
        %ec = "0";
        %3c9 = ($sp - %ec);
        %82 = stack[%3c9];
        %dd = "2";
        %82a = ($sp + %dd);
        stack[%82a] = %82;
        %3c3 = "1";
        %2d = ($sp + %3c3);
        %97 = #154;
        stack[%2d] = %97;
        %696 = #ff7;
        jump %696;
    }

    proc #154 {
        %50 = "0";
        %71 = ($sp - %50);
        %135 = "2";
        %d4 = ($sp + %135);
        stack[%d4] = %71;
        %ac = "2";
        %b8d = ($sp - %ac);
        %124 = "3";
        %561 = ($sp + %124);
        stack[%561] = %b8d;
        %ee = "1";
        %317 = ($sp + %ee);
        %b5 = #ff5;
        stack[%317] = %b5;
        %a1 = #15a;
        jump %a1;
    }

    proc #ff5 {
        %d8 = "0";
        %0a = ($sp - %d8);
        %ddf = stack[%0a];
        %873 = "2";
        %11 = ($sp + %873);
        stack[%11] = %ddf;
        %01 = "1";
        %10b = ($sp + %01);
        %c4 = #8c0;
        stack[%10b] = %c4;
        %aed = #ff7;
        jump %aed;
    }

    proc #8c0 {
        %27 = "10";
        %4d9 = ($sp - %27);
        %4f = "2";
        %ad = ($sp + %4f);
        stack[%ad] = %4d9;
        %1b = "7";
        %04a = "3";
        %ad8 = ($sp + %04a);
        stack[%ad8] = %1b;
        %a3 = "2";
        %82c = ($sp - %a3);
        %b50 = "4";
        %db1 = ($sp + %b50);
        stack[%db1] = %82c;
        %d97 = "6";
        %988 = "5";
        %f3b = ($sp + %988);
        stack[%f3b] = %d97;
        %2b6 = "1";
        %0c = ($sp + %2b6);
        %1a4 = #51;
        stack[%0c] = %1a4;
        %0f = #03;
        jump %0f;
    }

    proc #51 {
        %a3a = "0";
        %c99 = ($sp - %a3a);
        %c8b = "2";
        %c0f = ($sp + %c8b);
        stack[%c0f] = %c99;
        %5df1 = "10";
        %e93 = ($sp - %5df1);
        %20d = "3";
        %06 = ($sp + %20d);
        stack[%06] = %e93;
        %c52 = "1";
        %6d = ($sp + %c52);
        %bc = #9f;
        stack[%6d] = %bc;
        %bef = #15a;
        jump %bef;
    }

    proc #9f {
        %d93 = "Merged: ";
        %50f = "0";
        %5ea = ($sp - %50f);
        %52 = stack[%5ea];
        %98a = (%d93 ~ %52);
        %979 = "2";
        %1b2 = ($sp + %979);
        stack[%1b2] = %98a;
        %104 = "1";
        %47 = ($sp + %104);
        %24 = #9c;
        stack[%47] = %24;
        %4c = #ff7;
        jump %4c;
    }

    proc #9c {
        exit;
    }
}

func func.Vector_new {
    proc #de {
        %100 = "4";
        $sp = ($sp + %100);
        %b9f = "1";
        %ddd = ($sp - %b9f);
        %fe = stack[%ddd];
        %c6 = "2";
        %1d9 = ($sp - %c6);
        %430 = stack[%1d9];
        %74 = "0";
        %2e3 = (%430 + %74);
        stack[%2e3] = %fe;
        %683 = "0";
        %765 = ($sp - %683);
        %b9d = stack[%765];
        %58 = "2";
        %3f = ($sp - %58);
        %313 = stack[%3f];
        %4e3 = "1";
        %a0 = (%313 + %4e3);
        stack[%a0] = %b9d;
        %88 = "4";
        $sp = ($sp - %88);
        %992 = "1";
        %77 = ($sp + %992);
        %8c5 = stack[%77];
        jump %8c5;
    }
}

func func.Vector_vals_ref {
    proc #a32 {
        %84 = "3";
        $sp = ($sp + %84);
        %f7 = "0";
        %28a = ($sp - %f7);
        %f50 = stack[%28a];
        %9af = "0";
        %2f3 = (%f50 + %9af);
        %46 = stack[%2f3];
        %520 = "1";
        %018 = ($sp - %520);
        %61 = stack[%018];
        %64 = "0";
        %e7 = (%61 + %64);
        stack[%e7] = %46;
        %f38 = "3";
        $sp = ($sp - %f38);
        %80 = "1";
        %9a2 = ($sp + %80);
        %471 = stack[%9a2];
        jump %471;
    }
}

func func.Vector_len {
    proc #5f4 {
        %1c7 = "3";
        $sp = ($sp + %1c7);
        %c7d = "0";
        %4a = ($sp - %c7d);
        %16d = stack[%4a];
        %e8 = "1";
        %d0 = (%16d + %e8);
        %bf = stack[%d0];
        %05 = "1";
        %95c = ($sp - %05);
        %29 = stack[%95c];
        %11b = "0";
        %3a = (%29 + %11b);
        stack[%3a] = %bf;
        %18 = "3";
        $sp = ($sp - %18);
        %746 = "1";
        %875 = ($sp + %746);
        %75 = stack[%875];
        jump %75;
    }
}

func func.Vector_to_string {
    proc #15a {
        %099 = "8";
        $sp = ($sp + %099);
        %868 = "2";
        %ea = ($sp - %868);
        %49b = "2";
        %541 = ($sp + %49b);
        stack[%541] = %ea;
        %809 = "5";
        %a7 = ($sp - %809);
        %6d4 = stack[%a7];
        %b18 = "3";
        %6b = ($sp + %b18);
        stack[%6b] = %6d4;
        %9ca = "1";
        %469 = ($sp + %9ca);
        %294 = #62;
        stack[%469] = %294;
        %c26 = #a32;
        jump %c26;
    }

    proc #62 {
        %9f6 = "1";
        %ba3 = ($sp - %9f6);
        %75b = "2";
        %99b = ($sp + %75b);
        stack[%99b] = %ba3;
        %946 = "5";
        %d7 = ($sp - %946);
        %c1 = stack[%d7];
        %19 = "3";
        %dc = ($sp + %19);
        stack[%dc] = %c1;
        %163 = "1";
        %409 = ($sp + %163);
        %57 = #74b;
        stack[%409] = %57;
        %caa = #5f4;
        jump %caa;
    }

    proc #74b {
        %29d = "[";
        %96 = "4";
        %31a = ($sp - %96);
        %899 = "0";
        %179 = (%31a + %899);
        stack[%179] = %29d;
        %6ca = "0";
        %442 = "3";
        %ae2 = ($sp - %442);
        %fe1 = "0";
        %c6b = (%ae2 + %fe1);
        stack[%c6b] = %6ca;
        %828 = #249;
        jump %828;
    }

    proc #8ca {
        %6c0 = "4";
        %00 = ($sp - %6c0);
        %c5f = stack[%00];
        %693 = "]";
        %cb6 = (%c5f ~ %693);
        %f40 = "4";
        %94e = ($sp - %f40);
        %2b9 = "0";
        %f6 = (%94e + %2b9);
        stack[%f6] = %cb6;
        %f8 = "4";
        %833 = ($sp - %f8);
        %c06 = stack[%833];
        %766 = "6";
        %0d = ($sp - %766);
        %bb = stack[%0d];
        %429 = "0";
        %d40 = (%bb + %429);
        stack[%d40] = %c06;
        %425 = "8";
        $sp = ($sp - %425);
        %0ad = "1";
        %1b9 = ($sp + %0ad);
        %d85 = stack[%1b9];
        jump %d85;
    }

    proc #d75 {
        %d6 = "2";
        %c07 = ($sp - %d6);
        %0e1 = stack[%c07];
        %be0 = "3";
        %3e = ($sp - %be0);
        %435 = stack[%3e];
        %53 = (%0e1 + %435);
        %240 = stack[%53];
        %f3f = "0";
        %67 = ($sp - %f3f);
        %300 = "0";
        %c74 = (%67 + %300);
        stack[%c74] = %240;
        %3f8 = "4";
        %c3 = ($sp - %3f8);
        %ae6 = stack[%c3];
        %ef3 = "0";
        %c8d = ($sp - %ef3);
        %87a = stack[%c8d];
        %e96 = (%ae6 ~ %87a);
        %c5e = "4";
        %d7e = ($sp - %c5e);
        %fc = "0";
        %eec = (%d7e + %fc);
        stack[%eec] = %e96;
        %684 = "3";
        %573 = ($sp - %684);
        %f2 = stack[%573];
        %35 = "1";
        %408 = (%f2 + %35);
        %016 = "1";
        %77c = ($sp - %016);
        %c94 = stack[%77c];
        %283 = (%408 < %c94);
        %85 = #1a5;
        %560 = #91;
        if %283 then jump %85 else jump %560;
    }

    proc #91 {
        %6cc = "3";
        %af3 = ($sp - %6cc);
        %c20 = stack[%af3];
        %5b = "1";
        %174 = (%c20 + %5b);
        %892 = "3";
        %e1b = ($sp - %892);
        %86a0 = "0";
        %be8 = (%e1b + %86a0);
        stack[%be8] = %174;
        %806 = #249;
        jump %806;
    }

    proc #1a5 {
        %435c = "4";
        %5d4 = ($sp - %435c);
        %dcf = stack[%5d4];
        %a21 = ", ";
        %2e3e = (%dcf ~ %a21);
        %812 = "4";
        %c64 = ($sp - %812);
        %7e = "0";
        %a8 = (%c64 + %7e);
        stack[%a8] = %2e3e;
        %f77 = #91;
        jump %f77;
    }

    proc #249 {
        %152 = "3";
        %961 = ($sp - %152);
        %e2 = stack[%961];
        %5e0 = "1";
        %fb = ($sp - %5e0);
        %980 = stack[%fb];
        %400 = (%e2 < %980);
        %edf = #d75;
        %b6e = #8ca;
        if %400 then jump %edf else jump %b6e;
    }
}

func func.merge_sorted_vecs {
    proc #03 {
        %2a5 = "10";
        $sp = ($sp + %2a5);
        %f66 = "3";
        %ef0 = ($sp - %f66);
        %36 = "2";
        %1a8 = ($sp + %36);
        stack[%1a8] = %ef0;
        %0b = "8";
        %884 = ($sp - %0b);
        %47e = stack[%884];
        %ba37 = "3";
        %699 = ($sp + %ba37);
        stack[%699] = %47e;
        %8e = "1";
        %f9c = ($sp + %8e);
        %065 = #bd;
        stack[%f9c] = %065;
        %e21 = #a32;
        jump %e21;
    }

    proc #bd {
        %e22 = "2";
        %68b = ($sp - %e22);
        %a85 = "2";
        %193 = ($sp + %a85);
        stack[%193] = %68b;
        %6a = "6";
        %bba = ($sp - %6a);
        %ea2 = stack[%bba];
        %f7a = "3";
        %f33 = ($sp + %f7a);
        stack[%f33] = %ea2;
        %18e = "1";
        %6c5 = ($sp + %18e);
        %a07 = #cad;
        stack[%6c5] = %a07;
        %a03 = #a32;
        jump %a03;
    }

    proc #cad {
        %dd7 = "7";
        %0e2 = ($sp - %dd7);
        %b140 = stack[%0e2];
        %63 = "5";
        %17b = ($sp - %63);
        %143 = stack[%17b];
        %14a = (%b140 + %143);
        %1bb = "1";
        %30f = (%14a - %1bb);
        %d0c = "4";
        %dd3 = ($sp - %d0c);
        %b5b = "0";
        %a4 = (%dd3 + %b5b);
        stack[%a4] = %30f;
        %c7dd = #756;
        jump %c7dd;
    }

    proc #6bc {
        %d3 = "10";
        $sp = ($sp - %d3);
        %aa = "1";
        %126 = ($sp + %aa);
        %f0 = stack[%126];
        jump %f0;
    }

    proc #101 {
        %cae = "3";
        %1e = ($sp - %cae);
        %d2 = stack[%1e];
        %a7e = "7";
        %2d2 = ($sp - %a7e);
        %164 = stack[%2d2];
        %beb = (%d2 + %164);
        %a2e = "1";
        %a77 = (%beb - %a2e);
        %2d21 = stack[%a77];
        %135c = "1";
        %9798 = ($sp - %135c);
        %6af = "0";
        %6a2 = (%9798 + %6af);
        stack[%6a2] = %2d21;
        %c77 = "2";
        %5b7 = ($sp - %c77);
        %569 = stack[%5b7];
        %334 = "5";
        %e0 = ($sp - %334);
        %e02 = stack[%e0];
        %1dae = (%569 + %e02);
        %b19 = "1";
        %b2 = (%1dae - %b19);
        %cfa = stack[%b2];
        %d34 = "0";
        %58f = ($sp - %d34);
        %e4 = "0";
        %0ac = (%58f + %e4);
        stack[%0ac] = %cfa;
        %e2a = "5";
        %9b4 = ($sp - %e2a);
        %af0 = stack[%9b4];
        %4b5 = "0";
        %53a = (!(%af0 > %4b5));
        %8d7 = "1";
        %d35 = ($sp - %8d7);
        %ba5 = stack[%d35];
        %fcf = "0";
        %f25 = ($sp - %fcf);
        %5f8 = stack[%f25];
        %031 = (!(%ba5 < %5f8));
        %eee = (%53a || %031);
        %120 = #d06;
        %fbb = #488;
        if %eee then jump %120 else jump %fbb;
    }

    proc #dff {
        %9fb = "4";
        %a41 = ($sp - %9fb);
        %8ba = stack[%a41];
        %81d = "1";
        %3b = (%8ba - %81d);
        %9d2 = "4";
        %897 = ($sp - %9d2);
        %b2c = "0";
        %268 = (%897 + %b2c);
        stack[%268] = %3b;
        %7c0 = #756;
        jump %7c0;
    }

    proc #d06 {
        %d30 = "1";
        %925 = ($sp - %d30);
        %0c8 = stack[%925];
        %ae0 = "3";
        %aa7 = ($sp - %ae0);
        %77e = stack[%aa7];
        %7ce = "4";
        %a87 = ($sp - %7ce);
        %7563 = stack[%a87];
        %51f = (%77e + %7563);
        %5bd = "0";
        %be5 = (%51f + %5bd);
        stack[%be5] = %0c8;
        %7cf = "7";
        %6f = ($sp - %7cf);
        %b3 = stack[%6f];
        %55 = "1";
        %c09 = (%b3 - %55);
        %7b = "7";
        %d402 = ($sp - %7b);
        %d1 = "0";
        %bcf = (%d402 + %d1);
        stack[%bcf] = %c09;
        %769 = #dff;
        jump %769;
    }

    proc #488 {
        %c29 = "0";
        %db2 = ($sp - %c29);
        %4258 = stack[%db2];
        %37b = "3";
        %13d = ($sp - %37b);
        %1ca = stack[%13d];
        %2c0 = "4";
        %545 = ($sp - %2c0);
        %641 = stack[%545];
        %2de = (%1ca + %641);
        %955 = "0";
        %83b = (%2de + %955);
        stack[%83b] = %4258;
        %fb7 = "5";
        %443 = ($sp - %fb7);
        %5b5 = stack[%443];
        %b80 = "1";
        %039 = (%5b5 - %b80);
        %d3a = "5";
        %de1 = ($sp - %d3a);
        %38 = "0";
        %680 = (%de1 + %38);
        stack[%680] = %039;
        %f6f = #dff;
        jump %f6f;
    }

    proc #756 {
        %092 = "4";
        %af1 = ($sp - %092);
        %33f = stack[%af1];
        %eb6 = "0";
        %11c = (!(%33f < %eb6));
        %d9c = #101;
        %87e = #6bc;
        if %11c then jump %d9c else jump %87e;
    }
}

func func.out {
    proc #ff7 {
        %b21 = "2";
        $sp = ($sp + %b21);
        %389 = "0";
        %2df = ($sp - %389);
        %87b = stack[%2df];
        out %87b;
        %5e3 = "2";
        $sp = ($sp - %5e3);
        %bfd = "1";
        %8c13 = ($sp + %bfd);
        %9d0 = stack[%8c13];
        jump %9d0;
    }
}

func func.in {
    proc #52a {
        %e17 = "3";
        $sp = ($sp + %e17);
        %633 = "0";
        %5c = ($sp - %633);
        in;
        stack[%5c] = $answer;
        %f4d = "0";
        %c65 = ($sp - %f4d);
        %2bd = stack[%c65];
        %557 = "1";
        %472 = ($sp - %557);
        %3cb = stack[%472];
        %71e = "0";
        %23 = (%3cb + %71e);
        stack[%23] = %2bd;
        %fd = "3";
        $sp = ($sp - %fd);
        %08f = "1";
        %268a = ($sp + %08f);
        %e7d = stack[%268a];
        jump %e7d;
    }
}