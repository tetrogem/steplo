main {
    proc #e3 {
        $sp = "-1";
        %fb = #cd;
        jump %fb;
    }
}

func main {
    proc #cd {
        %8e = "25";
        $sp = ($sp + %8e);
        %19 = "-3";
        %78 = "23";
        %1b = ($sp - %78);
        %5d = "0";
        %48 = (%1b + %5d);
        stack[%48] = %19;
        %4f = "-2";
        %da = "23";
        %88 = ($sp - %da);
        %bf = "1";
        %24 = (%88 + %bf);
        stack[%24] = %4f;
        %32 = "0";
        %41 = "23";
        %d3 = ($sp - %41);
        %61 = "2";
        %780 = (%d3 + %61);
        stack[%780] = %32;
        %75 = "0";
        %4d = "23";
        %d35 = ($sp - %4d);
        %be = "3";
        %91 = (%d35 + %be);
        stack[%91] = %75;
        %ac = "0";
        %d0 = "23";
        %d9 = ($sp - %d0);
        %c4 = "4";
        %199 = (%d9 + %c4);
        stack[%199] = %ac;
        %82 = "6";
        %fe = "23";
        %32d = ($sp - %fe);
        %ff = "5";
        %ec = (%32d + %ff);
        stack[%ec] = %82;
        %f4 = "7";
        %f8 = "23";
        %6f = ($sp - %f8);
        %cdc = "6";
        %23 = (%6f + %cdc);
        stack[%23] = %f4;
        %38 = "0";
        %48f = "23";
        %35 = ($sp - %48f);
        %4c = "7";
        %1d = (%35 + %4c);
        stack[%1d] = %38;
        %0f = "0";
        %af = "23";
        %af2 = ($sp - %af);
        %80 = "8";
        %44 = (%af2 + %80);
        stack[%44] = %0f;
        %99 = "0";
        %750 = "23";
        %eb = ($sp - %750);
        %36 = "9";
        %889 = (%eb + %36);
        stack[%889] = %99;
        %6e = "0";
        %43 = "23";
        %328 = ($sp - %43);
        %17 = "10";
        %828 = (%328 + %17);
        stack[%828] = %6e;
        %6e0 = "0";
        %cc = "23";
        %49 = ($sp - %cc);
        %62 = "11";
        %484 = (%49 + %62);
        stack[%484] = %6e0;
        %01 = "0";
        %03 = "23";
        %3e = ($sp - %03);
        %35d = "12";
        %b7 = (%3e + %35d);
        stack[%b7] = %01;
        %39 = "-1";
        %65 = "8";
        %9b = ($sp - %65);
        %2b = "0";
        %f7 = (%9b + %2b);
        stack[%f7] = %39;
        %d4 = "1";
        %7b = "8";
        %e8 = ($sp - %7b);
        %8eb = "1";
        %2c = (%e8 + %8eb);
        stack[%2c] = %d4;
        %40 = "1";
        %51 = "8";
        %a0 = ($sp - %51);
        %a0a = "2";
        %7d = (%a0 + %a0a);
        stack[%7d] = %40;
        %06 = "1";
        %25 = "8";
        %29 = ($sp - %25);
        %ebc = "3";
        %79 = (%29 + %ebc);
        stack[%79] = %06;
        %dc = "2";
        %4f4 = "8";
        %790 = ($sp - %4f4);
        %d3a = "4";
        %a7 = (%790 + %d3a);
        stack[%a7] = %dc;
        %8e8 = "3";
        %d7 = "8";
        %1f = ($sp - %d7);
        %172 = "5";
        %a5 = (%1f + %172);
        stack[%a5] = %8e8;
        %9d = "10";
        %320 = ($sp - %9d);
        %ec5 = "2";
        %e6 = ($sp + %ec5);
        stack[%e6] = %320;
        %26 = "23";
        %f7d = ($sp - %26);
        %99e = "3";
        %65e = ($sp + %99e);
        stack[%65e] = %f7d;
        %d8 = "13";
        %6ea = "4";
        %ac0 = ($sp + %6ea);
        stack[%ac0] = %d8;
        %2b9 = "1";
        %f3 = ($sp + %2b9);
        %b2 = #fe4;
        stack[%f3] = %b2;
        %9d1 = #3f;
        jump %9d1;
    }

    proc #fe4 {
        %2b2 = "2";
        %ba = ($sp - %2b2);
        %97 = "2";
        %0f9 = ($sp + %97);
        stack[%0f9] = %ba;
        %42 = "8";
        %dd = ($sp - %42);
        %22 = "3";
        %224 = ($sp + %22);
        stack[%224] = %dd;
        %46 = "6";
        %a53 = "4";
        %30 = ($sp + %a53);
        stack[%30] = %46;
        %3fc = "1";
        %5f = ($sp + %3fc);
        %6c = #d04;
        stack[%5f] = %6c;
        %69 = #3f;
        jump %69;
    }

    proc #d04 {
        %ef = "0";
        %404 = ($sp - %ef);
        %c5 = "2";
        %08 = ($sp + %c5);
        stack[%08] = %404;
        %df = "10";
        %72 = ($sp - %df);
        %b5 = "3";
        %62a = ($sp + %b5);
        stack[%62a] = %72;
        %1a = "1";
        %8f = ($sp + %1a);
        %d5 = #79e;
        stack[%8f] = %d5;
        %6ef = #90;
        jump %6ef;
    }

    proc #79e {
        %73 = "0";
        %3e2 = ($sp - %73);
        %256 = stack[%3e2];
        %5a = "2";
        %519 = ($sp + %5a);
        stack[%519] = %256;
        %41b = "1";
        %4a = ($sp + %41b);
        %ab = #b24;
        stack[%4a] = %ab;
        %d1 = #fa;
        jump %d1;
    }

    proc #b24 {
        %bc = "0";
        %98 = ($sp - %bc);
        %0b = "2";
        %de = ($sp + %0b);
        stack[%de] = %98;
        %dff = "2";
        %191 = ($sp - %dff);
        %dab = "3";
        %cd1 = ($sp + %dab);
        stack[%cd1] = %191;
        %b5c = "1";
        %cb = ($sp + %b5c);
        %12 = #10;
        stack[%cb] = %12;
        %ac1 = #90;
        jump %ac1;
    }

    proc #10 {
        %dfe = "0";
        %93 = ($sp - %dfe);
        %58 = stack[%93];
        %414 = "2";
        %7e = ($sp + %414);
        stack[%7e] = %58;
        %7f = "1";
        %28 = ($sp + %7f);
        %66 = #990;
        stack[%28] = %66;
        %82c = #fa;
        jump %82c;
    }

    proc #990 {
        %53 = "10";
        %662 = ($sp - %53);
        %54 = "2";
        %2c6 = ($sp + %54);
        stack[%2c6] = %662;
        %2cd = "7";
        %af4 = "3";
        %af3 = ($sp + %af4);
        stack[%af3] = %2cd;
        %92 = "2";
        %e4 = ($sp - %92);
        %cb9 = "4";
        %7d6 = ($sp + %cb9);
        stack[%7d6] = %e4;
        %fa3 = "6";
        %974 = "5";
        %d2 = ($sp + %974);
        stack[%d2] = %fa3;
        %ec9 = "1";
        %45 = ($sp + %ec9);
        %532 = #5c;
        stack[%45] = %532;
        %fe0 = #25c;
        jump %fe0;
    }

    proc #5c {
        %b6 = "0";
        %c2 = ($sp - %b6);
        %f0 = "2";
        %dad = ($sp + %f0);
        stack[%dad] = %c2;
        %982 = "10";
        %ed = ($sp - %982);
        %b3 = "3";
        %ca = ($sp + %b3);
        stack[%ca] = %ed;
        %77 = "1";
        %13 = ($sp + %77);
        %518 = #67;
        stack[%13] = %518;
        %df9 = #90;
        jump %df9;
    }

    proc #67 {
        %07 = "Merged: ";
        %8ed = "0";
        %735 = ($sp - %8ed);
        %012 = stack[%735];
        %692 = (%07 ~ %012);
        %b2f = "2";
        %06f = ($sp + %b2f);
        stack[%06f] = %692;
        %01a = "1";
        %f2 = ($sp + %01a);
        %104 = #8f9;
        stack[%f2] = %104;
        %286 = #fa;
        jump %286;
    }

    proc #8f9 {
        exit;
    }
}

func func.Vector_new {
    proc #3f {
        %ae = "4";
        $sp = ($sp + %ae);
        %37 = "1";
        %4b = ($sp - %37);
        %c9 = stack[%4b];
        %808 = "2";
        %a2 = ($sp - %808);
        %f72 = stack[%a2];
        %c1 = "0";
        %f1 = (%f72 + %c1);
        stack[%f1] = %c9;
        %15 = "0";
        %795 = ($sp - %15);
        %3a = stack[%795];
        %6a = "2";
        %cb1 = ($sp - %6a);
        %3fe = stack[%cb1];
        %664 = "1";
        %9db = (%3fe + %664);
        stack[%9db] = %3a;
        %4e = "4";
        $sp = ($sp - %4e);
        %95 = "1";
        %5d8 = ($sp + %95);
        %a1 = stack[%5d8];
        jump %a1;
    }
}

func func.Vector_vals_r {
    proc #33 {
        %bb = "3";
        $sp = ($sp + %bb);
        %820 = "0";
        %09 = "0";
        %2a = ($sp - %09);
        %c6 = stack[%2a];
        %91e = (%c6 + %820);
        %86 = stack[%91e];
        %b7c = "1";
        %582 = ($sp - %b7c);
        %979 = stack[%582];
        %c1e = "0";
        %52 = (%979 + %c1e);
        stack[%52] = %86;
        %b5a = "3";
        $sp = ($sp - %b5a);
        %013 = "1";
        %0c = ($sp + %013);
        %a29 = stack[%0c];
        jump %a29;
    }
}

func func.Vector_len {
    proc #296 {
        %626 = "3";
        $sp = ($sp + %626);
        %f12 = "1";
        %4ce = "0";
        %d30 = ($sp - %4ce);
        %e83 = stack[%d30];
        %3a3 = (%e83 + %f12);
        %48a = stack[%3a3];
        %67d = "1";
        %247 = ($sp - %67d);
        %02 = stack[%247];
        %4ea = "0";
        %909 = (%02 + %4ea);
        stack[%909] = %48a;
        %38d = "3";
        $sp = ($sp - %38d);
        %ca5 = "1";
        %7b4 = ($sp + %ca5);
        %70 = stack[%7b4];
        jump %70;
    }
}

func func.Vector_to_string {
    proc #90 {
        %f88 = "8";
        $sp = ($sp + %f88);
        %e45 = "2";
        %1c = ($sp - %e45);
        %60 = "2";
        %7e8 = ($sp + %60);
        stack[%7e8] = %1c;
        %528 = "5";
        %224c = ($sp - %528);
        %eb7 = stack[%224c];
        %dd7 = "3";
        %cd4 = ($sp + %dd7);
        stack[%cd4] = %eb7;
        %266 = "1";
        %ee = ($sp + %266);
        %ec54 = #5e;
        stack[%ee] = %ec54;
        %34 = #33;
        jump %34;
    }

    proc #5e {
        %34c = "1";
        %0d = ($sp - %34c);
        %fc = "2";
        %a2c = ($sp + %fc);
        stack[%a2c] = %0d;
        %c6e = "5";
        %bd = ($sp - %c6e);
        %52d = stack[%bd];
        %63 = "3";
        %7fd = ($sp + %63);
        stack[%7fd] = %52d;
        %157 = "1";
        %d12 = ($sp + %157);
        %92a = #032;
        stack[%d12] = %92a;
        %428 = #296;
        jump %428;
    }

    proc #032 {
        %2c3 = "[";
        %5b = "4";
        %f8c = ($sp - %5b);
        %989 = "0";
        %c7 = (%f8c + %989);
        stack[%c7] = %2c3;
        %05 = "0";
        %9e = "3";
        %27 = ($sp - %9e);
        %d54 = "0";
        %374 = (%27 + %d54);
        stack[%374] = %05;
        %96 = #e4e;
        jump %96;
    }

    proc #455 {
        %98e = "4";
        %614 = ($sp - %98e);
        %cb6 = stack[%614];
        %2e = "]";
        %a4 = (%cb6 ~ %2e);
        %528c = "4";
        %802 = ($sp - %528c);
        %8b = "0";
        %e5 = (%802 + %8b);
        stack[%e5] = %a4;
        %6cd = "4";
        %2b6 = ($sp - %6cd);
        %c0 = stack[%2b6];
        %92d = "6";
        %e0 = ($sp - %92d);
        %fb6 = stack[%e0];
        %fe8 = "0";
        %ebc5 = (%fb6 + %fe8);
        stack[%ebc5] = %c0;
        %7f4 = "8";
        $sp = ($sp - %7f4);
        %8fc = "1";
        %85 = ($sp + %8fc);
        %2bb = stack[%85];
        jump %2bb;
    }

    proc #87 {
        %3b = "3";
        %b32 = ($sp - %3b);
        %39e = stack[%b32];
        %94 = "2";
        %8f4 = ($sp - %94);
        %76 = stack[%8f4];
        %16 = (%76 + %39e);
        %22a = stack[%16];
        %393 = "0";
        %8f3 = ($sp - %393);
        %1d2 = "0";
        %fb63 = (%8f3 + %1d2);
        stack[%fb63] = %22a;
        %1f6 = "4";
        %8c = ($sp - %1f6);
        %fd = stack[%8c];
        %6aa = "0";
        %751 = ($sp - %6aa);
        %27a = stack[%751];
        %356 = (%fd ~ %27a);
        %0d2 = "4";
        %d0b = ($sp - %0d2);
        %244 = "0";
        %1a7 = (%d0b + %244);
        stack[%1a7] = %356;
        %5b6 = "3";
        %668 = ($sp - %5b6);
        %9f = stack[%668];
        %6f6 = "1";
        %489 = (%9f + %6f6);
        %e1 = "1";
        %3a2 = ($sp - %e1);
        %15f = stack[%3a2];
        %3bb = (%489 < %15f);
        %618 = #0c9;
        %198 = #cc7;
        if %3bb then jump %618 else jump %198;
    }

    proc #cc7 {
        %433 = "3";
        %7c = ($sp - %433);
        %6d = stack[%7c];
        %2243 = "1";
        %0e = (%6d + %2243);
        %db = "3";
        %e37 = ($sp - %db);
        %fb9 = "0";
        %222 = (%e37 + %fb9);
        stack[%222] = %0e;
        %5e8 = #e4e;
        jump %5e8;
    }

    proc #0c9 {
        %ffb = "4";
        %333 = ($sp - %ffb);
        %306 = stack[%333];
        %85e = ", ";
        %301 = (%306 ~ %85e);
        %35a = "4";
        %49c = ($sp - %35a);
        %d9c = "0";
        %beb = (%49c + %d9c);
        stack[%beb] = %301;
        %9ec = #cc7;
        jump %9ec;
    }

    proc #e4e {
        %271 = "3";
        %5fb = ($sp - %271);
        %a12 = stack[%5fb];
        %d96 = "1";
        %292 = ($sp - %d96);
        %272 = stack[%292];
        %2a4 = (%a12 < %272);
        %806 = #87;
        %422 = #455;
        if %2a4 then jump %806 else jump %422;
    }
}

func func.merge_sorted_vecs {
    proc #25c {
        %fc8 = "10";
        $sp = ($sp + %fc8);
        %b6e = "3";
        %aff = ($sp - %b6e);
        %79ea = "2";
        %d5e = ($sp + %79ea);
        stack[%d5e] = %aff;
        %9a = "8";
        %990a = ($sp - %9a);
        %d21 = stack[%990a];
        %431 = "3";
        %c5a = ($sp + %431);
        stack[%c5a] = %d21;
        %a4b = "1";
        %53a = ($sp + %a4b);
        %8d = #b6e2;
        stack[%53a] = %8d;
        %f78 = #33;
        jump %f78;
    }

    proc #b6e2 {
        %267 = "2";
        %90c = ($sp - %267);
        %ecc = "2";
        %939 = ($sp + %ecc);
        stack[%939] = %90c;
        %cbb = "6";
        %d16 = ($sp - %cbb);
        %6d4 = stack[%d16];
        %f5 = "3";
        %084 = ($sp + %f5);
        stack[%084] = %6d4;
        %091 = "1";
        %fac = ($sp + %091);
        %029 = #e2;
        stack[%fac] = %029;
        %f5a = #33;
        jump %f5a;
    }

    proc #e2 {
        %1c2 = "7";
        %84 = ($sp - %1c2);
        %2b8 = stack[%84];
        %067 = "5";
        %00 = ($sp - %067);
        %b61 = stack[%00];
        %14 = (%2b8 + %b61);
        %ba7 = "1";
        %c6f = (%14 - %ba7);
        %0f7 = "4";
        %7bc = ($sp - %0f7);
        %f5f = "0";
        %e1d = (%7bc + %f5f);
        stack[%e1d] = %c6f;
        %b8 = #4a5;
        jump %b8;
    }

    proc #304 {
        %40f = "10";
        $sp = ($sp - %40f);
        %0c7 = "1";
        %456 = ($sp + %0c7);
        %651 = stack[%456];
        jump %651;
    }

    proc #cc4 {
        %c3 = "7";
        %b70 = ($sp - %c3);
        %b5d = stack[%b70];
        %d38 = "1";
        %cbe = (%b5d - %d38);
        %ed0 = "3";
        %a8 = ($sp - %ed0);
        %64 = stack[%a8];
        %62d = (%64 + %cbe);
        %8e2 = stack[%62d];
        %7fe = "1";
        %333d = ($sp - %7fe);
        %767 = "0";
        %f6 = (%333d + %767);
        stack[%f6] = %8e2;
        %a6 = "5";
        %57 = ($sp - %a6);
        %28c = stack[%57];
        %47 = "1";
        %0ec = (%28c - %47);
        %f75 = "2";
        %c77 = ($sp - %f75);
        %1a8 = stack[%c77];
        %45a = (%1a8 + %0ec);
        %5c3 = stack[%45a];
        %366 = "0";
        %c97 = ($sp - %366);
        %b63 = "0";
        %7c0 = (%c97 + %b63);
        stack[%7c0] = %5c3;
        %e62 = "5";
        %bf1 = ($sp - %e62);
        %dc3 = stack[%bf1];
        %53b = "0";
        %9db9 = (!(%dc3 > %53b));
        %50 = "1";
        %4e5 = ($sp - %50);
        %e5c = stack[%4e5];
        %293 = "0";
        %60e = ($sp - %293);
        %f6c = stack[%60e];
        %888 = (!(%e5c < %f6c));
        %d55 = (%9db9 || %888);
        %bd1 = #0cc;
        %71 = #4d9;
        if %d55 then jump %bd1 else jump %71;
    }

    proc #194 {
        %d59 = "4";
        %c78 = ($sp - %d59);
        %8d7 = stack[%c78];
        %fec = "1";
        %425 = (%8d7 - %fec);
        %bd2 = "4";
        %a4c = ($sp - %bd2);
        %ac9 = "0";
        %4e6 = (%a4c + %ac9);
        stack[%4e6] = %425;
        %637 = #4a5;
        jump %637;
    }

    proc #0cc {
        %89 = "1";
        %b9 = ($sp - %89);
        %14a = stack[%b9];
        %91a = "4";
        %e0e = ($sp - %91a);
        %bca = stack[%e0e];
        %d9a = "3";
        %d31 = ($sp - %d9a);
        %1f8 = stack[%d31];
        %379 = (%1f8 + %bca);
        %1d5 = "0";
        %c4e = (%379 + %1d5);
        stack[%c4e] = %14a;
        %497 = "7";
        %ea = ($sp - %497);
        %d1a = stack[%ea];
        %374a = "1";
        %514 = (%d1a - %374a);
        %1a74 = "7";
        %1c8 = ($sp - %1a74);
        %9ae = "0";
        %f0f = (%1c8 + %9ae);
        stack[%f0f] = %514;
        %68 = #194;
        jump %68;
    }

    proc #4d9 {
        %b89 = "0";
        %3e1 = ($sp - %b89);
        %b54 = stack[%3e1];
        %6e3 = "4";
        %1f1 = ($sp - %6e3);
        %4ca = stack[%1f1];
        %dd6 = "3";
        %c970 = ($sp - %dd6);
        %0b6 = stack[%c970];
        %0b9 = (%0b6 + %4ca);
        %2e0 = "0";
        %f5ae = (%0b9 + %2e0);
        stack[%f5ae] = %b54;
        %b4 = "5";
        %e32 = ($sp - %b4);
        %924 = stack[%e32];
        %1d8 = "1";
        %bbc = (%924 - %1d8);
        %e0ed = "5";
        %fa0 = ($sp - %e0ed);
        %675 = "0";
        %03c = (%fa0 + %675);
        stack[%03c] = %bbc;
        %449 = #194;
        jump %449;
    }

    proc #4a5 {
        %fb0 = "4";
        %de8 = ($sp - %fb0);
        %df92 = stack[%de8];
        %dc6 = "0";
        %20 = (!(%df92 < %dc6));
        %41a = #cc4;
        %ace = #304;
        if %20 then jump %41a else jump %ace;
    }
}

func func.out {
    proc #fa {
        %4fe = "2";
        $sp = ($sp + %4fe);
        %58d = "0";
        %8fb = ($sp - %58d);
        %84b = stack[%8fb];
        out %84b;
        %672 = "2";
        $sp = ($sp - %672);
        %0c6 = "1";
        %ab6 = ($sp + %0c6);
        %bd0 = stack[%ab6];
        jump %bd0;
    }
}

func func.in {
    proc #0b62 {
        %44c = "3";
        $sp = ($sp + %44c);
        %c91 = "0";
        %47c = ($sp - %c91);
        in;
        stack[%47c] = $answer;
        %bb4 = "0";
        %984 = ($sp - %bb4);
        %649 = stack[%984];
        %1a0 = "1";
        %87c = ($sp - %1a0);
        %b48 = stack[%87c];
        %861 = "0";
        %121 = (%b48 + %861);
        stack[%121] = %649;
        %c59 = "3";
        $sp = ($sp - %c59);
        %11 = "1";
        %ef2 = ($sp + %11);
        %1571 = stack[%ef2];
        jump %1571;
    }
}