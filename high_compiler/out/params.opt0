main {
    proc #cc {
        $sp = "-1";
        %a2 = #ee;
        jump %a2;
    }
}

func main {
    proc #ee {
        %59 = "1";
        $sp = ($sp + %59);
        %0c = "3";
        %4a = "2";
        %c3 = ($sp + %4a);
        stack[%c3] = %0c;
        %20 = "5";
        %91 = "3";
        %5c = ($sp + %91);
        stack[%5c] = %20;
        %c8 = "1";
        %84 = ($sp + %c8);
        %b5 = #30;
        stack[%84] = %b5;
        %eee = #39;
        jump %eee;
    }

    proc #30 {
        exit;
    }
}

func func.sum {
    proc #39 {
        %d0 = "4";
        $sp = ($sp + %d0);
        %93 = "2";
        %0e = ($sp - %93);
        %be = stack[%0e];
        %a6 = "1";
        %bec = ($sp - %a6);
        %52 = stack[%bec];
        %1f = (%be + %52);
        %e1 = "2";
        %9c = ($sp + %e1);
        stack[%9c] = %1f;
        %24 = "1";
        %c5 = ($sp + %24);
        %35 = #76;
        stack[%c5] = %35;
        %b1 = #3e;
        jump %b1;
    }

    proc #76 {
        %d2 = "4";
        $sp = ($sp - %d2);
        %72 = "1";
        %90 = ($sp + %72);
        %45 = stack[%90];
        jump %45;
    }
}

func func.out {
    proc #3e {
        %26 = "2";
        $sp = ($sp + %26);
        %28 = "0";
        %33 = ($sp - %28);
        %3b = stack[%33];
        out %3b;
        %a8 = "2";
        $sp = ($sp - %a8);
        %2e = "1";
        %c5d = ($sp + %2e);
        %6d = stack[%c5d];
        jump %6d;
    }
}

func func.in {
    proc #e3 {
        %eb = "3";
        $sp = ($sp + %eb);
        %e5 = "0";
        %9f = ($sp - %e5);
        in;
        stack[%9f] = $answer;
        %7a = "0";
        %40 = ($sp - %7a);
        %f2 = stack[%40];
        %58 = "1";
        %76c = ($sp - %58);
        %15 = "0";
        %45f = (%76c + %15);
        %20e = stack[%45f];
        stack[%20e] = %f2;
        %bf = "3";
        $sp = ($sp - %bf);
        %e8 = "1";
        %8f = ($sp + %e8);
        %7d = stack[%8f];
        jump %7d;
    }
}