main {
    proc #51 {
        $sp = "-1";
        %eb = #58;
        jump %eb;
    }
}

func main {
    proc #58 {
        %39 = "2";
        $sp = ($sp + %39);
        %7e = "1";
        %d9 = "1";
        %b0 = (%7e + %d9);
        %b6 = "1";
        %67 = (%b0 + %b6);
        %2f = "1";
        %b5 = (%67 + %2f);
        %48 = "0";
        %c8 = ($sp - %48);
        %fd = "0";
        %75 = (%c8 + %fd);
        stack[%75] = %b5;
        %1b = "0";
        %5f = ($sp - %1b);
        %bc = stack[%5f];
        %df = "2";
        %0a = ($sp + %df);
        stack[%0a] = %bc;
        %4b = "1";
        %a9 = ($sp + %4b);
        %d2 = #c9;
        stack[%a9] = %d2;
        %33 = #cd;
        jump %33;
    }

    proc #c9 {
        exit;
    }
}

func func.out {
    proc #cd {
        %c3 = "2";
        $sp = ($sp + %c3);
        %06 = "0";
        %a5 = ($sp - %06);
        %d8 = stack[%a5];
        out %d8;
        %c7 = "2";
        $sp = ($sp - %c7);
        %ab = "1";
        %f5 = ($sp + %ab);
        %a7 = stack[%f5];
        jump %a7;
    }
}

func func.in {
    proc #ebd {
        %3d = "3";
        $sp = ($sp + %3d);
        %c81 = "0";
        %db = ($sp - %c81);
        in;
        stack[%db] = $answer;
        %76 = "0";
        %3c = ($sp - %76);
        %96 = stack[%3c];
        %10 = "1";
        %4d = ($sp - %10);
        %46 = stack[%4d];
        %24 = "0";
        %2d = (%46 + %24);
        stack[%2d] = %96;
        %99 = "3";
        $sp = ($sp - %99);
        %66 = "1";
        %13 = ($sp + %66);
        %2f4 = stack[%13];
        jump %2f4;
    }
}