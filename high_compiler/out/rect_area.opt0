main {
    proc #50 {
        $sp = "-1";
        %56 = #10;
        jump %56;
    }
}

func main {
    proc #10 {
        %70 = "6";
        $sp = ($sp + %70);
        %77 = "4";
        %6f = ($sp - %77);
        %45 = "2";
        %76 = ($sp + %45);
        stack[%76] = %6f;
        %b5 = "4";
        %d7 = "3";
        %d0 = ($sp + %d7);
        stack[%d0] = %b5;
        %bf = "4";
        %47 = "4";
        %83 = ($sp + %47);
        stack[%83] = %bf;
        %a6 = "1";
        %55 = ($sp + %a6);
        %c2 = #3c;
        stack[%55] = %c2;
        %90 = #bd;
        jump %90;
    }

    proc #3c {
        %73 = "2";
        %33 = ($sp - %73);
        %65 = "2";
        %5b = ($sp + %65);
        stack[%5b] = %33;
        %6d = "5";
        %63 = "3";
        %31 = ($sp + %63);
        stack[%31] = %6d;
        %c6 = "8";
        %97 = "4";
        %df = ($sp + %97);
        stack[%df] = %c6;
        %db = "1";
        %7a = ($sp + %db);
        %ce = #c0;
        stack[%7a] = %ce;
        %16 = #bd;
        jump %16;
    }

    proc #c0 {
        %fb = "0";
        %14 = ($sp - %fb);
        %2c = "2";
        %29 = ($sp + %2c);
        stack[%29] = %14;
        %d2 = "4";
        %df5 = ($sp - %d2);
        %1c = "3";
        %1e = ($sp + %1c);
        stack[%1e] = %df5;
        %d4 = "1";
        %9b = ($sp + %d4);
        %635 = #a4;
        stack[%9b] = %635;
        %6d2 = #4f;
        jump %6d2;
    }

    proc #a4 {
        %68 = "Rect 1 Area:";
        %a3 = "2";
        %5e = ($sp + %a3);
        stack[%5e] = %68;
        %60 = "1";
        %37 = ($sp + %60);
        %a9 = #4a;
        stack[%37] = %a9;
        %85 = #94;
        jump %85;
    }

    proc #4a {
        %766 = "0";
        %e1 = ($sp - %766);
        %bd9 = stack[%e1];
        %92 = "2";
        %b3 = ($sp + %92);
        stack[%b3] = %bd9;
        %a3b = "1";
        %ba = ($sp + %a3b);
        %34 = #5e1;
        stack[%ba] = %34;
        %62 = #94;
        jump %62;
    }

    proc #5e1 {
        %9c = "0";
        %bf5 = ($sp - %9c);
        %27 = "2";
        %28 = ($sp + %27);
        stack[%28] = %bf5;
        %db5 = "2";
        %5a = ($sp - %db5);
        %f7 = "3";
        %18 = ($sp + %f7);
        stack[%18] = %5a;
        %e2 = "1";
        %15 = ($sp + %e2);
        %8d = #8f;
        stack[%15] = %8d;
        %fc = #4f;
        jump %fc;
    }

    proc #8f {
        %e8 = "Rect 2 Area:";
        %b1 = "2";
        %bc = ($sp + %b1);
        stack[%bc] = %e8;
        %d6 = "1";
        %106 = ($sp + %d6);
        %3f = #730;
        stack[%106] = %3f;
        %47e = #94;
        jump %47e;
    }

    proc #730 {
        %375 = "0";
        %26 = ($sp - %375);
        %0a = stack[%26];
        %629 = "2";
        %500 = ($sp + %629);
        stack[%500] = %0a;
        %141 = "1";
        %3d = ($sp + %141);
        %563 = #d65;
        stack[%3d] = %563;
        %ec = #94;
        jump %ec;
    }

    proc #d65 {
        %30 = "Done!";
        %0c = "2";
        %a32 = ($sp + %0c);
        stack[%a32] = %30;
        %f5 = "1";
        %92b = ($sp + %f5);
        %8fc = #ce1;
        stack[%92b] = %8fc;
        %3c6 = #94;
        jump %3c6;
    }

    proc #ce1 {
        exit;
    }
}

func func.rect_new {
    proc #bd {
        %4a5 = "4";
        $sp = ($sp + %4a5);
        %8f2 = "1";
        %52 = ($sp - %8f2);
        %46 = stack[%52];
        %6f7 = "2";
        %fa = ($sp - %6f7);
        %d8 = stack[%fa];
        %1f = "0";
        %86 = (%d8 + %1f);
        %34f = "0";
        %69 = (%86 + %34f);
        stack[%69] = %46;
        %161 = "0";
        %336 = ($sp - %161);
        %dd = stack[%336];
        %656 = "2";
        %5e1d = ($sp - %656);
        %79 = stack[%5e1d];
        %1c0 = "1";
        %2f = (%79 + %1c0);
        %00 = "0";
        %1d = (%2f + %00);
        stack[%1d] = %dd;
        %eb = "4";
        $sp = ($sp - %eb);
        %25 = "1";
        %67 = ($sp + %25);
        %e29 = stack[%67];
        jump %e29;
    }
}

func func.rect_width {
    proc #ff {
        %87 = "3";
        $sp = ($sp + %87);
        %42 = "0";
        %8e = ($sp - %42);
        %6c = stack[%8e];
        %a8 = stack[%6c];
        %dc = "1";
        %f7c = ($sp - %dc);
        %f0 = stack[%f7c];
        %60f = "0";
        %b13 = (%f0 + %60f);
        stack[%b13] = %a8;
        %32 = "3";
        $sp = ($sp - %32);
        %4c = "1";
        %70e = ($sp + %4c);
        %2e = stack[%70e];
        jump %2e;
    }
}

func func.rect_height {
    proc #d01 {
        %19 = "3";
        $sp = ($sp + %19);
        %cb = "0";
        %a85 = ($sp - %cb);
        %738 = stack[%a85];
        %80 = "1";
        %7b = (%738 + %80);
        %aa = stack[%7b];
        %91 = "1";
        %c5 = ($sp - %91);
        %2a = stack[%c5];
        %4cf = "0";
        %ac = (%2a + %4cf);
        stack[%ac] = %aa;
        %8b = "3";
        $sp = ($sp - %8b);
        %49 = "1";
        %cd = ($sp + %49);
        %38 = stack[%cd];
        jump %38;
    }
}

func func.rect_area {
    proc #4f {
        %9e = "5";
        $sp = ($sp + %9e);
        %ee = "1";
        %d06 = ($sp - %ee);
        %ce6 = "2";
        %c1 = ($sp + %ce6);
        stack[%c1] = %d06;
        %338 = "2";
        %baf = ($sp - %338);
        %4d = stack[%baf];
        %5a3 = "3";
        %426 = ($sp + %5a3);
        stack[%426] = %4d;
        %46a = "1";
        %21 = ($sp + %46a);
        %605 = #809;
        stack[%21] = %605;
        %35 = #ff;
        jump %35;
    }

    proc #809 {
        %61 = "0";
        %e80 = ($sp - %61);
        %cf = "2";
        %c61 = ($sp + %cf);
        stack[%c61] = %e80;
        %7f = "2";
        %54 = ($sp - %7f);
        %b2 = stack[%54];
        %85f = "3";
        %7e = ($sp + %85f);
        stack[%7e] = %b2;
        %d23 = "1";
        %499 = ($sp + %d23);
        %de = #44;
        stack[%499] = %de;
        %2c7 = #d01;
        jump %2c7;
    }

    proc #44 {
        %c07 = "1";
        %1b = ($sp - %c07);
        %8f8 = stack[%1b];
        %96 = "0";
        %e86 = ($sp - %96);
        %b20 = stack[%e86];
        %a86 = (%8f8 * %b20);
        %77d = "3";
        %92e = ($sp - %77d);
        %c4 = stack[%92e];
        %f8 = "0";
        %c6b = (%c4 + %f8);
        stack[%c6b] = %a86;
        %03 = "5";
        $sp = ($sp - %03);
        %275 = "1";
        %3cd = ($sp + %275);
        %e2b = stack[%3cd];
        jump %e2b;
    }
}

func func.out {
    proc #94 {
        %3b = "2";
        $sp = ($sp + %3b);
        %96a = "0";
        %f2 = ($sp - %96a);
        %557 = stack[%f2];
        out %557;
        %72 = "2";
        $sp = ($sp - %72);
        %3cb = "1";
        %5e4 = ($sp + %3cb);
        %64 = stack[%5e4];
        jump %64;
    }
}

func func.in {
    proc #e0 {
        %cf3 = "3";
        $sp = ($sp + %cf3);
        %e10 = "0";
        %658 = ($sp - %e10);
        in;
        stack[%658] = $answer;
        %bcc = "0";
        %a68 = ($sp - %bcc);
        %965 = stack[%a68];
        %9ee = "1";
        %ee3 = ($sp - %9ee);
        %89 = stack[%ee3];
        %b0 = "0";
        %43 = (%89 + %b0);
        stack[%43] = %965;
        %100 = "3";
        $sp = ($sp - %100);
        %52b = "1";
        %9a = ($sp + %52b);
        %704 = stack[%9a];
        jump %704;
    }
}