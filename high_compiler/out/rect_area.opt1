main {
    proc #c1 {
        $sp = "-1";
        jump #b2;
    }
}

func main {
    proc #b2 {
        $sp = ($sp + "5");
        stack[($sp + "2")] = ($sp - "3");
        stack[($sp + "3")] = "4";
        stack[($sp + "4")] = "4";
        stack[($sp + "1")] = #f4;
        jump #b3;
    }

    proc #f4 {
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = "5";
        stack[($sp + "4")] = "8";
        stack[($sp + "1")] = #0b;
        jump #b3;
    }

    proc #0b {
        stack[($sp + "2")] = ($sp - "3");
        stack[($sp + "3")] = "Rect 1";
        stack[($sp + "1")] = #75;
        jump #12;
    }

    proc #75 {
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = "Rect 2";
        stack[($sp + "1")] = #8e;
        jump #12;
    }

    proc #8e {
        stack[($sp + "2")] = "Done!";
        stack[($sp + "1")] = #cb;
        jump #fa;
    }

    proc #cb {
        exit;
    }
}

func func.Rect_new {
    proc #b3 {
        $sp = ($sp + "4");
        stack[stack[($sp - "2")]] = stack[($sp - "1")];
        stack[(stack[($sp - "2")] + "1")] = stack[$sp];
        $sp = ($sp - "4");
        jump stack[($sp + "1")];
    }
}

func func.Rect_width {
    proc #ce {
        $sp = ($sp + "3");
        stack[stack[($sp - "1")]] = stack[stack[$sp]];
        $sp = ($sp - "3");
        jump stack[($sp + "1")];
    }
}

func func.Rect_height {
    proc #6e {
        $sp = ($sp + "3");
        stack[stack[($sp - "1")]] = stack[(stack[$sp] + "1")];
        $sp = ($sp - "3");
        jump stack[($sp + "1")];
    }
}

func func.Rect_area {
    proc #73 {
        $sp = ($sp + "5");
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = stack[($sp - "2")];
        stack[($sp + "1")] = #a3;
        jump #ce;
    }

    proc #a3 {
        stack[($sp + "2")] = $sp;
        stack[($sp + "3")] = stack[($sp - "2")];
        stack[($sp + "1")] = #cc;
        jump #6e;
    }

    proc #cc {
        stack[stack[($sp - "3")]] = (stack[($sp - "1")] * stack[$sp]);
        $sp = ($sp - "5");
        jump stack[($sp + "1")];
    }
}

func func.Rect_perimeter {
    proc #ec {
        $sp = ($sp + "5");
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = stack[($sp - "2")];
        stack[($sp + "1")] = #2d;
        jump #ce;
    }

    proc #2d {
        stack[($sp + "2")] = $sp;
        stack[($sp + "3")] = stack[($sp - "2")];
        stack[($sp + "1")] = #78;
        jump #6e;
    }

    proc #78 {
        stack[($sp - "1")] = (stack[($sp - "1")] * "2");
        stack[$sp] = (stack[$sp] * "2");
        stack[stack[($sp - "3")]] = (stack[($sp - "1")] + stack[$sp]);
        $sp = ($sp - "5");
        jump stack[($sp + "1")];
    }
}

func func.Rect_print_info {
    proc #12 {
        $sp = ($sp + "5");
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = stack[($sp - "3")];
        stack[($sp + "1")] = #20;
        jump #ce;
    }

    proc #20 {
        stack[($sp + "2")] = $sp;
        stack[($sp + "3")] = stack[($sp - "3")];
        stack[($sp + "1")] = #3e;
        jump #6e;
    }

    proc #3e {
        stack[($sp + "2")] = ((((stack[($sp - "2")] ~ " dimensions: ") ~ stack[($sp - "1")]) ~ " x ") ~ stack[$sp]);
        stack[($sp + "1")] = #63;
        jump #fa;
    }

    proc #63 {
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = stack[($sp - "3")];
        stack[($sp + "1")] = #b5;
        jump #ec;
    }

    proc #b5 {
        stack[($sp + "2")] = ((stack[($sp - "2")] ~ " perimeter: ") ~ stack[($sp - "1")]);
        stack[($sp + "1")] = #48;
        jump #fa;
    }

    proc #48 {
        stack[($sp + "2")] = ($sp - "1");
        stack[($sp + "3")] = stack[($sp - "3")];
        stack[($sp + "1")] = #8ec;
        jump #73;
    }

    proc #8ec {
        stack[($sp + "2")] = ((stack[($sp - "2")] ~ " area: ") ~ stack[($sp - "1")]);
        stack[($sp + "1")] = #ba;
        jump #fa;
    }

    proc #ba {
        $sp = ($sp - "5");
        jump stack[($sp + "1")];
    }
}

func func.out {
    proc #fa {
        $sp = ($sp + "2");
        out stack[$sp];
        $sp = ($sp - "2");
        jump stack[($sp + "1")];
    }
}