main {
    proc #c6 {
        $sp = "-1";
        %10 = #69;
        jump %10;
    }
}

func main {
    proc #69 {
        %80 = "7";
        $sp = ($sp + %80);
        %cf = "111";
        %83 = "2";
        %c5 = ($sp + %83);
        stack[%c5] = %cf;
        %695 = "222";
        %58 = "3";
        %fe = ($sp + %58);
        stack[%fe] = %695;
        %de = "333";
        %06 = "4";
        %2a = ($sp + %06);
        stack[%2a] = %de;
        %5c = "1";
        %d6 = ($sp + %5c);
        %db = #ad;
        stack[%d6] = %db;
        %fe2 = #74;
        jump %fe2;
    }

    proc #ad {
        %70 = "123";
        %696 = "5";
        %e2 = ($sp - %696);
        %cb = "0";
        %c5c = (%e2 + %cb);
        stack[%c5c] = %70;
        %a8 = "456";
        %46 = "5";
        %0a = ($sp - %46);
        %52 = "1";
        %d8 = (%0a + %52);
        stack[%d8] = %a8;
        %c59 = "789";
        %cf4 = "5";
        %96 = ($sp - %cf4);
        %9f = "2";
        %98 = (%96 + %9f);
        stack[%98] = %c59;
        %24 = "5";
        %43 = ($sp - %24);
        %66 = "0";
        %4a = (%43 + %66);
        %e7 = stack[%4a];
        %34 = "2";
        %3c = ($sp + %34);
        stack[%3c] = %e7;
        %a2 = "5";
        %1c = ($sp - %a2);
        %78 = "1";
        %94 = (%1c + %78);
        %f1 = stack[%94];
        %6c = "3";
        %a1 = ($sp + %6c);
        stack[%a1] = %f1;
        %ff = "5";
        %54 = ($sp - %ff);
        %0c = "2";
        %5a = (%54 + %0c);
        %4f = stack[%5a];
        %2b = "4";
        %65 = ($sp + %2b);
        stack[%65] = %4f;
        %5e = "1";
        %67 = ($sp + %5e);
        %9c = #a9;
        stack[%67] = %9c;
        %30 = #74;
        jump %30;
    }

    proc #a9 {
        %45 = "5";
        %64 = ($sp - %45);
        %53 = "0";
        %a21 = (%64 + %53);
        %76 = stack[%a21];
        %ad2 = "2";
        %d3 = ($sp - %ad2);
        %cb6 = "0";
        %5ce = (%d3 + %cb6);
        stack[%5ce] = %76;
        %23 = "5";
        %9b = ($sp - %23);
        %17 = "1";
        %4b = (%9b + %17);
        %07 = stack[%4b];
        %c3 = "2";
        %18 = ($sp - %c3);
        %9b6 = "1";
        %40 = (%18 + %9b6);
        stack[%40] = %07;
        %6a = "5";
        %0e = ($sp - %6a);
        %5d = "2";
        %9d = (%0e + %5d);
        %5e2 = stack[%9d];
        %f0 = "2";
        %39 = ($sp - %f0);
        %466 = "2";
        %3cb = (%39 + %466);
        stack[%3cb] = %5e2;
        %56 = "2";
        %ba = ($sp - %56);
        %08 = "0";
        %7a = (%ba + %08);
        %75 = stack[%7a];
        %16 = "2";
        %68 = ($sp + %16);
        stack[%68] = %75;
        %9b8 = "2";
        %1f = ($sp - %9b8);
        %60 = "1";
        %fb = (%1f + %60);
        %f4 = stack[%fb];
        %ab = "3";
        %d4 = ($sp + %ab);
        stack[%d4] = %f4;
        %72 = "2";
        %560 = ($sp - %72);
        %f1d = "2";
        %71 = (%560 + %f1d);
        %f7 = stack[%71];
        %745 = "4";
        %c64 = ($sp + %745);
        stack[%c64] = %f7;
        %985 = "1";
        %ad0 = ($sp + %985);
        %f1d9 = #e4;
        stack[%ad0] = %f1d9;
        %15 = #74;
        jump %15;
    }

    proc #e4 {
        %e7f = "111";
        %dc = "2";
        %a3 = ($sp - %dc);
        %eb = "0";
        %99 = (%a3 + %eb);
        stack[%99] = %e7f;
        %303 = "222";
        %89 = "2";
        %51 = ($sp - %89);
        %891 = "1";
        %a2d = (%51 + %891);
        stack[%a2d] = %303;
        %5c7 = "333";
        %d7 = "2";
        %234 = ($sp - %d7);
        %a29 = "2";
        %ed = (%234 + %a29);
        stack[%ed] = %5c7;
        %be = "0";
        %92 = "5";
        %d4e = ($sp - %92);
        %681 = (%d4e + %be);
        %1ce = stack[%681];
        %747 = "2";
        %3f = ($sp - %747);
        %ed7 = "0";
        %d0 = (%3f + %ed7);
        stack[%d0] = %1ce;
        %a7 = "1";
        %34e = "2";
        %2e = ($sp - %34e);
        %37 = (%2e + %a7);
        %3b = stack[%37];
        %b8 = "2";
        %ea = ($sp - %b8);
        %90 = "1";
        %2ad = (%ea + %90);
        stack[%2ad] = %3b;
        %61 = "2";
        %ef = "5";
        %666 = ($sp - %ef);
        %a4 = (%666 + %61);
        %91 = stack[%a4];
        %37b = "50";
        %ae = (%91 + %37b);
        %10e = "2";
        %65c = ($sp - %10e);
        %7e = "2";
        %967 = (%65c + %7e);
        stack[%967] = %ae;
        %4f3 = "Refs:";
        %73 = "2";
        %b2 = ($sp + %73);
        stack[%b2] = %4f3;
        %3ff = "1";
        %702 = ($sp + %3ff);
        %f6 = #9b4;
        stack[%702] = %f6;
        %582 = #408;
        jump %582;
    }

    proc #9b4 {
        %241 = "5";
        %84 = ($sp - %241);
        %a4e = "2";
        %79 = ($sp + %a4e);
        stack[%79] = %84;
        %1b = "1";
        %f8 = ($sp + %1b);
        %92f = #e73;
        stack[%f8] = %92f;
        %678 = #a2f;
        jump %678;
    }

    proc #e73 {
        %74c = "2";
        %f1d3 = ($sp - %74c);
        %065 = "2";
        %4e = ($sp + %065);
        stack[%4e] = %f1d3;
        %29 = "1";
        %b0 = ($sp + %29);
        %4af = #ea3;
        stack[%b0] = %4af;
        %d2 = #a2f;
        jump %d2;
    }

    proc #ea3 {
        exit;
    }
}

func func.print_arr3 {
    proc #74 {
        %1e = "4";
        $sp = ($sp + %1e);
        %48 = "0";
        %ad1 = "2";
        %241d = ($sp - %ad1);
        %5f = (%241d + %48);
        %8f = stack[%5f];
        %752 = "2";
        %39e = ($sp + %752);
        stack[%39e] = %8f;
        %890 = "1";
        %fe1 = ($sp + %890);
        %f2 = #0e3;
        stack[%fe1] = %f2;
        %ade = #408;
        jump %ade;
    }

    proc #0e3 {
        %c2 = "1";
        %aee = "2";
        %f65 = ($sp - %aee);
        %e6 = (%f65 + %c2);
        %bb = stack[%e6];
        %944 = "2";
        %9d5 = ($sp + %944);
        stack[%9d5] = %bb;
        %5c6 = "1";
        %9d0 = ($sp + %5c6);
        %981 = #4d;
        stack[%9d0] = %981;
        %f49 = #408;
        jump %f49;
    }

    proc #4d {
        %b9 = "2";
        %04 = "2";
        %62 = ($sp - %04);
        %8b = (%62 + %b9);
        %2f = stack[%8b];
        %61b = "2";
        %990 = ($sp + %61b);
        stack[%990] = %2f;
        %9e = "1";
        %6c1 = ($sp + %9e);
        %05 = #45b;
        stack[%6c1] = %05;
        %bf = #408;
        jump %bf;
    }

    proc #45b {
        %df = "0";
        %1ed = "2";
        %44 = ($sp - %1ed);
        %ca = "0";
        %7c = (%44 + %ca);
        stack[%7c] = %df;
        %cb7 = "0";
        %da = "2";
        %529 = ($sp - %da);
        %0e9 = "1";
        %b4 = (%529 + %0e9);
        stack[%b4] = %cb7;
        %57 = "0";
        %5b = "2";
        %9a = ($sp - %5b);
        %08f = "2";
        %072 = (%9a + %08f);
        stack[%072] = %57;
        %9e1 = "4";
        $sp = ($sp - %9e1);
        %f4c = "1";
        %8d = ($sp + %f4c);
        %bb9 = stack[%8d];
        jump %bb9;
    }
}

func func.print_arr3_r {
    proc #a2f {
        %f2c = "2";
        $sp = ($sp + %f2c);
        %9f5 = "0";
        %be3 = "0";
        %482 = ($sp - %be3);
        %7451 = stack[%482];
        %9cb = (%7451 + %9f5);
        %53e = stack[%9cb];
        %81 = "2";
        %b7 = ($sp + %81);
        stack[%b7] = %53e;
        %d8b = "1";
        %646 = ($sp + %d8b);
        %86 = #5f2;
        stack[%646] = %86;
        %e62 = #408;
        jump %e62;
    }

    proc #5f2 {
        %4bb = "1";
        %2a5 = "0";
        %3b2 = ($sp - %2a5);
        %76b = stack[%3b2];
        %7c8 = (%76b + %4bb);
        %12 = stack[%7c8];
        %456 = "2";
        %ad17 = ($sp + %456);
        stack[%ad17] = %12;
        %993 = "1";
        %09 = ($sp + %993);
        %68a = #399;
        stack[%09] = %68a;
        %eda = #408;
        jump %eda;
    }

    proc #399 {
        %583 = "2";
        %76d = "0";
        %e0 = ($sp - %76d);
        %a5 = stack[%e0];
        %7e6 = (%a5 + %583);
        %d89 = stack[%7e6];
        %c38 = "2";
        %c32 = ($sp + %c38);
        stack[%c32] = %d89;
        %a74 = "1";
        %af = ($sp + %a74);
        %ff4 = #536;
        stack[%af] = %ff4;
        %758 = #408;
        jump %758;
    }

    proc #536 {
        %d6d = "0";
        %704 = "0";
        %7c3 = ($sp - %704);
        %b3 = "0";
        %cbb = (%7c3 + %b3);
        stack[%cbb] = %d6d;
        %92c = "2";
        $sp = ($sp - %92c);
        %d5 = "1";
        %667 = ($sp + %d5);
        %9c5 = stack[%667];
        jump %9c5;
    }
}

func func.out {
    proc #408 {
        %7e3 = "2";
        $sp = ($sp + %7e3);
        %b82 = "0";
        %36 = ($sp - %b82);
        %b5 = stack[%36];
        out %b5;
        %d3b = "2";
        $sp = ($sp - %d3b);
        %08d = "1";
        %0b = ($sp + %08d);
        %95 = stack[%0b];
        jump %95;
    }
}

func func.in {
    proc #dcf {
        %ad3 = "3";
        $sp = ($sp + %ad3);
        %6f = "0";
        %c23 = ($sp - %6f);
        in;
        stack[%c23] = $answer;
        %d77 = "0";
        %52a = ($sp - %d77);
        %f9 = stack[%52a];
        %347 = "1";
        %b84 = ($sp - %347);
        %d05 = stack[%b84];
        %b97 = "0";
        %5cc = (%d05 + %b97);
        stack[%5cc] = %f9;
        %a28 = "3";
        $sp = ($sp - %a28);
        %aa = "1";
        %ae6 = ($sp + %aa);
        %fa = stack[%ae6];
        jump %fa;
    }
}