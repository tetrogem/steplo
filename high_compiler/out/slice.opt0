main {
    proc #cf {
        $sp = "-1";
        %04 = #0e;
        jump %04;
    }
}

func main {
    proc #0e {
        %88 = "7";
        $sp = ($sp + %88);
        %c3 = "111";
        %70 = "2";
        %84 = ($sp + %70);
        stack[%84] = %c3;
        %e6 = "222";
        %0b = "3";
        %8e = ($sp + %0b);
        stack[%8e] = %e6;
        %1a = "333";
        %6f = "4";
        %c3e = ($sp + %6f);
        stack[%c3e] = %1a;
        %56 = "1";
        %1ab = ($sp + %56);
        %72 = #b3;
        stack[%1ab] = %72;
        %5d = #df;
        jump %5d;
    }

    proc #b3 {
        %ac = "123";
        %5d6 = "5";
        %22 = ($sp - %5d6);
        %6d = "0";
        %45 = (%22 + %6d);
        stack[%45] = %ac;
        %36 = "456";
        %51 = "5";
        %10 = ($sp - %51);
        %7b = "1";
        %d4 = (%10 + %7b);
        stack[%d4] = %36;
        %b9 = "789";
        %77 = "5";
        %8d = ($sp - %77);
        %de = "2";
        %89 = (%8d + %de);
        stack[%89] = %b9;
        %ab = "5";
        %ae = ($sp - %ab);
        %9d = "0";
        %773 = (%ae + %9d);
        %704 = stack[%773];
        %3f = "2";
        %1c = ($sp + %3f);
        stack[%1c] = %704;
        %21 = "5";
        %f4 = ($sp - %21);
        %34 = "1";
        %acd = (%f4 + %34);
        %f0 = stack[%acd];
        %09 = "3";
        %bb = ($sp + %09);
        stack[%bb] = %f0;
        %10d = "5";
        %93 = ($sp - %10d);
        %46 = "2";
        %0c = (%93 + %46);
        %e2 = stack[%0c];
        %59 = "4";
        %e5 = ($sp + %59);
        stack[%e5] = %e2;
        %eb = "1";
        %c0 = ($sp + %eb);
        %63 = #0d;
        stack[%c0] = %63;
        %b5 = #df;
        jump %b5;
    }

    proc #0d {
        %26 = "5";
        %acd3 = ($sp - %26);
        %08 = "0";
        %1d = (%acd3 + %08);
        %2c = stack[%1d];
        %223 = "2";
        %24 = ($sp - %223);
        %55 = "0";
        %35 = (%24 + %55);
        stack[%35] = %2c;
        %47 = "5";
        %fc = ($sp - %47);
        %43 = "1";
        %23 = (%fc + %43);
        %089 = stack[%23];
        %cb = "2";
        %3f9 = ($sp - %cb);
        %2a = "1";
        %b58 = (%3f9 + %2a);
        stack[%b58] = %089;
        %f1 = "5";
        %e3 = ($sp - %f1);
        %64 = "2";
        %fc5 = (%e3 + %64);
        %fb = stack[%fc5];
        %2e = "2";
        %dfc = ($sp - %2e);
        %a1 = "2";
        %f0d = (%dfc + %a1);
        stack[%f0d] = %fb;
        %f1f = "2";
        %4f = ($sp - %f1f);
        %45a = "0";
        %8c = (%4f + %45a);
        %39 = stack[%8c];
        %af = "2";
        %ec = ($sp + %af);
        stack[%ec] = %39;
        %222 = "2";
        %f7 = ($sp - %222);
        %30 = "1";
        %94 = (%f7 + %30);
        %6b = stack[%94];
        %458 = "3";
        %54 = ($sp + %458);
        stack[%54] = %6b;
        %a7 = "2";
        %20 = ($sp - %a7);
        %3c = "2";
        %cd = (%20 + %3c);
        %2c2 = stack[%cd];
        %aa = "4";
        %97 = ($sp + %aa);
        stack[%97] = %2c2;
        %eb0 = "1";
        %fd = ($sp + %eb0);
        %c7 = #83;
        stack[%fd] = %c7;
        %c9 = #df;
        jump %c9;
    }

    proc #83 {
        %ea = "111";
        %a3 = "2";
        %fe = ($sp - %a3);
        %bd = "0";
        %7d = (%fe + %bd);
        stack[%7d] = %ea;
        %35d = "222";
        %0d9 = "2";
        %07 = ($sp - %0d9);
        %4c = "1";
        %96 = (%07 + %4c);
        stack[%96] = %35d;
        %c8 = "333";
        %dd = "2";
        %18 = ($sp - %dd);
        %ae3 = "2";
        %cf4 = (%18 + %ae3);
        stack[%cf4] = %c8;
        %631 = "0";
        %51a = "5";
        %7a = ($sp - %51a);
        %b2 = (%7a + %631);
        %ddc = stack[%b2];
        %0d3 = "2";
        %4c9 = ($sp - %0d3);
        %6b7 = "0";
        %31 = (%4c9 + %6b7);
        stack[%31] = %ddc;
        %98 = "1";
        %88a = "2";
        %b7 = ($sp - %88a);
        %343 = (%b7 + %98);
        %d6 = stack[%343];
        %2d = "2";
        %68 = ($sp - %2d);
        %944 = "1";
        %cb7 = (%68 + %944);
        stack[%cb7] = %d6;
        %6f3 = "2";
        %7041 = "5";
        %d5 = ($sp - %7041);
        %7f = (%d5 + %6f3);
        %6bb = stack[%7f];
        %e0 = "50";
        %be = (%6bb + %e0);
        %3d = "2";
        %ee = ($sp - %3d);
        %e66 = "2";
        %5b = (%ee + %e66);
        stack[%5b] = %be;
        %93e = "Refs:";
        %1a2 = "2";
        %9f = ($sp + %1a2);
        stack[%9f] = %93e;
        %933 = "1";
        %0a = ($sp + %933);
        %14 = #40;
        stack[%0a] = %14;
        %774 = #ac5;
        jump %774;
    }

    proc #40 {
        %08c = "5";
        %d42 = ($sp - %08c);
        %934 = "2";
        %9e = ($sp + %934);
        stack[%9e] = %d42;
        %e9 = "1";
        %a6 = ($sp + %e9);
        %3fa = #92;
        stack[%a6] = %3fa;
        %5f = #d8;
        jump %5f;
    }

    proc #92 {
        %49 = "2";
        %4d = ($sp - %49);
        %bc = "2";
        %a5 = ($sp + %bc);
        stack[%a5] = %4d;
        %0bc = "1";
        %ad = ($sp + %0bc);
        %50 = #cb4;
        stack[%ad] = %50;
        %f3 = #d8;
        jump %f3;
    }

    proc #cb4 {
        exit;
    }
}

func func.print_arr3 {
    proc #df {
        %71 = "4";
        $sp = ($sp + %71);
        %f6 = "0";
        %67 = "2";
        %0bc6 = ($sp - %67);
        %71d = (%0bc6 + %f6);
        %e6e = stack[%71d];
        %4cb = "2";
        %65 = ($sp + %4cb);
        stack[%65] = %e6e;
        %4d7 = "1";
        %d0 = ($sp + %4d7);
        %4e = #6b72;
        stack[%d0] = %4e;
        %0b8 = #ac5;
        jump %0b8;
    }

    proc #6b72 {
        %d1 = "1";
        %23c = "2";
        %17 = ($sp - %23c);
        %a58 = (%17 + %d1);
        %1f = stack[%a58];
        %39e = "2";
        %19 = ($sp + %39e);
        stack[%19] = %1f;
        %b4 = "1";
        %205 = ($sp + %b4);
        %df7 = #11;
        stack[%205] = %df7;
        %81 = #ac5;
        jump %81;
    }

    proc #11 {
        %64c = "2";
        %74 = "2";
        %e9d = ($sp - %74);
        %748 = (%e9d + %64c);
        %978 = stack[%748];
        %25 = "2";
        %c4 = ($sp + %25);
        stack[%c4] = %978;
        %db = "1";
        %96c = ($sp + %db);
        %65d = #f9;
        stack[%96c] = %65d;
        %e4 = #ac5;
        jump %e4;
    }

    proc #f9 {
        %4c0 = "0";
        %366 = "2";
        %1ab4 = ($sp - %366);
        %b79 = "0";
        %58 = (%1ab4 + %b79);
        stack[%58] = %4c0;
        %703 = "0";
        %34d = "2";
        %3d4 = ($sp - %34d);
        %91 = "1";
        %b0 = (%3d4 + %91);
        stack[%b0] = %703;
        %bc7 = "0";
        %1e = "2";
        %92b = ($sp - %1e);
        %0dc = "2";
        %e4d = (%92b + %0dc);
        stack[%e4d] = %bc7;
        %e8 = "4";
        $sp = ($sp - %e8);
        %73 = "1";
        %897 = ($sp + %73);
        %1fb = stack[%897];
        jump %1fb;
    }
}

func func.print_arr3_ref {
    proc #d8 {
        %8a = "2";
        $sp = ($sp + %8a);
        %49e = "0";
        %d7 = ($sp - %49e);
        %244 = stack[%d7];
        %fcd = "0";
        %f41 = (%244 + %fcd);
        %5a = stack[%f41];
        %469 = "2";
        %bcb = ($sp + %469);
        stack[%bcb] = %5a;
        %97e = "1";
        %da = ($sp + %97e);
        %41 = #5a7;
        stack[%da] = %41;
        %4d5 = #ac5;
        jump %4d5;
    }

    proc #5a7 {
        %9e9 = "0";
        %5c = ($sp - %9e9);
        %01 = stack[%5c];
        %78 = "1";
        %018 = (%01 + %78);
        %1c4 = stack[%018];
        %d66 = "2";
        %34b = ($sp + %d66);
        stack[%34b] = %1c4;
        %461 = "1";
        %f90 = ($sp + %461);
        %108 = #c99;
        stack[%f90] = %108;
        %60 = #ac5;
        jump %60;
    }

    proc #c99 {
        %b4a = "0";
        %cd1 = ($sp - %b4a);
        %1d6 = stack[%cd1];
        %28 = "2";
        %27 = (%1d6 + %28);
        %f2 = stack[%27];
        %078 = "2";
        %38 = ($sp + %078);
        stack[%38] = %f2;
        %c00 = "1";
        %816 = ($sp + %c00);
        %23cb = #f7b;
        stack[%816] = %23cb;
        %e2b = #ac5;
        jump %e2b;
    }

    proc #f7b {
        %f5 = "0";
        %00 = "0";
        %42 = ($sp - %00);
        %44 = "0";
        %635 = (%42 + %44);
        stack[%635] = %f5;
        %2b = "2";
        $sp = ($sp - %2b);
        %b3c = "1";
        %f905 = ($sp + %b3c);
        %20f = stack[%f905];
        jump %20f;
    }
}

func func.out {
    proc #ac5 {
        %7e = "2";
        $sp = ($sp + %7e);
        %62 = "0";
        %0db = ($sp - %62);
        %b3e = stack[%0db];
        out %b3e;
        %341 = "2";
        $sp = ($sp - %341);
        %24b = "1";
        %3a = ($sp + %24b);
        %03 = stack[%3a];
        jump %03;
    }
}

func func.in {
    proc #970 {
        %5f5 = "3";
        $sp = ($sp + %5f5);
        %4dc = "0";
        %0e5 = ($sp - %4dc);
        in;
        stack[%0e5] = $answer;
        %937 = "0";
        %afc = ($sp - %937);
        %80 = stack[%afc];
        %c8e = "1";
        %564 = ($sp - %c8e);
        %2d0 = "0";
        %210 = (%564 + %2d0);
        %506 = stack[%210];
        stack[%506] = %80;
        %5e = "3";
        $sp = ($sp - %5e);
        %2f = "1";
        %bc4 = ($sp + %2f);
        %2b4 = stack[%bc4];
        jump %2b4;
    }
}