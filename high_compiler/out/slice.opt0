main {
    proc #67 {
        $sp = "-1";
        %38 = #66;
        jump %38;
    }
}

func main {
    proc #66 {
        %02 = "7";
        $sp = ($sp + %02);
        %c7 = "111";
        %32 = "2";
        %91 = ($sp + %32);
        stack[%91] = %c7;
        %e7 = "222";
        %1f = "3";
        %fd = ($sp + %1f);
        stack[%fd] = %e7;
        %42 = "333";
        %cb = "4";
        %b4 = ($sp + %cb);
        stack[%b4] = %42;
        %75 = "1";
        %95 = ($sp + %75);
        %c1 = #84;
        stack[%95] = %c1;
        %cc = #6d;
        jump %cc;
    }

    proc #84 {
        %47 = "123";
        %21 = "5";
        %41 = ($sp - %21);
        %c8 = "0";
        %30 = (%41 + %c8);
        stack[%30] = %47;
        %fa = "456";
        %86 = "5";
        %f3 = ($sp - %86);
        %f7 = "1";
        %36 = (%f3 + %f7);
        stack[%36] = %fa;
        %dc = "789";
        %475 = "5";
        %a9 = ($sp - %475);
        %7c = "2";
        %da = (%a9 + %7c);
        stack[%da] = %dc;
        %2f = "5";
        %9d = ($sp - %2f);
        %020 = "0";
        %e0 = (%9d + %020);
        %c4 = stack[%e0];
        %8d = "2";
        %68 = ($sp + %8d);
        stack[%68] = %c4;
        %7b = "5";
        %a2 = ($sp - %7b);
        %3a = "1";
        %f0 = (%a2 + %3a);
        %7e = stack[%f0];
        %97 = "3";
        %ef = ($sp + %97);
        stack[%ef] = %7e;
        %35 = "5";
        %d5 = ($sp - %35);
        %6c = "2";
        %0b = (%d5 + %6c);
        %f6 = stack[%0b];
        %81 = "4";
        %f61 = ($sp + %81);
        stack[%f61] = %f6;
        %b1 = "1";
        %34 = ($sp + %b1);
        %9a = #6f;
        stack[%34] = %9a;
        %8e = #6d;
        jump %8e;
    }

    proc #6f {
        %13 = "5";
        %c6 = ($sp - %13);
        %a20 = "0";
        %e9 = (%c6 + %a20);
        %89 = stack[%e9];
        %11 = "2";
        %f8 = ($sp - %11);
        %cba = "0";
        %ae = (%f8 + %cba);
        stack[%ae] = %89;
        %a95 = "5";
        %b0 = ($sp - %a95);
        %20 = "1";
        %e2 = (%b0 + %20);
        %fac = stack[%e2];
        %7c8 = "2";
        %74 = ($sp - %7c8);
        %b3 = "1";
        %6d9 = (%74 + %b3);
        stack[%6d9] = %fac;
        %2e = "5";
        %ab = ($sp - %2e);
        %77 = "2";
        %b3c = (%ab + %77);
        %a27 = stack[%b3c];
        %1b = "2";
        %62 = ($sp - %1b);
        %b5 = "2";
        %44 = (%62 + %b5);
        stack[%44] = %a27;
        %28 = "2";
        %2c = ($sp - %28);
        %37 = "0";
        %45 = (%2c + %37);
        %7a = stack[%45];
        %44f = "2";
        %00 = ($sp + %44f);
        stack[%00] = %7a;
        %383 = "2";
        %4f = ($sp - %383);
        %73 = "1";
        %1d = (%4f + %73);
        %8f = stack[%1d];
        %8c = "3";
        %c5 = ($sp + %8c);
        stack[%c5] = %8f;
        %1e = "2";
        %1ef = ($sp - %1e);
        %92 = "2";
        %04 = (%1ef + %92);
        %c8b = stack[%04];
        %ca = "4";
        %b9 = ($sp + %ca);
        stack[%b9] = %c8b;
        %87 = "1";
        %754 = ($sp + %87);
        %ec = #70;
        stack[%754] = %ec;
        %aba = #6d;
        jump %aba;
    }

    proc #70 {
        %4d = "111";
        %17 = "2";
        %5d = ($sp - %17);
        %9d5 = "0";
        %ccc = (%5d + %9d5);
        stack[%ccc] = %4d;
        %c73 = "222";
        %52 = "2";
        %27 = ($sp - %52);
        %72 = "1";
        %10 = (%27 + %72);
        stack[%10] = %c73;
        %5b = "333";
        %26 = "2";
        %61 = ($sp - %26);
        %447 = "2";
        %b8 = (%61 + %447);
        stack[%b8] = %5b;
        %30a = "0";
        %05 = "5";
        %69 = ($sp - %05);
        %1dd = (%69 + %30a);
        %e8 = stack[%1dd];
        %72d = "2";
        %1df = ($sp - %72d);
        %974 = "0";
        %fb = (%1df + %974);
        stack[%fb] = %e8;
        %03 = "1";
        %46 = "2";
        %de = ($sp - %46);
        %dce = (%de + %03);
        %01 = stack[%dce];
        %09 = "2";
        %6c5 = ($sp - %09);
        %8f7 = "1";
        %54 = (%6c5 + %8f7);
        stack[%54] = %01;
        %9f = "2";
        %57 = "5";
        %378 = ($sp - %57);
        %8b = (%378 + %9f);
        %40 = stack[%8b];
        %a7 = "50";
        %d9 = (%40 + %a7);
        %de7 = "2";
        %323 = ($sp - %de7);
        %72da = "2";
        %83 = (%323 + %72da);
        stack[%83] = %d9;
        %df = "Refs:";
        %59 = "2";
        %e5 = ($sp + %59);
        stack[%e5] = %df;
        %03e = "1";
        %465 = ($sp + %03e);
        %c52 = #f7c;
        stack[%465] = %c52;
        %52a = #520;
        jump %52a;
    }

    proc #f7c {
        %4d7 = "5";
        %0d = ($sp - %4d7);
        %12 = "2";
        %b3e = ($sp + %12);
        stack[%b3e] = %0d;
        %09b = "1";
        %2fe = ($sp + %09b);
        %58 = #bf;
        stack[%2fe] = %58;
        %fbc = #b52;
        jump %fbc;
    }

    proc #bf {
        %4b = "2";
        %1dc = ($sp - %4b);
        %416 = "2";
        %3f = ($sp + %416);
        stack[%3f] = %1dc;
        %b2 = "1";
        %268 = ($sp + %b2);
        %729 = #25;
        stack[%268] = %729;
        %88 = #b52;
        jump %88;
    }

    proc #25 {
        exit;
    }
}

func func.print_arr3 {
    proc #6d {
        %8b0 = "4";
        $sp = ($sp + %8b0);
        %79 = "0";
        %5b6 = "2";
        %86a = ($sp - %5b6);
        %50 = (%86a + %79);
        %465a = stack[%50];
        %da4 = "2";
        %06 = ($sp + %da4);
        stack[%06] = %465a;
        %883 = "1";
        %99 = ($sp + %883);
        %82 = #e81;
        stack[%99] = %82;
        %be = #520;
        jump %be;
    }

    proc #e81 {
        %d9f = "1";
        %a3 = "2";
        %6a = ($sp - %a3);
        %0e = (%6a + %d9f);
        %d4 = stack[%0e];
        %df8 = "2";
        %1dcc = ($sp + %df8);
        stack[%1dcc] = %d4;
        %115 = "1";
        %381 = ($sp + %115);
        %39 = #b2b;
        stack[%381] = %39;
        %9b = #520;
        jump %9b;
    }

    proc #b2b {
        %79c = "2";
        %72f = "2";
        %3d = ($sp - %72f);
        %c9 = (%3d + %79c);
        %2e6 = stack[%c9];
        %9b7 = "2";
        %881 = ($sp + %9b7);
        stack[%881] = %2e6;
        %f84 = "1";
        %f6f = ($sp + %f84);
        %c4c = #5d0;
        stack[%f6f] = %c4c;
        %f81 = #520;
        jump %f81;
    }

    proc #5d0 {
        %cb7 = "0";
        %fb3 = "2";
        %85 = ($sp - %fb3);
        %507 = "0";
        %bb = (%85 + %507);
        stack[%bb] = %cb7;
        %59c = "0";
        %8da = "2";
        %fdc = ($sp - %8da);
        %ad = "1";
        %0bf = (%fdc + %ad);
        stack[%0bf] = %59c;
        %00c = "0";
        %2eb = "2";
        %51 = ($sp - %2eb);
        %dd = "2";
        %51a = (%51 + %dd);
        stack[%51a] = %00c;
        %64 = "4";
        $sp = ($sp - %64);
        %1f8 = "1";
        %95d = ($sp + %1f8);
        %ee = stack[%95d];
        jump %ee;
    }
}

func func.print_arr3_r {
    proc #b52 {
        %ad6 = "2";
        $sp = ($sp + %ad6);
        %1d1 = "0";
        %ded = "0";
        %f5 = ($sp - %ded);
        %2c1 = stack[%f5];
        %eb = (%2c1 + %1d1);
        %a1 = stack[%eb];
        %3db = "2";
        %592 = ($sp + %3db);
        stack[%592] = %a1;
        %5b9 = "1";
        %e4 = ($sp + %5b9);
        %09a = #5a;
        stack[%e4] = %09a;
        %dfe = #520;
        jump %dfe;
    }

    proc #5a {
        %046 = "1";
        %01f = "0";
        %1f80 = ($sp - %01f);
        %462 = stack[%1f80];
        %41f = (%462 + %046);
        %22 = stack[%41f];
        %ee2 = "2";
        %f2 = ($sp + %ee2);
        stack[%f2] = %22;
        %2eb9 = "1";
        %329 = ($sp + %2eb9);
        %045 = #f0a;
        stack[%329] = %045;
        %9d8 = #520;
        jump %9d8;
    }

    proc #f0a {
        %d1 = "2";
        %2f8 = "0";
        %1b3 = ($sp - %2f8);
        %5f = stack[%1b3];
        %b7 = (%5f + %d1);
        %79b = stack[%b7];
        %444 = "2";
        %280 = ($sp + %444);
        stack[%280] = %79b;
        %594 = "1";
        %b14 = ($sp + %594);
        %96 = #f4;
        stack[%b14] = %96;
        %8a = #520;
        jump %8a;
    }

    proc #f4 {
        %899 = "0";
        %858 = "0";
        %c9c = ($sp - %858);
        %2d = "0";
        %e84 = (%c9c + %2d);
        stack[%e84] = %899;
        %1c = "2";
        $sp = ($sp - %1c);
        %caf = "1";
        %420 = ($sp + %caf);
        %11d = stack[%420];
        jump %11d;
    }
}

func func.out {
    proc #520 {
        %f78 = "2";
        $sp = ($sp + %f78);
        %f21 = "0";
        %43 = ($sp - %f21);
        %9c = stack[%43];
        out %9c;
        %472 = "2";
        $sp = ($sp - %472);
        %54c = "1";
        %b23 = ($sp + %54c);
        %c52b = stack[%b23];
        jump %c52b;
    }
}

func func.in {
    proc #24 {
        %5bb = "3";
        $sp = ($sp + %5bb);
        %59b = "0";
        %14 = ($sp - %59b);
        in;
        stack[%14] = $answer;
        %511 = "0";
        %9c3 = ($sp - %511);
        %c92 = stack[%9c3];
        %64c = "1";
        %09c = ($sp - %64c);
        %8b6 = stack[%09c];
        %d8 = "0";
        %29 = (%8b6 + %d8);
        stack[%29] = %c92;
        %97d = "3";
        $sp = ($sp - %97d);
        %5af = "1";
        %854 = ($sp + %5af);
        %98 = stack[%854];
        jump %98;
    }
}