main {
    proc #67 {
        $sp = "-1";
        jump #66;
    }
}

func main {
    proc #66 {
        $sp = ($sp + "7");
        stack[($sp + "2")] = "111";
        stack[($sp + "3")] = "222";
        stack[($sp + "4")] = "333";
        stack[($sp + "1")] = #84;
        jump #6d;
    }

    proc #84 {
        stack[($sp - "5")] = "123";
        stack[(($sp - "5") + "1")] = "456";
        stack[(($sp - "5") + "2")] = "789";
        stack[($sp + "2")] = stack[($sp - "5")];
        stack[($sp + "3")] = stack[(($sp - "5") + "1")];
        stack[($sp + "4")] = stack[(($sp - "5") + "2")];
        stack[($sp + "1")] = #6f;
        jump #6d;
    }

    proc #6f {
        stack[($sp - "2")] = stack[($sp - "5")];
        stack[(($sp - "2") + "1")] = stack[(($sp - "5") + "1")];
        stack[(($sp - "2") + "2")] = stack[(($sp - "5") + "2")];
        stack[($sp + "2")] = stack[($sp - "2")];
        stack[($sp + "3")] = stack[(($sp - "2") + "1")];
        stack[($sp + "4")] = stack[(($sp - "2") + "2")];
        stack[($sp + "1")] = #70;
        jump #6d;
    }

    proc #70 {
        stack[($sp - "2")] = "111";
        stack[(($sp - "2") + "1")] = "222";
        stack[(($sp - "2") + "2")] = "333";
        stack[($sp - "2")] = stack[($sp - "5")];
        stack[(($sp - "2") + "1")] = stack[(($sp - "2") + "1")];
        stack[(($sp - "2") + "2")] = (stack[(($sp - "5") + "2")] + "50");
        stack[($sp + "2")] = "Refs:";
        stack[($sp + "1")] = #f7;
        jump #52;
    }

    proc #f7 {
        stack[($sp + "2")] = ($sp - "5");
        stack[($sp + "1")] = #bf;
        jump #b5;
    }

    proc #bf {
        stack[($sp + "2")] = ($sp - "2");
        stack[($sp + "1")] = #25;
        jump #b5;
    }

    proc #25 {
        exit;
    }
}

func func.print_arr3 {
    proc #6d {
        $sp = ($sp + "4");
        stack[($sp + "2")] = stack[($sp - "2")];
        stack[($sp + "1")] = #e8;
        jump #52;
    }

    proc #e8 {
        stack[($sp + "2")] = stack[(($sp - "2") + "1")];
        stack[($sp + "1")] = #b2;
        jump #52;
    }

    proc #b2 {
        stack[($sp + "2")] = stack[(($sp - "2") + "2")];
        stack[($sp + "1")] = #5d;
        jump #52;
    }

    proc #5d {
        stack[($sp - "2")] = "0";
        stack[(($sp - "2") + "1")] = "0";
        stack[(($sp - "2") + "2")] = "0";
        $sp = ($sp - "4");
        jump stack[($sp + "1")];
    }
}

func func.print_arr3_r {
    proc #b5 {
        $sp = ($sp + "2");
        stack[($sp + "2")] = stack[stack[$sp]];
        stack[($sp + "1")] = #5a;
        jump #52;
    }

    proc #5a {
        stack[($sp + "2")] = stack[(stack[$sp] + "1")];
        stack[($sp + "1")] = #f0;
        jump #52;
    }

    proc #f0 {
        stack[($sp + "2")] = stack[(stack[$sp] + "2")];
        stack[($sp + "1")] = #f4;
        jump #52;
    }

    proc #f4 {
        stack[$sp] = "0";
        $sp = ($sp - "2");
        jump stack[($sp + "1")];
    }
}

func func.out {
    proc #52 {
        $sp = ($sp + "2");
        out stack[$sp];
        $sp = ($sp - "2");
        jump stack[($sp + "1")];
    }
}