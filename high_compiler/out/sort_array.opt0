main {
    proc #5f {
        $sp = "-1";
        %05 = #24;
        jump %05;
    }
}

func main {
    proc #24 {
        %ec = "103";
        $sp = ($sp + %ec);
        %d9 = "0";
        %20 = "101";
        %a0 = ($sp - %20);
        %f8 = "0";
        %2f = (%a0 + %f8);
        stack[%2f] = %d9;
        %76 = "10";
        %0c = "101";
        %00 = ($sp - %0c);
        %64 = "1";
        %b3 = (%00 + %64);
        stack[%b3] = %76;
        %93 = "a";
        %247 = "101";
        %ea = ($sp - %247);
        %db = "2";
        %d1 = (%ea + %db);
        stack[%d1] = %93;
        %18 = "-5";
        %70 = "101";
        %72 = ($sp - %70);
        %9f = "3";
        %2f3 = (%72 + %9f);
        stack[%2f3] = %18;
        %29 = "283";
        %a2 = "101";
        %f4 = ($sp - %a2);
        %df = "4";
        %a3 = (%f4 + %df);
        stack[%a3] = %29;
        %4e = "2";
        %91 = "101";
        %3a = ($sp - %91);
        %4a = "5";
        %dfa = (%3a + %4a);
        stack[%dfa] = %4e;
        %23 = "6";
        %fb = "101";
        %81 = ($sp - %fb);
        %38 = "6";
        %c3 = (%81 + %38);
        stack[%c3] = %23;
        %055 = "4";
        %ae = "101";
        %19 = ($sp - %ae);
        %ac = "7";
        %d2 = (%19 + %ac);
        stack[%d2] = %055;
        %14 = "what";
        %acd = "101";
        %fa = ($sp - %acd);
        %89 = "8";
        %65 = (%fa + %89);
        stack[%65] = %14;
        %f0 = "-1";
        %fc = "101";
        %ea2 = ($sp - %fc);
        %9b = "9";
        %c39 = (%ea2 + %9b);
        stack[%c39] = %f0;
        %72a = "20";
        %c7 = "101";
        %28 = ($sp - %c7);
        %2d = "10";
        %67 = (%28 + %2d);
        stack[%67] = %72a;
        %cc = "7";
        %1f = "101";
        %6d = ($sp - %1f);
        %88 = "11";
        %bc = (%6d + %88);
        stack[%bc] = %cc;
        %40 = "8";
        %45 = "101";
        %14a = ($sp - %45);
        %1e = "12";
        %e6 = (%14a + %1e);
        stack[%e6] = %40;
        %55 = "2";
        %1f0 = "101";
        %a9 = ($sp - %1f0);
        %7e = "13";
        %fa6 = (%a9 + %7e);
        stack[%fa6] = %55;
        %fe = "2";
        %4b = ($sp - %fe);
        %26 = "2";
        %f0f = ($sp + %26);
        stack[%f0f] = %4b;
        %83 = "101";
        %e6d = ($sp - %83);
        %c8 = "3";
        %d4 = ($sp + %c8);
        stack[%d4] = %e6d;
        %a9b = "99";
        %834 = "4";
        %0b = ($sp + %834);
        stack[%0b] = %a9b;
        %7b = "14";
        %3d = "5";
        %f6 = ($sp + %3d);
        stack[%f6] = %7b;
        %07 = "1";
        %faa = ($sp + %07);
        %8f = #d8;
        stack[%faa] = %8f;
        %be = #385;
        jump %be;
    }

    proc #d8 {
        %185 = "2";
        %725 = ($sp - %185);
        %ae3 = "2";
        %25 = ($sp + %ae3);
        stack[%25] = %725;
        %a9a = "1";
        %202 = ($sp + %a9a);
        %fc6 = #17;
        stack[%202] = %fc6;
        %070 = #5e;
        jump %070;
    }

    proc #17 {
        %44 = "2";
        %197 = ($sp - %44);
        %9d = "2";
        %ee = ($sp + %9d);
        stack[%ee] = %197;
        %88a = "1";
        %7f = ($sp + %88a);
        %8c = #4af;
        stack[%7f] = %8c;
        %89c = #35;
        jump %89c;
    }

    proc #4af {
        %dd = "2";
        %176 = ($sp - %dd);
        %ce = "2";
        %b7 = ($sp + %ce);
        stack[%b7] = %176;
        %94 = "1";
        %076 = ($sp + %94);
        %80 = #283;
        stack[%076] = %80;
        %b1 = #5e;
        jump %b1;
    }

    proc #283 {
        %0f = "2";
        %ef = ($sp - %0f);
        %231 = "2";
        %66 = ($sp + %231);
        stack[%66] = %ef;
        %5c = "12.5";
        %5d = "3";
        %4f = ($sp + %5d);
        stack[%4f] = %5c;
        %ab = "1";
        %23e = ($sp + %ab);
        %c33 = #ee3;
        stack[%23e] = %c33;
        %8e = #aea;
        jump %8e;
    }

    proc #ee3 {
        %dda = "2";
        %fd = ($sp - %dda);
        %d8a = "2";
        %67d = ($sp + %d8a);
        stack[%67d] = %fd;
        %7ea = "1";
        %a1 = ($sp + %7ea);
        %3b = #3f;
        stack[%a1] = %3b;
        %813 = #35;
        jump %813;
    }

    proc #3f {
        %553 = "2";
        %fe1 = ($sp - %553);
        %b5 = "2";
        %814 = ($sp + %b5);
        stack[%814] = %fe1;
        %a1e = "1";
        %f62 = ($sp + %a1e);
        %31 = #655;
        stack[%f62] = %31;
        %eab = #5e;
        jump %eab;
    }

    proc #655 {
        exit;
    }
}

func func.Vec_new {
    proc #385 {
        %09 = "5";
        $sp = ($sp + %09);
        %ff = "2";
        %27 = ($sp - %ff);
        %57 = stack[%27];
        %efc = "3";
        %27e = ($sp - %efc);
        %5e6 = stack[%27e];
        %4c = "0";
        %02 = (%5e6 + %4c);
        stack[%02] = %57;
        %5b = "1";
        %31c = ($sp - %5b);
        %a5 = stack[%31c];
        %1ea = "3";
        %200 = ($sp - %1ea);
        %eab3 = stack[%200];
        %f3 = "1";
        %b8 = (%eab3 + %f3);
        stack[%b8] = %a5;
        %90 = "0";
        %4ce = ($sp - %90);
        %295 = stack[%4ce];
        %5fd = "3";
        %9b5 = ($sp - %5fd);
        %d4e = stack[%9b5];
        %d9b = "2";
        %88a1 = (%d4e + %d9b);
        stack[%88a1] = %295;
        %c2 = "5";
        $sp = ($sp - %c2);
        %0c2 = "1";
        %00a = ($sp + %0c2);
        %5e7 = stack[%00a];
        jump %5e7;
    }
}

func func.Vec_entry {
    proc #87 {
        %abb = "4";
        $sp = ($sp + %abb);
        %c76 = "0";
        %24e = ($sp - %c76);
        %83a = stack[%24e];
        %bb = "0";
        %f43 = "1";
        %ad = ($sp - %f43);
        %33 = stack[%ad];
        %c5 = (%33 + %bb);
        %8ce = stack[%c5];
        %007 = (%8ce + %83a);
        %80e = "2";
        %7e3 = ($sp - %80e);
        %196 = stack[%7e3];
        %ed = "0";
        %6550 = (%196 + %ed);
        stack[%6550] = %007;
        %c0 = "4";
        $sp = ($sp - %c0);
        %d3 = "1";
        %48 = ($sp + %d3);
        %485 = stack[%48];
        jump %485;
    }
}

func func.Vec_cap {
    proc #e68 {
        %2b = "3";
        $sp = ($sp + %2b);
        %8fe = "1";
        %2e = "0";
        %1d = ($sp - %2e);
        %d1e = stack[%1d];
        %8b = (%d1e + %8fe);
        %92 = stack[%8b];
        %9f4 = "1";
        %d3e = ($sp - %9f4);
        %89e = stack[%d3e];
        %53 = "0";
        %60 = (%89e + %53);
        stack[%60] = %92;
        %720 = "3";
        $sp = ($sp - %720);
        %56 = "1";
        %202a = ($sp + %56);
        %63 = stack[%202a];
        jump %63;
    }
}

func func.Vec_len_r {
    proc #5cc {
        %679 = "3";
        $sp = ($sp + %679);
        %d41 = "2";
        %dc = "0";
        %5a = ($sp - %dc);
        %768 = stack[%5a];
        %96 = (%768 + %d41);
        %b78 = "1";
        %59 = ($sp - %b78);
        %5ff = stack[%59];
        %008 = "0";
        %d5 = (%5ff + %008);
        stack[%d5] = %96;
        %ccd = "3";
        $sp = ($sp - %ccd);
        %0e = "1";
        %c85 = ($sp + %0e);
        %e5 = stack[%c85];
        jump %e5;
    }
}

func func.Vec_len {
    proc #9d0 {
        %d0 = "4";
        $sp = ($sp + %d0);
        %01 = "0";
        %9b1 = ($sp - %01);
        %453 = "2";
        %52 = ($sp + %453);
        stack[%52] = %9b1;
        %55f = "1";
        %54 = ($sp - %55f);
        %c4 = stack[%54];
        %c9 = "3";
        %4be = ($sp + %c9);
        stack[%4be] = %c4;
        %33d = "1";
        %dd0 = ($sp + %33d);
        %ace = #458;
        stack[%dd0] = %ace;
        %50 = #5cc;
        jump %50;
    }

    proc #458 {
        %b0 = "0";
        %af = ($sp - %b0);
        %1fa = stack[%af];
        %03 = stack[%1fa];
        %3db = "2";
        %963 = ($sp - %3db);
        %6f = stack[%963];
        %570 = "0";
        %896 = (%6f + %570);
        stack[%896] = %03;
        %6c = "4";
        $sp = ($sp - %6c);
        %a28 = "1";
        %c1 = ($sp + %a28);
        %a7 = stack[%c1];
        jump %a7;
    }
}

func func.Vec_push {
    proc #aea {
        %8e1 = "7";
        $sp = ($sp + %8e1);
        %c9a = "3";
        %d40 = ($sp - %c9a);
        %7fd = "2";
        %de = ($sp + %7fd);
        stack[%de] = %d40;
        %2ec = "5";
        %0d = ($sp - %2ec);
        %6c6 = stack[%0d];
        %c9f = "3";
        %de6 = ($sp + %c9f);
        stack[%de6] = %6c6;
        %95 = "1";
        %4ea = ($sp + %95);
        %959 = #cf;
        stack[%4ea] = %959;
        %38a = #e68;
        jump %38a;
    }

    proc #cf {
        %d08 = "2";
        %b6 = ($sp - %d08);
        %7d = "2";
        %cf5 = ($sp + %7d);
        stack[%cf5] = %b6;
        %67a = "5";
        %0de = ($sp - %67a);
        %7a = stack[%0de];
        %12 = "3";
        %55a = ($sp + %12);
        stack[%55a] = %7a;
        %0d1 = "1";
        %def = ($sp + %0d1);
        %bc6 = #20a;
        stack[%def] = %bc6;
        %bd = #9d0;
        jump %bd;
    }

    proc #20a {
        %d20 = "2";
        %948 = ($sp - %d20);
        %d2c = stack[%948];
        %0bc = "3";
        %e8 = ($sp - %0bc);
        %06 = stack[%e8];
        %704 = (%d2c < %06);
        %99 = #80b;
        %1b = #5bc;
        if %704 then jump %99 else jump %1b;
    }

    proc #5bc {
        %ff8 = "7";
        $sp = ($sp - %ff8);
        %cd = "1";
        %606 = ($sp + %cd);
        %874 = stack[%606];
        jump %874;
    }

    proc #80b {
        %386 = "1";
        %aea0 = ($sp - %386);
        %36 = "2";
        %c45 = ($sp + %36);
        stack[%c45] = %aea0;
        %c7f = "5";
        %5e5 = ($sp - %c7f);
        %edb = stack[%5e5];
        %bf = "3";
        %0a = ($sp + %bf);
        stack[%0a] = %edb;
        %bb3 = "2";
        %00a3 = ($sp - %bb3);
        %275 = stack[%00a3];
        %10 = "4";
        %d56 = ($sp + %10);
        stack[%d56] = %275;
        %b03 = "1";
        %b4 = ($sp + %b03);
        %ce9 = #db4;
        stack[%b4] = %ce9;
        %ec8 = #87;
        jump %ec8;
    }

    proc #db4 {
        %09d = "4";
        %67d6 = ($sp - %09d);
        %09a = stack[%67d6];
        %98 = "1";
        %bc7 = ($sp - %98);
        %09b = stack[%bc7];
        %bde = "0";
        %51 = (%09b + %bde);
        stack[%51] = %09a;
        %23e3 = "0";
        %f2 = ($sp - %23e3);
        %65f = "2";
        %9c = ($sp + %65f);
        stack[%9c] = %f2;
        %d5e = "5";
        %9a = ($sp - %d5e);
        %87b = stack[%9a];
        %aa = "3";
        %30 = ($sp + %aa);
        stack[%30] = %87b;
        %49 = "1";
        %d4a = ($sp + %49);
        %86 = #900;
        stack[%d4a] = %86;
        %678 = #5cc;
        jump %678;
    }

    proc #900 {
        %280 = "2";
        %84 = ($sp - %280);
        %d42 = stack[%84];
        %307 = "1";
        %32 = (%d42 + %307);
        %e3 = "0";
        %245 = ($sp - %e3);
        %642 = stack[%245];
        %65d = "0";
        %2b6 = (%642 + %65d);
        stack[%2b6] = %32;
        %5c4 = #5bc;
        jump %5c4;
    }
}

func func.Vec_print {
    proc #5e {
        %da = "6";
        $sp = ($sp + %da);
        %141 = "0";
        %c90 = "3";
        %7fc = ($sp - %c90);
        %53c = "0";
        %21 = (%7fc + %53c);
        stack[%21] = %141;
        %020 = "Vec (";
        %031 = "0";
        %83d = ($sp - %031);
        %12a = "0";
        %102 = (%83d + %12a);
        stack[%102] = %020;
        %d98 = "2";
        %3df = ($sp - %d98);
        %7e7 = "2";
        %d7 = ($sp + %7e7);
        stack[%d7] = %3df;
        %987 = "4";
        %c99 = ($sp - %987);
        %d32 = stack[%c99];
        %e2 = "3";
        %ca = ($sp + %e2);
        stack[%ca] = %d32;
        %fe3 = "1";
        %b30 = ($sp + %fe3);
        %303 = #edc;
        stack[%b30] = %303;
        %5c2 = #9d0;
        jump %5c2;
    }

    proc #edc {
        %a0c = "0";
        %ac1 = ($sp - %a0c);
        %15 = stack[%ac1];
        %77 = "2";
        %19d = ($sp - %77);
        %404 = stack[%19d];
        %edc6 = (%15 ~ %404);
        %73 = "0";
        %b1b = ($sp - %73);
        %604 = "0";
        %9c2 = (%b1b + %604);
        stack[%9c2] = %edc6;
        %06a = "0";
        %947 = ($sp - %06a);
        %0bb = stack[%947];
        %86f = ") ";
        %8d = (%0bb ~ %86f);
        %ef0 = "0";
        %8ff = ($sp - %ef0);
        %eb = "0";
        %48b = (%8ff + %eb);
        stack[%48b] = %8d;
        %67c = #e4;
        jump %67c;
    }

    proc #16 {
        %78 = "0";
        %7040 = ($sp - %78);
        %8b0 = stack[%7040];
        %530 = "2";
        %c92 = ($sp + %530);
        stack[%c92] = %8b0;
        %1c = "1";
        %c71 = ($sp + %1c);
        %a4 = #909;
        stack[%c71] = %a4;
        %a9ac = #ae32;
        jump %a9ac;
    }

    proc #909 {
        %efb = "6";
        $sp = ($sp - %efb);
        %03f = "1";
        %4d = ($sp + %03f);
        %7c = stack[%4d];
        jump %7c;
    }

    proc #440 {
        %69 = "3";
        %bc0 = ($sp - %69);
        %ee1 = stack[%bc0];
        %484 = "0";
        %249 = (!(%ee1 == %484));
        %0da = #861;
        %6e = #981;
        if %249 then jump %0da else jump %6e;
    }

    proc #981 {
        %cb = "1";
        %37 = ($sp - %cb);
        %923 = "2";
        %05b = ($sp + %923);
        stack[%05b] = %37;
        %c13 = "4";
        %b0f = ($sp - %c13);
        %08 = stack[%b0f];
        %2d4 = "3";
        %496 = ($sp + %2d4);
        stack[%496] = %08;
        %5ae = "3";
        %a9ab = ($sp - %5ae);
        %649 = stack[%a9ab];
        %934 = "4";
        %107 = ($sp + %934);
        stack[%107] = %649;
        %3be = "1";
        %301 = ($sp + %3be);
        %7d7 = #f7;
        stack[%301] = %7d7;
        %957 = #87;
        jump %957;
    }

    proc #f7 {
        %29a = "0";
        %1e2 = ($sp - %29a);
        %e0 = stack[%1e2];
        %f02 = "1";
        %8b4 = ($sp - %f02);
        %5b0 = stack[%8b4];
        %82 = stack[%5b0];
        %cfb = (%e0 ~ %82);
        %8a = "0";
        %9f6 = ($sp - %8a);
        %ede = "0";
        %d28 = (%9f6 + %ede);
        stack[%d28] = %cfb;
        %8e5 = "3";
        %246 = ($sp - %8e5);
        %3c = stack[%246];
        %96e = "1";
        %2b5 = (%3c + %96e);
        %c0a = "3";
        %ca7 = ($sp - %c0a);
        %3fc = "0";
        %8e7 = (%ca7 + %3fc);
        stack[%8e7] = %2b5;
        %982 = #e4;
        jump %982;
    }

    proc #861 {
        %be0 = "0";
        %4ab = ($sp - %be0);
        %920 = stack[%4ab];
        %669 = ", ";
        %e5f = (%920 ~ %669);
        %1a = "0";
        %15a = ($sp - %1a);
        %d3e4 = "0";
        %9e = (%15a + %d3e4);
        stack[%9e] = %e5f;
        %7b9 = #981;
        jump %7b9;
    }

    proc #e4 {
        %a3f = "3";
        %d3a = ($sp - %a3f);
        %823 = stack[%d3a];
        %1075 = "2";
        %8d1 = ($sp - %1075);
        %ce8 = stack[%8d1];
        %b6f = (%823 < %ce8);
        %39 = #440;
        %540 = #16;
        if %b6f then jump %39 else jump %540;
    }
}

func func.Vec_sort {
    proc #35 {
        %88f = "9";
        $sp = ($sp + %88f);
        %f0f9 = "0";
        %5fc = "6";
        %b9 = ($sp - %5fc);
        %871 = "0";
        %9b6 = (%b9 + %871);
        stack[%9b6] = %f0f9;
        %a6 = "4";
        %11 = ($sp - %a6);
        %41 = "2";
        %6b = ($sp + %41);
        stack[%6b] = %11;
        %2e0 = "7";
        %085 = ($sp - %2e0);
        %af8 = stack[%085];
        %66b = "3";
        %1b8 = ($sp + %66b);
        stack[%1b8] = %af8;
        %b66 = "1";
        %d3e8 = ($sp + %b66);
        %f88 = #268;
        stack[%d3e8] = %f88;
        %57d = #9d0;
        jump %57d;
    }

    proc #268 {
        %b01 = #afd;
        jump %b01;
    }

    proc #a7d {
        %1b3 = "9";
        $sp = ($sp - %1b3);
        %66d = "1";
        %0d7 = ($sp + %66d);
        %58 = stack[%0d7];
        jump %58;
    }

    proc #5d8 {
        %e1 = "6";
        %6e6 = ($sp - %e1);
        %d91 = stack[%6e6];
        %93a = "5";
        %fee = ($sp - %93a);
        %1ff = "0";
        %67d8 = (%fee + %1ff);
        stack[%67d8] = %d91;
        %a8 = #66c;
        jump %a8;
    }

    proc #f21 {
        %000 = "6";
        %721 = ($sp - %000);
        %38b = stack[%721];
        %c3d = "1";
        %68 = (%38b + %c3d);
        %86f5 = "6";
        %df9 = ($sp - %86f5);
        %27b = "0";
        %c8e = (%df9 + %27b);
        stack[%c8e] = %68;
        %ba = #afd;
        jump %ba;
    }

    proc #af1 {
        %a36 = "3";
        %3d7 = ($sp - %a36);
        %6fe = "2";
        %1ac = ($sp + %6fe);
        stack[%1ac] = %3d7;
        %e16 = "7";
        %3ba = ($sp - %e16);
        %e38 = stack[%3ba];
        %64d = "3";
        %497 = ($sp + %64d);
        stack[%497] = %e38;
        %c8b = "6";
        %e9 = ($sp - %c8b);
        %8b9 = stack[%e9];
        %644 = "4";
        %8ba = ($sp + %644);
        stack[%8ba] = %8b9;
        %152 = "1";
        %22 = ($sp + %152);
        %1d2 = #53c7;
        stack[%22] = %1d2;
        %e13 = #87;
        jump %e13;
    }

    proc #53c7 {
        %f45 = "2";
        %9007 = ($sp - %f45);
        %5e2 = "2";
        %068 = ($sp + %5e2);
        stack[%068] = %9007;
        %4dd = "7";
        %0b9 = ($sp - %4dd);
        %3b5 = stack[%0b9];
        %4e8 = "3";
        %3ce = ($sp + %4e8);
        stack[%3ce] = %3b5;
        %ff3 = "5";
        %910 = ($sp - %ff3);
        %039 = stack[%910];
        %7a1 = "4";
        %eec = ($sp + %7a1);
        stack[%eec] = %039;
        %635 = "1";
        %dbd = ($sp + %635);
        %2a = #85;
        stack[%dbd] = %2a;
        %3db2 = #87;
        jump %3db2;
    }

    proc #85 {
        %4aa = "3";
        %9d6 = ($sp - %4aa);
        %99d = stack[%9d6];
        %911 = stack[%99d];
        %7c4 = "1";
        %288 = ($sp - %7c4);
        %b41 = "0";
        %13 = (%288 + %b41);
        stack[%13] = %911;
        %88d = "2";
        %d1d = ($sp - %88d);
        %d6 = stack[%d1d];
        %d09 = stack[%d6];
        %234 = "0";
        %38f = ($sp - %234);
        %f2d = "0";
        %86a = (%38f + %f2d);
        stack[%86a] = %d09;
        %156 = "0";
        %89c9 = ($sp - %156);
        %70e = stack[%89c9];
        %314 = "1";
        %03d = ($sp - %314);
        %f6b = stack[%03d];
        %996 = (%70e < %f6b);
        %c70 = #fbe;
        %4f2 = #7d4;
        if %996 then jump %c70 else jump %4f2;
    }

    proc #7d4 {
        %1c8 = "5";
        %195 = ($sp - %1c8);
        %6c63 = stack[%195];
        %97 = "1";
        %b61 = (%6c63 + %97);
        %b35 = "5";
        %442 = ($sp - %b35);
        %3f5 = "0";
        %e36 = (%442 + %3f5);
        stack[%e36] = %b61;
        %5e3 = #66c;
        jump %5e3;
    }

    proc #fbe {
        %d5c = "3";
        %bfd = ($sp - %d5c);
        %95c = stack[%bfd];
        %f78 = "2";
        %15d = ($sp + %f78);
        stack[%15d] = %95c;
        %2f9 = "2";
        %74 = ($sp - %2f9);
        %ee4 = stack[%74];
        %ecc = "3";
        %a42 = ($sp + %ecc);
        stack[%a42] = %ee4;
        %d28f = "1";
        %f34 = ($sp + %d28f);
        %02a = #189;
        stack[%f34] = %02a;
        %c46 = #897;
        jump %c46;
    }

    proc #189 {
        %efb4 = #7d4;
        jump %efb4;
    }

    proc #66c {
        %e1a = "5";
        %62 = ($sp - %e1a);
        %404f = stack[%62];
        %c54 = "4";
        %4041 = ($sp - %c54);
        %f8f = stack[%4041];
        %507 = (%404f < %f8f);
        %2ff = #af1;
        %528 = #f21;
        if %507 then jump %2ff else jump %528;
    }

    proc #afd {
        %542 = "6";
        %dff = ($sp - %542);
        %dea = stack[%dff];
        %153 = "4";
        %a2c = ($sp - %153);
        %d0e = stack[%a2c];
        %89d = (%dea < %d0e);
        %3d8 = #5d8;
        %7ff = #a7d;
        if %89d then jump %3d8 else jump %7ff;
    }
}

func func.swap {
    proc #897 {
        %730 = "4";
        $sp = ($sp + %730);
        %2ff6 = "2";
        %ecf = ($sp - %2ff6);
        %0bf = stack[%ecf];
        %a5f = stack[%0bf];
        %2ed = "0";
        %f886 = ($sp - %2ed);
        %b54 = "0";
        %3ac = (%f886 + %b54);
        stack[%3ac] = %a5f;
        %5f4 = "1";
        %5f3 = ($sp - %5f4);
        %18f = stack[%5f3];
        %734 = stack[%18f];
        %3de = "2";
        %980 = ($sp - %3de);
        %158 = stack[%980];
        %c35 = "0";
        %a26 = (%158 + %c35);
        stack[%a26] = %734;
        %bcb = "0";
        %7ef = ($sp - %bcb);
        %b4a = stack[%7ef];
        %393 = "1";
        %04 = ($sp - %393);
        %d55 = stack[%04];
        %a7e = "0";
        %2e8 = (%d55 + %a7e);
        stack[%2e8] = %b4a;
        %5f9 = "4";
        $sp = ($sp - %5f9);
        %995 = "1";
        %8be = ($sp + %995);
        %013 = stack[%8be];
        jump %013;
    }
}

func func.out {
    proc #ae32 {
        %52d = "2";
        $sp = ($sp + %52d);
        %3d3 = "0";
        %026 = ($sp - %3d3);
        %4cf = stack[%026];
        out %4cf;
        %0f6 = "2";
        $sp = ($sp - %0f6);
        %f8d = "1";
        %15d8 = ($sp + %f8d);
        %115 = stack[%15d8];
        jump %115;
    }
}

func func.in {
    proc #89f {
        %71 = "3";
        $sp = ($sp + %71);
        %7f8 = "0";
        %a5e = ($sp - %7f8);
        in;
        stack[%a5e] = $answer;
        %08c = "0";
        %46 = ($sp - %08c);
        %8bef = stack[%46];
        %4ad = "1";
        %f74 = ($sp - %4ad);
        %f72 = stack[%f74];
        %96f = "0";
        %3c3 = (%f72 + %96f);
        stack[%3c3] = %8bef;
        %e49 = "3";
        $sp = ($sp - %e49);
        %745 = "1";
        %1896 = ($sp + %745);
        %cc8 = stack[%1896];
        jump %cc8;
    }
}