main {
    proc #6d {
        $sp = "-1";
        %d4 = #62;
        jump %d4;
    }
}

func main {
    proc #62 {
        %c9 = "103";
        $sp = ($sp + %c9);
        %9b = "0";
        %a7 = "101";
        %e9 = ($sp - %a7);
        %2a = "0";
        %7a = (%e9 + %2a);
        stack[%7a] = %9b;
        %50 = "10";
        %8b = "101";
        %51 = ($sp - %8b);
        %cd = "1";
        %7d = (%51 + %cd);
        stack[%7d] = %50;
        %0d = "a";
        %75 = "101";
        %c96 = ($sp - %75);
        %56 = "2";
        %b9 = (%c96 + %56);
        stack[%b9] = %0d;
        %44 = "-5";
        %3b = "101";
        %cf = ($sp - %3b);
        %ed = "3";
        %c1 = (%cf + %ed);
        stack[%c1] = %44;
        %b2 = "283";
        %6dd = "101";
        %b5 = ($sp - %6dd);
        %29 = "4";
        %f9 = (%b5 + %29);
        stack[%f9] = %b2;
        %62f = "2";
        %b1 = "101";
        %ad = ($sp - %b1);
        %aa = "5";
        %88 = (%ad + %aa);
        stack[%88] = %62f;
        %c2 = "6";
        %e7 = "101";
        %f6 = ($sp - %e7);
        %6c = "6";
        %adb = (%f6 + %6c);
        stack[%adb] = %c2;
        %cc = "4";
        %b6 = "101";
        %4f = ($sp - %b6);
        %7e = "7";
        %bb = (%4f + %7e);
        stack[%bb] = %cc;
        %04 = "what";
        %d7 = "101";
        %cd2 = ($sp - %d7);
        %83 = "8";
        %cf8 = (%cd2 + %83);
        stack[%cf8] = %04;
        %25 = "-1";
        %47 = "101";
        %38 = ($sp - %47);
        %c28 = "9";
        %04c = (%38 + %c28);
        stack[%04c] = %25;
        %fc = "20";
        %73 = "101";
        %46 = ($sp - %73);
        %04f = "10";
        %31 = (%46 + %04f);
        stack[%31] = %fc;
        %d1 = "7";
        %77 = "101";
        %8b6 = ($sp - %77);
        %80 = "11";
        %5a = (%8b6 + %80);
        stack[%5a] = %d1;
        %57 = "8";
        %38c = "101";
        %1f = ($sp - %38c);
        %be = "12";
        %de = (%1f + %be);
        stack[%de] = %57;
        %aa5 = "2";
        %36 = "101";
        %96 = ($sp - %36);
        %a3 = "13";
        %7e0 = (%96 + %a3);
        stack[%7e0] = %aa5;
        %bf = "2";
        %cce = ($sp - %bf);
        %5ac = "2";
        %c3 = ($sp + %5ac);
        stack[%c3] = %cce;
        %90 = "101";
        %c17 = ($sp - %90);
        %43 = "3";
        %7b = ($sp + %43);
        stack[%7b] = %c17;
        %e0 = "99";
        %01 = "4";
        %10 = ($sp + %01);
        stack[%10] = %e0;
        %1a = "14";
        %6a = "5";
        %24 = ($sp + %6a);
        stack[%24] = %1a;
        %95 = "1";
        %2c = ($sp + %95);
        %a3f = #3a;
        stack[%2c] = %a3f;
        %447 = #41;
        jump %447;
    }

    proc #3a {
        %8e = "Unsorted:";
        %8a = "2";
        %9c = ($sp + %8a);
        stack[%9c] = %8e;
        %885 = "1";
        %5ab = ($sp + %885);
        %4c = #18;
        stack[%5ab] = %4c;
        %03 = #ea;
        jump %03;
    }

    proc #18 {
        %c9e = "2";
        %f1 = ($sp - %c9e);
        %86 = "2";
        %c0 = ($sp + %86);
        stack[%c0] = %f1;
        %ff = "1";
        %6b = ($sp + %ff);
        %12 = #d73;
        stack[%6b] = %12;
        %3ae = #047;
        jump %3ae;
    }

    proc #d73 {
        %fce = "Sorted:";
        %55 = "2";
        %bd = ($sp + %55);
        stack[%bd] = %fce;
        %9b5 = "1";
        %6f = ($sp + %9b5);
        %49 = #77f;
        stack[%6f] = %49;
        %82 = #ea;
        jump %82;
    }

    proc #77f {
        %65 = "2";
        %1f1 = ($sp - %65);
        %28 = "2";
        %b7 = ($sp + %28);
        stack[%b7] = %1f1;
        %15 = "1";
        %3f = ($sp + %15);
        %64 = #d4c;
        stack[%3f] = %64;
        %36d = #af;
        jump %36d;
    }

    proc #d4c {
        %75a = "2";
        %c5 = ($sp - %75a);
        %253 = "2";
        %bee = ($sp + %253);
        stack[%bee] = %c5;
        %37 = "1";
        %ba = ($sp + %37);
        %2d = #e3;
        stack[%ba] = %2d;
        %a2 = #047;
        jump %a2;
    }

    proc #e3 {
        %a8 = "Pushing `12.5` then sorting again:";
        %afa = "2";
        %deb = ($sp + %afa);
        stack[%deb] = %a8;
        %4a = "1";
        %cd9 = ($sp + %4a);
        %63 = #76;
        stack[%cd9] = %63;
        %52 = #ea;
        jump %52;
    }

    proc #76 {
        %d0 = "2";
        %a5 = ($sp - %d0);
        %74 = "2";
        %e4 = ($sp + %74);
        stack[%e4] = %a5;
        %21 = "12.5";
        %d6 = "3";
        %8e9 = ($sp + %d6);
        stack[%8e9] = %21;
        %56a = "1";
        %6ca = ($sp + %56a);
        %1c = #ef;
        stack[%6ca] = %1c;
        %508 = #0f;
        jump %508;
    }

    proc #ef {
        %fa = "2";
        %5d = ($sp - %fa);
        %06 = "2";
        %fc4 = ($sp + %06);
        stack[%fc4] = %5d;
        %6d5 = "1";
        %d64 = ($sp + %6d5);
        %4d = #43e;
        stack[%d64] = %4d;
        %b2b = #af;
        jump %b2b;
    }

    proc #43e {
        %732 = "2";
        %c8 = ($sp - %732);
        %80e = "2";
        %32 = ($sp + %80e);
        stack[%32] = %c8;
        %c21 = "1";
        %7a6 = ($sp + %c21);
        %d61 = #4d6;
        stack[%7a6] = %d61;
        %66 = #047;
        jump %66;
    }

    proc #4d6 {
        exit;
    }
}

func func.Vec_new {
    proc #41 {
        %48 = "5";
        $sp = ($sp + %48);
        %ac = "2";
        %c09 = ($sp - %ac);
        %8ef = stack[%c09];
        %8b8 = "3";
        %54 = ($sp - %8b8);
        %3c = stack[%54];
        %94 = "0";
        %387 = (%3c + %94);
        stack[%387] = %8ef;
        %54b = "1";
        %473 = ($sp - %54b);
        %42 = stack[%473];
        %2b = "3";
        %c95 = ($sp - %2b);
        %2b6 = stack[%c95];
        %560 = "1";
        %7b4 = (%2b6 + %560);
        stack[%7b4] = %42;
        %58 = "0";
        %20 = ($sp - %58);
        %7d0 = stack[%20];
        %30 = "3";
        %35 = ($sp - %30);
        %292 = stack[%35];
        %f65 = "2";
        %1b = (%292 + %f65);
        stack[%1b] = %7d0;
        %9d = "5";
        $sp = ($sp - %9d);
        %620 = "1";
        %0b = ($sp + %620);
        %23 = stack[%0b];
        jump %23;
    }
}

func func.Vec_entry {
    proc #efa {
        %09 = "4";
        $sp = ($sp + %09);
        %a2a = "0";
        %85 = ($sp - %a2a);
        %9c5 = stack[%85];
        %d5 = "0";
        %58a = "1";
        %d08 = ($sp - %58a);
        %0ba = stack[%d08];
        %540 = (%0ba + %d5);
        %af0 = stack[%540];
        %ae = (%af0 + %9c5);
        %ef3 = "2";
        %fe = ($sp - %ef3);
        %7ef = stack[%fe];
        %99 = "0";
        %c7 = (%7ef + %99);
        stack[%c7] = %ae;
        %5c = "4";
        $sp = ($sp - %5c);
        %6a8 = "1";
        %39 = ($sp + %6a8);
        %a4 = stack[%39];
        jump %a4;
    }
}

func func.Vec_cap {
    proc #60 {
        %06b = "3";
        $sp = ($sp + %06b);
        %25d = "1";
        %aaa = "0";
        %1e = ($sp - %aaa);
        %bb6 = stack[%1e];
        %ee = (%bb6 + %25d);
        %22 = stack[%ee];
        %7ba = "1";
        %9c8 = ($sp - %7ba);
        %b4 = stack[%9c8];
        %db = "0";
        %439 = (%b4 + %db);
        stack[%439] = %22;
        %4f5 = "3";
        $sp = ($sp - %4f5);
        %7c = "1";
        %f3 = ($sp + %7c);
        %a74 = stack[%f3];
        jump %a74;
    }
}

func func.Vec_len_r {
    proc #40 {
        %995 = "3";
        $sp = ($sp + %995);
        %be3 = "2";
        %55b = "0";
        %96c = ($sp - %55b);
        %ac1 = stack[%96c];
        %8a5 = (%ac1 + %be3);
        %5da = "1";
        %015 = ($sp - %5da);
        %93 = stack[%015];
        %88c = "0";
        %b1d = (%93 + %88c);
        stack[%b1d] = %8a5;
        %f68 = "3";
        $sp = ($sp - %f68);
        %7a7 = "1";
        %0d1 = ($sp + %7a7);
        %d9 = stack[%0d1];
        jump %d9;
    }
}

func func.Vec_len {
    proc #666 {
        %ab = "4";
        $sp = ($sp + %ab);
        %26 = "0";
        %376 = ($sp - %26);
        %c9a = "2";
        %a0 = ($sp + %c9a);
        stack[%a0] = %376;
        %bbb = "1";
        %f8 = ($sp - %bbb);
        %afb = stack[%f8];
        %acd = "3";
        %8d = ($sp + %acd);
        stack[%8d] = %afb;
        %9b5a = "1";
        %6d7 = ($sp + %9b5a);
        %32d = #659;
        stack[%6d7] = %32d;
        %ea0 = #40;
        jump %ea0;
    }

    proc #659 {
        %487 = "0";
        %df = ($sp - %487);
        %8e7 = stack[%df];
        %f0 = stack[%8e7];
        %98 = "2";
        %887 = ($sp - %98);
        %93e = stack[%887];
        %03a = "0";
        %399 = (%93e + %03a);
        stack[%399] = %f0;
        %587 = "4";
        $sp = ($sp - %587);
        %92 = "1";
        %72 = ($sp + %92);
        %86a = stack[%72];
        jump %86a;
    }
}

func func.Vec_push {
    proc #0f {
        %24d = "7";
        $sp = ($sp + %24d);
        %944 = "3";
        %e7f = ($sp - %944);
        %cb = "2";
        %936 = ($sp + %cb);
        stack[%936] = %e7f;
        %23a = "5";
        %79 = ($sp - %23a);
        %11 = stack[%79];
        %12c = "3";
        %f4 = ($sp + %12c);
        stack[%f4] = %11;
        %22f = "1";
        %3ca = ($sp + %22f);
        %f1d = #6e;
        stack[%3ca] = %f1d;
        %bc = #60;
        jump %bc;
    }

    proc #6e {
        %0a = "2";
        %800 = ($sp - %0a);
        %4cf = "2";
        %14 = ($sp + %4cf);
        stack[%14] = %800;
        %5dd = "5";
        %f5 = ($sp - %5dd);
        %78 = stack[%f5];
        %13 = "3";
        %57a = ($sp + %13);
        stack[%57a] = %78;
        %9a = "1";
        %94e = ($sp + %9a);
        %02 = #e01;
        stack[%94e] = %02;
        %bcf = #666;
        jump %bcf;
    }

    proc #e01 {
        %1aa = "2";
        %e012 = ($sp - %1aa);
        %a51 = stack[%e012];
        %2f = "3";
        %779 = ($sp - %2f);
        %df4 = stack[%779];
        %3a6 = (%a51 < %df4);
        %ad5 = #e1;
        %d10 = #c14;
        if %3a6 then jump %ad5 else jump %d10;
    }

    proc #c14 {
        %427 = "7";
        $sp = ($sp - %427);
        %a3a = "1";
        %26d = ($sp + %a3a);
        %d2 = stack[%26d];
        jump %d2;
    }

    proc #e1 {
        %378 = "1";
        %c72 = ($sp - %378);
        %d8 = "2";
        %4f6 = ($sp + %d8);
        stack[%4f6] = %c72;
        %0aa = "5";
        %480 = ($sp - %0aa);
        %a29 = stack[%480];
        %6f5 = "3";
        %69 = ($sp + %6f5);
        stack[%69] = %a29;
        %0aab = "2";
        %785 = ($sp - %0aab);
        %eb = stack[%785];
        %4c5 = "4";
        %58b = ($sp + %4c5);
        stack[%58b] = %eb;
        %6c5 = "1";
        %a71 = ($sp + %6c5);
        %ccf = #b0;
        stack[%a71] = %ccf;
        %c2b = #efa;
        jump %c2b;
    }

    proc #b0 {
        %48a = "4";
        %c2d = ($sp - %48a);
        %258 = stack[%c2d];
        %b8 = "1";
        %e8 = ($sp - %b8);
        %9f = stack[%e8];
        %7329 = "0";
        %297 = (%9f + %7329);
        stack[%297] = %258;
        %51f = "0";
        %f9a = ($sp - %51f);
        %540a = "2";
        %d16 = ($sp + %540a);
        stack[%d16] = %f9a;
        %3b1 = "5";
        %c28e = ($sp - %3b1);
        %1ec = stack[%c28e];
        %e2 = "3";
        %ce = ($sp + %e2);
        stack[%ce] = %1ec;
        %ef9 = "1";
        %df0 = ($sp + %ef9);
        %97 = #33;
        stack[%df0] = %97;
        %9aa = #40;
        jump %9aa;
    }

    proc #33 {
        %c39 = "2";
        %8db = ($sp - %c39);
        %1ad = stack[%8db];
        %2f6 = "1";
        %90a = (%1ad + %2f6);
        %383 = "0";
        %b08 = ($sp - %383);
        %8c = stack[%b08];
        %61 = "0";
        %097 = (%8c + %61);
        stack[%097] = %90a;
        %8b8c = #c14;
        jump %8b8c;
    }
}

func func.Vec_print {
    proc #047 {
        %dd = "6";
        $sp = ($sp + %dd);
        %84 = "0";
        %aff = "3";
        %a04 = ($sp - %aff);
        %1d = "0";
        %3c0 = (%a04 + %1d);
        stack[%3c0] = %84;
        %7e4 = "Vec (";
        %794 = "0";
        %6f59 = ($sp - %794);
        %68 = "0";
        %356 = (%6f59 + %68);
        stack[%356] = %7e4;
        %59 = "2";
        %1b1 = ($sp - %59);
        %6b9 = "2";
        %5b = ($sp + %6b9);
        stack[%5b] = %1b1;
        %94e4 = "4";
        %6a6 = ($sp - %94e4);
        %9fe = stack[%6a6];
        %ceb = "3";
        %0bf = ($sp + %ceb);
        stack[%0bf] = %9fe;
        %dbf = "1";
        %bd4 = ($sp + %dbf);
        %67 = #ae9;
        stack[%bd4] = %67;
        %b1b = #666;
        jump %b1b;
    }

    proc #ae9 {
        %2e = "0";
        %25d2 = ($sp - %2e);
        %7bf = stack[%25d2];
        %809 = "2";
        %72a = ($sp - %809);
        %7cb = stack[%72a];
        %4e = (%7bf ~ %7cb);
        %ea3 = "0";
        %17 = ($sp - %ea3);
        %53 = "0";
        %151 = (%17 + %53);
        stack[%151] = %4e;
        %0d2 = "0";
        %ca = ($sp - %0d2);
        %16 = stack[%ca];
        %b1bd = ") ";
        %0dc = (%16 ~ %b1bd);
        %d8e = "0";
        %b3 = ($sp - %d8e);
        %91 = "0";
        %ce9 = (%b3 + %91);
        stack[%ce9] = %0dc;
        %11a = #f5d;
        jump %11a;
    }

    proc #d1b {
        %51fb = "0";
        %254 = ($sp - %51fb);
        %200 = stack[%254];
        %4c4 = "2";
        %304 = ($sp + %4c4);
        stack[%304] = %200;
        %137 = "1";
        %f67 = ($sp + %137);
        %dd9 = #a6;
        stack[%f67] = %dd9;
        %ea6 = #ea;
        jump %ea6;
    }

    proc #a6 {
        %c38 = "6";
        $sp = ($sp - %c38);
        %f7 = "1";
        %43a = ($sp + %f7);
        %509 = stack[%43a];
        jump %509;
    }

    proc #3c6 {
        %134 = "3";
        %45 = ($sp - %134);
        %d63 = stack[%45];
        %4ac = "0";
        %6dd1 = (!(%d63 == %4ac));
        %dd7 = #89;
        %793 = #660;
        if %6dd1 then jump %dd7 else jump %793;
    }

    proc #660 {
        %e44 = "1";
        %6e2 = ($sp - %e44);
        %b6e = "2";
        %ab5 = ($sp + %b6e);
        stack[%ab5] = %6e2;
        %1c0 = "4";
        %965 = ($sp - %1c0);
        %f2 = stack[%965];
        %fa7 = "3";
        %931 = ($sp + %fa7);
        stack[%931] = %f2;
        %6a0 = "3";
        %4df = ($sp - %6a0);
        %d19 = stack[%4df];
        %2001 = "4";
        %27 = ($sp + %2001);
        stack[%27] = %d19;
        %ad9 = "1";
        %68e = ($sp + %ad9);
        %c54 = #7f;
        stack[%68e] = %c54;
        %ca0 = #efa;
        jump %ca0;
    }

    proc #7f {
        %5b8 = "0";
        %98d = ($sp - %5b8);
        %b48 = stack[%98d];
        %6a7 = "1";
        %617 = ($sp - %6a7);
        %a9 = stack[%617];
        %d55 = stack[%a9];
        %915 = (%b48 ~ %d55);
        %882 = "0";
        %f20 = ($sp - %882);
        %f1b = "0";
        %ec = (%f20 + %f1b);
        stack[%ec] = %915;
        %104 = "3";
        %ecd = ($sp - %104);
        %147 = stack[%ecd];
        %c5a = "1";
        %db0 = (%147 + %c5a);
        %b49 = "3";
        %5c8 = ($sp - %b49);
        %eaf = "0";
        %379 = (%5c8 + %eaf);
        stack[%379] = %db0;
        %755 = #f5d;
        jump %755;
    }

    proc #89 {
        %37d = "0";
        %c7e = ($sp - %37d);
        %527 = stack[%c7e];
        %826 = ", ";
        %f7a = (%527 ~ %826);
        %2d3 = "0";
        %fae = ($sp - %2d3);
        %f85 = "0";
        %e9c = (%fae + %f85);
        stack[%e9c] = %f7a;
        %d14 = #660;
        jump %d14;
    }

    proc #f5d {
        %47a = "3";
        %08 = ($sp - %47a);
        %9ca = stack[%08];
        %f05 = "2";
        %75b = ($sp - %f05);
        %5f = stack[%75b];
        %8f = (%9ca < %5f);
        %04a = #3c6;
        %4cf5 = #d1b;
        if %8f then jump %04a else jump %4cf5;
    }
}

func func.Vec_sort {
    proc #af {
        %0a2 = "9";
        $sp = ($sp + %0a2);
        %a57 = "0";
        %75d = "6";
        %e1b = ($sp - %75d);
        %cc1 = "0";
        %505 = (%e1b + %cc1);
        stack[%505] = %a57;
        %07 = "4";
        %f5c = ($sp - %07);
        %5c5 = "2";
        %d81 = ($sp + %5c5);
        stack[%d81] = %f5c;
        %fb = "7";
        %2a6 = ($sp - %fb);
        %5d1 = stack[%2a6];
        %b2a = "3";
        %653 = ($sp + %b2a);
        stack[%653] = %5d1;
        %17a = "1";
        %0b7 = ($sp + %17a);
        %80c = #36e;
        stack[%0b7] = %80c;
        %5a4 = #666;
        jump %5a4;
    }

    proc #36e {
        %4b = #4f9;
        jump %4b;
    }

    proc #6f6 {
        %5e = "9";
        $sp = ($sp - %5e);
        %535 = "1";
        %62b = ($sp + %535);
        %c02 = stack[%62b];
        jump %c02;
    }

    proc #9bc {
        %275 = "6";
        %ea64 = ($sp - %275);
        %bc9 = stack[%ea64];
        %adf = "5";
        %1fa = ($sp - %adf);
        %414 = "0";
        %777 = (%1fa + %414);
        stack[%777] = %bc9;
        %4f6d = #515;
        jump %4f6d;
    }

    proc #076 {
        %2d2 = "6";
        %657 = ($sp - %2d2);
        %bb4 = stack[%657];
        %3ab = "1";
        %3d = (%bb4 + %3ab);
        %23a8 = "6";
        %fa6 = ($sp - %23a8);
        %b1a = "0";
        %a2c = (%fa6 + %b1a);
        stack[%a2c] = %3d;
        %837 = #4f9;
        jump %837;
    }

    proc #68d {
        %4c8 = "3";
        %299 = ($sp - %4c8);
        %831 = "2";
        %ab9 = ($sp + %831);
        stack[%ab9] = %299;
        %b483 = "7";
        %9bf = ($sp - %b483);
        %f657 = stack[%9bf];
        %248 = "3";
        %159 = ($sp + %248);
        stack[%159] = %f657;
        %8ed = "6";
        %27f = ($sp - %8ed);
        %f02 = stack[%27f];
        %1c08 = "4";
        %302 = ($sp + %1c08);
        stack[%302] = %f02;
        %c6 = "1";
        %58ab = ($sp + %c6);
        %34 = #e1e;
        stack[%58ab] = %34;
        %1a8 = #efa;
        jump %1a8;
    }

    proc #e1e {
        %99d = "2";
        %8aa = ($sp - %99d);
        %72f = "2";
        %3ae2 = ($sp + %72f);
        stack[%3ae2] = %8aa;
        %59f = "7";
        %0fc = ($sp - %59f);
        %909 = stack[%0fc];
        %d0d = "3";
        %1ff = ($sp + %d0d);
        stack[%1ff] = %909;
        %49c = "5";
        %13d = ($sp - %49c);
        %84a = stack[%13d];
        %201 = "4";
        %106 = ($sp + %201);
        stack[%106] = %84a;
        %3af = "1";
        %b97 = ($sp + %3af);
        %1ba = #b98;
        stack[%b97] = %1ba;
        %21e = #efa;
        jump %21e;
    }

    proc #b98 {
        %dd97 = "3";
        %0e = ($sp - %dd97);
        %312 = stack[%0e];
        %355 = stack[%312];
        %c7b = "1";
        %f29 = ($sp - %c7b);
        %949 = "0";
        %de1 = (%f29 + %949);
        stack[%de1] = %355;
        %5082 = "2";
        %782 = ($sp - %5082);
        %d83 = stack[%782];
        %44f = stack[%d83];
        %eb1 = "0";
        %2ba = ($sp - %eb1);
        %d9b = "0";
        %8cb = (%2ba + %d9b);
        stack[%8cb] = %44f;
        %b7d = "0";
        %865 = ($sp - %b7d);
        %993 = stack[%865];
        %8fd = "1";
        %8f5 = ($sp - %8fd);
        %bdf = stack[%8f5];
        %dd95 = (%993 < %bdf);
        %8ea = #21a;
        %5e2 = #0c;
        if %dd95 then jump %8ea else jump %5e2;
    }

    proc #0c {
        %6d9 = "5";
        %377 = ($sp - %6d9);
        %7ec = stack[%377];
        %322 = "1";
        %f56 = (%7ec + %322);
        %0a24 = "5";
        %8c4 = ($sp - %0a24);
        %638 = "0";
        %ee3 = (%8c4 + %638);
        stack[%ee3] = %f56;
        %d0c = #515;
        jump %d0c;
    }

    proc #21a {
        %67e = "3";
        %0b1 = ($sp - %67e);
        %26dd = stack[%0b1];
        %371 = "2";
        %1d4 = ($sp + %371);
        stack[%1d4] = %26dd;
        %1063 = "2";
        %626 = ($sp - %1063);
        %e76 = stack[%626];
        %e32 = "3";
        %dc = ($sp + %e32);
        stack[%dc] = %e76;
        %cd0 = "1";
        %65e = ($sp + %cd0);
        %bcb = #a59;
        stack[%65e] = %bcb;
        %6f0 = #3e;
        jump %6f0;
    }

    proc #a59 {
        %83a = #0c;
        jump %83a;
    }

    proc #515 {
        %9b7 = "5";
        %3c4 = ($sp - %9b7);
        %fe3 = stack[%3c4];
        %868 = "4";
        %04d = ($sp - %868);
        %4be = stack[%04d];
        %d9d = (%fe3 < %4be);
        %371f = #68d;
        %00 = #076;
        if %d9d then jump %371f else jump %00;
    }

    proc #4f9 {
        %424 = "6";
        %3afb = ($sp - %424);
        %51e = stack[%3afb];
        %d3 = "4";
        %98b = ($sp - %d3);
        %e5 = stack[%98b];
        %ce5 = (%51e < %e5);
        %e53 = #9bc;
        %d43 = #6f6;
        if %ce5 then jump %e53 else jump %d43;
    }
}

func func.swap {
    proc #3e {
        %6a7d = "4";
        $sp = ($sp + %6a7d);
        %4c6 = "2";
        %71 = ($sp - %4c6);
        %1c3 = stack[%71];
        %ee3a = stack[%1c3];
        %8fe = "0";
        %4b8 = ($sp - %8fe);
        %9cb = "0";
        %ee9 = (%4b8 + %9cb);
        stack[%ee9] = %ee3a;
        %9498 = "1";
        %328 = ($sp - %9498);
        %a65 = stack[%328];
        %93c = stack[%a65];
        %df8 = "2";
        %af8 = ($sp - %df8);
        %4a3 = stack[%af8];
        %ac5 = "0";
        %d3c = (%4a3 + %ac5);
        stack[%d3c] = %93c;
        %76a = "0";
        %3abc = ($sp - %76a);
        %26f = stack[%3abc];
        %62fb = "1";
        %166 = ($sp - %62fb);
        %8d2 = stack[%166];
        %b16 = "0";
        %e00 = (%8d2 + %b16);
        stack[%e00] = %26f;
        %a1 = "4";
        $sp = ($sp - %a1);
        %6b7 = "1";
        %dc5 = ($sp + %6b7);
        %3db = stack[%dc5];
        jump %3db;
    }
}

func func.out {
    proc #ea {
        %7b47 = "2";
        $sp = ($sp + %7b47);
        %b3e = "0";
        %47b = ($sp - %b3e);
        %b1e = stack[%47b];
        out %b1e;
        %9fa = "2";
        $sp = ($sp - %9fa);
        %6d3 = "1";
        %81 = ($sp + %6d3);
        %ee7 = stack[%81];
        jump %ee7;
    }
}

func func.in {
    proc #ebe {
        %030 = "3";
        $sp = ($sp + %030);
        %1f15 = "0";
        %e7d = ($sp - %1f15);
        in;
        stack[%e7d] = $answer;
        %011 = "0";
        %9da = ($sp - %011);
        %6f57 = stack[%9da];
        %9c88 = "1";
        %7a61 = ($sp - %9c88);
        %6ec = stack[%7a61];
        %4ff = "0";
        %8b1 = (%6ec + %4ff);
        stack[%8b1] = %6f57;
        %7e2 = "3";
        $sp = ($sp - %7e2);
        %5d1c = "1";
        %c3b = ($sp + %5d1c);
        %250 = stack[%c3b];
        jump %250;
    }
}