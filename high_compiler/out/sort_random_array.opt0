main {
    proc #1f {
        $sp = "-1";
        %8f = #c4;
        jump %8f;
    }
}

func main {
    proc #c4 {
        %be = "103";
        $sp = ($sp + %be);
        %f1 = "2";
        %e4 = ($sp - %f1);
        %b4 = "2";
        %99 = ($sp + %b4);
        stack[%99] = %e4;
        %4e = "101";
        %a2 = ($sp - %4e);
        %92 = "3";
        %ef = ($sp + %92);
        stack[%ef] = %a2;
        %e7 = "99";
        %e3 = "4";
        %ec = ($sp + %e3);
        stack[%ec] = %e7;
        %db = "0";
        %e74 = "5";
        %d0 = ($sp + %e74);
        stack[%d0] = %db;
        %cb = "1";
        %97 = ($sp + %cb);
        %98 = #7f;
        stack[%97] = %98;
        %04 = #e0;
        jump %04;
    }

    proc #7f {
        %16 = "2";
        %31 = ($sp - %16);
        %c3 = "2";
        %10 = ($sp + %c3);
        stack[%10] = %31;
        %46 = "10";
        %a5 = "3";
        %fd = ($sp + %a5);
        stack[%fd] = %46;
        %ea = "-100";
        %b5 = "4";
        %25 = ($sp + %b5);
        stack[%25] = %ea;
        %a9 = "100";
        %75 = "5";
        %d2 = ($sp + %75);
        stack[%d2] = %a9;
        %b48 = "1";
        %9b = ($sp + %b48);
        %b0 = #2a;
        stack[%9b] = %b0;
        %7a = #a4;
        jump %7a;
    }

    proc #2a {
        %74 = "Unsorted:";
        %89 = "2";
        %69 = ($sp + %89);
        stack[%69] = %74;
        %ae = "1";
        %49 = ($sp + %ae);
        %e3e = #61;
        stack[%49] = %e3e;
        %77 = #64;
        jump %77;
    }

    proc #61 {
        %87 = "2";
        %495 = ($sp - %87);
        %4f = "2";
        %cbb = ($sp + %4f);
        stack[%cbb] = %495;
        %ee = "1";
        %0f = ($sp + %ee);
        %94 = #a49;
        stack[%0f] = %94;
        %33 = #616;
        jump %33;
    }

    proc #a49 {
        %a0 = "Sorted:";
        %9c = "2";
        %f4 = ($sp + %9c);
        stack[%f4] = %a0;
        %b3 = "1";
        %c0 = ($sp + %b3);
        %2f = #50;
        stack[%c0] = %2f;
        %3e = #64;
        jump %3e;
    }

    proc #50 {
        %78 = "2";
        %fa = ($sp - %78);
        %3b = "2";
        %a6 = ($sp + %3b);
        stack[%a6] = %fa;
        %d1 = "1";
        %5f = ($sp + %d1);
        %de = #80;
        stack[%5f] = %de;
        %c7 = #6f;
        jump %c7;
    }

    proc #80 {
        %ae8 = "2";
        %c47 = ($sp - %ae8);
        %dd = "2";
        %25d = ($sp + %dd);
        stack[%25d] = %c47;
        %9c1 = "1";
        %0d = ($sp + %9c1);
        %6d = #a57;
        stack[%0d] = %6d;
        %108 = #616;
        jump %108;
    }

    proc #a57 {
        %987 = "Pushing `12.5` then sorting again:";
        %62 = "2";
        %03 = ($sp + %62);
        stack[%03] = %987;
        %e3c = "1";
        %d00 = ($sp + %e3c);
        %68 = #b9;
        stack[%d00] = %68;
        %83 = #64;
        jump %83;
    }

    proc #b9 {
        %f48 = "2";
        %1a = ($sp - %f48);
        %40 = "2";
        %e8 = ($sp + %40);
        stack[%e8] = %1a;
        %c9 = "12.5";
        %34 = "3";
        %21 = ($sp + %34);
        stack[%21] = %c9;
        %ab = "1";
        %2e = ($sp + %ab);
        %9c4 = #88;
        stack[%2e] = %9c4;
        %2e3 = #20;
        jump %2e3;
    }

    proc #88 {
        %af = "2";
        %48 = ($sp - %af);
        %3c = "2";
        %f5 = ($sp + %3c);
        stack[%f5] = %48;
        %886 = "1";
        %8e = ($sp + %886);
        %ab4 = #93;
        stack[%8e] = %ab4;
        %ab5 = #6f;
        jump %ab5;
    }

    proc #93 {
        %3a = "2";
        %7a7 = ($sp - %3a);
        %ed = "2";
        %d5 = ($sp + %ed);
        stack[%d5] = %7a7;
        %7e = "1";
        %c8 = ($sp + %7e);
        %87e = #3d;
        stack[%c8] = %87e;
        %b8 = #616;
        jump %b8;
    }

    proc #3d {
        exit;
    }
}

func func.Vec_new {
    proc #e0 {
        %dc = "5";
        $sp = ($sp + %dc);
        %7b = "2";
        %f9 = ($sp - %7b);
        %6a = stack[%f9];
        %c6 = "3";
        %beb = ($sp - %c6);
        %33a = stack[%beb];
        %42 = "0";
        %7c = (%33a + %42);
        stack[%7c] = %6a;
        %9f = "1";
        %59 = ($sp - %9f);
        %56 = stack[%59];
        %bf = "3";
        %7b3 = ($sp - %bf);
        %773 = stack[%7b3];
        %63 = "1";
        %17 = (%773 + %63);
        stack[%17] = %56;
        %e2 = "0";
        %9d = ($sp - %e2);
        %f51 = stack[%9d];
        %a53 = "3";
        %73 = ($sp - %a53);
        %1c = stack[%73];
        %a43 = "2";
        %e8a = (%1c + %a43);
        stack[%e8a] = %f51;
        %3d7 = "5";
        $sp = ($sp - %3d7);
        %28 = "1";
        %5e = ($sp + %28);
        %24 = stack[%5e];
        jump %24;
    }
}

func func.Vec_entry {
    proc #4fd {
        %2a9 = "4";
        $sp = ($sp + %2a9);
        %f0 = "0";
        %343 = ($sp - %f0);
        %35 = stack[%343];
        %44 = "0";
        %1d = "1";
        %46d = ($sp - %1d);
        %0de = stack[%46d];
        %22 = (%0de + %44);
        %27 = stack[%22];
        %927 = (%27 + %35);
        %37 = "2";
        %2a0 = ($sp - %37);
        %cf = stack[%2a0];
        %07 = "0";
        %bc = (%cf + %07);
        stack[%bc] = %927;
        %e04 = "4";
        $sp = ($sp - %e04);
        %984 = "1";
        %e42 = ($sp + %984);
        %15 = stack[%e42];
        jump %15;
    }
}

func func.Vec_cap {
    proc #01 {
        %eb = "3";
        $sp = ($sp + %eb);
        %1b = "1";
        %4ee = "0";
        %461 = ($sp - %4ee);
        %944 = stack[%461];
        %6b = (%944 + %1b);
        %f9c = stack[%6b];
        %85 = "1";
        %8ea = ($sp - %85);
        %08 = stack[%8ea];
        %5c = "0";
        %79 = (%08 + %5c);
        stack[%79] = %f9c;
        %3e6 = "3";
        $sp = ($sp - %3e6);
        %2d = "1";
        %24b = ($sp + %2d);
        %91 = stack[%24b];
        jump %91;
    }
}

func func.Vec_len_r {
    proc #82 {
        %8c = "3";
        $sp = ($sp + %8c);
        %13 = "2";
        %11 = "0";
        %9f7 = ($sp - %11);
        %1de = stack[%9f7];
        %d3 = (%1de + %13);
        %bf9 = "1";
        %59c = ($sp - %bf9);
        %255 = stack[%59c];
        %84 = "0";
        %466 = (%255 + %84);
        stack[%466] = %d3;
        %c2 = "3";
        $sp = ($sp - %c2);
        %5fb = "1";
        %d6 = ($sp + %5fb);
        %2c = stack[%d6];
        jump %2c;
    }
}

func func.Vec_len {
    proc #a7 {
        %3d6 = "4";
        $sp = ($sp + %3d6);
        %3a9 = "0";
        %b03 = ($sp - %3a9);
        %a3 = "2";
        %a1 = ($sp + %a3);
        stack[%a1] = %b03;
        %a09 = "1";
        %74f = ($sp - %a09);
        %2d5 = stack[%74f];
        %e4a = "3";
        %b2 = ($sp + %e4a);
        stack[%b2] = %2d5;
        %90 = "1";
        %c82 = ($sp + %90);
        %5b = #fe;
        stack[%c82] = %5b;
        %25f = #82;
        jump %25f;
    }

    proc #fe {
        %d6c = "0";
        %d22 = ($sp - %d6c);
        %68b = stack[%d22];
        %71 = stack[%68b];
        %c4c = "2";
        %89d = ($sp - %c4c);
        %9c7 = stack[%89d];
        %0b = "0";
        %90b = (%9c7 + %0b);
        stack[%90b] = %71;
        %d7 = "4";
        $sp = ($sp - %d7);
        %7a5 = "1";
        %c98 = ($sp + %7a5);
        %00 = stack[%c98];
        jump %00;
    }
}

func func.Vec_push {
    proc #20 {
        %d8 = "7";
        $sp = ($sp + %d8);
        %9c71 = "3";
        %92f = ($sp - %9c71);
        %c3c = "2";
        %9f2 = ($sp + %c3c);
        stack[%9f2] = %92f;
        %cbe = "5";
        %1c2 = ($sp - %cbe);
        %f9f = stack[%1c2];
        %401 = "3";
        %b7 = ($sp + %401);
        stack[%b7] = %f9f;
        %1c4 = "1";
        %8b = ($sp + %1c4);
        %3ac = #8c3;
        stack[%8b] = %3ac;
        %6d8 = #01;
        jump %6d8;
    }

    proc #8c3 {
        %999 = "2";
        %c64 = ($sp - %999);
        %24d = "2";
        %d51 = ($sp + %24d);
        stack[%d51] = %c64;
        %2f5 = "5";
        %c89 = ($sp - %2f5);
        %86 = stack[%c89];
        %5d = "3";
        %38 = ($sp + %5d);
        stack[%38] = %86;
        %05 = "1";
        %c70 = ($sp + %05);
        %12 = #51;
        stack[%c70] = %12;
        %66 = #a7;
        jump %66;
    }

    proc #51 {
        %ff = "2";
        %9f2f = ($sp - %ff);
        %9f3 = stack[%9f2f];
        %2c7 = "3";
        %c8d = ($sp - %2c7);
        %8bf = stack[%c8d];
        %a0c = (%9f3 < %8bf);
        %dbd = #ecd;
        %4ed = #09;
        if %a0c then jump %dbd else jump %4ed;
    }

    proc #09 {
        %bfe = "7";
        $sp = ($sp - %bfe);
        %0a = "1";
        %56c = ($sp + %0a);
        %7c4 = stack[%56c];
        jump %7c4;
    }

    proc #ecd {
        %b4f = "1";
        %a63 = ($sp - %b4f);
        %a0a = "2";
        %b7b = ($sp + %a0a);
        stack[%b7b] = %a63;
        %39 = "5";
        %f46 = ($sp - %39);
        %9d8 = stack[%f46];
        %96 = "3";
        %0c = ($sp + %96);
        stack[%0c] = %9d8;
        %380 = "2";
        %20e = ($sp - %380);
        %f5a = stack[%20e];
        %f4b = "4";
        %bcf = ($sp + %f4b);
        stack[%bcf] = %f5a;
        %641 = "1";
        %eef = ($sp + %641);
        %c64a = #b93;
        stack[%eef] = %c64a;
        %15f = #4fd;
        jump %15f;
    }

    proc #b93 {
        %947 = "4";
        %6c = ($sp - %947);
        %38b = stack[%6c];
        %b83 = "1";
        %825 = ($sp - %b83);
        %82e = stack[%825];
        %11e = "0";
        %119 = (%82e + %11e);
        stack[%119] = %38b;
        %a8 = "0";
        %ac = ($sp - %a8);
        %fc = "2";
        %5e6 = ($sp + %fc);
        stack[%5e6] = %ac;
        %245 = "5";
        %d9 = ($sp - %245);
        %b6 = stack[%d9];
        %222 = "3";
        %ce = ($sp + %222);
        stack[%ce] = %b6;
        %3cb = "1";
        %c0d = ($sp + %3cb);
        %a50 = #52;
        stack[%c0d] = %a50;
        %cb6 = #82;
        jump %cb6;
    }

    proc #52 {
        %3b8 = "2";
        %174 = ($sp - %3b8);
        %54 = stack[%174];
        %a9c = "1";
        %bd = (%54 + %a9c);
        %47 = "0";
        %b53 = ($sp - %47);
        %23 = stack[%b53];
        %e5 = "0";
        %b24 = (%23 + %e5);
        stack[%b24] = %bd;
        %54d = #09;
        jump %54d;
    }
}

func func.Vec_print {
    proc #616 {
        %888 = "6";
        $sp = ($sp + %888);
        %36 = "0";
        %32 = "3";
        %1a3 = ($sp - %32);
        %fc8 = "0";
        %116 = (%1a3 + %fc8);
        stack[%116] = %36;
        %d7a = "Vec (";
        %ad = "0";
        %9b9 = ($sp - %ad);
        %f2 = "0";
        %1a9 = (%9b9 + %f2);
        stack[%1a9] = %d7a;
        %ce5 = "2";
        %05d = ($sp - %ce5);
        %b484 = "2";
        %d6d = ($sp + %b484);
        stack[%d6d] = %05d;
        %33d = "4";
        %20b = ($sp - %33d);
        %46c = stack[%20b];
        %2d8 = "3";
        %378 = ($sp + %2d8);
        stack[%378] = %46c;
        %abd = "1";
        %8f4 = ($sp + %abd);
        %cd = #42d;
        stack[%8f4] = %cd;
        %684 = #a7;
        jump %684;
    }

    proc #42d {
        %a13 = "0";
        %ce1 = ($sp - %a13);
        %474 = stack[%ce1];
        %481 = "2";
        %ce4 = ($sp - %481);
        %8d = stack[%ce4];
        %f7 = (%474 ~ %8d);
        %8e6 = "0";
        %70 = ($sp - %8e6);
        %731 = "0";
        %7d = (%70 + %731);
        stack[%7d] = %f7;
        %661 = "0";
        %c34 = ($sp - %661);
        %9b4 = stack[%c34];
        %706 = ") ";
        %f77 = (%9b4 ~ %706);
        %fd5 = "0";
        %7b4 = ($sp - %fd5);
        %e05 = "0";
        %962 = (%7b4 + %e05);
        stack[%962] = %f77;
        %c7e = #4b;
        jump %c7e;
    }

    proc #b2a {
        %a57e = "0";
        %03e = ($sp - %a57e);
        %2d8d = stack[%03e];
        %638 = "2";
        %c22 = ($sp + %638);
        stack[%c22] = %2d8d;
        %9cd = "1";
        %9c6 = ($sp + %9cd);
        %d04 = #1d0;
        stack[%9c6] = %d04;
        %67 = #64;
        jump %67;
    }

    proc #1d0 {
        %2b = "6";
        $sp = ($sp - %2b);
        %fca = "1";
        %80d = ($sp + %fca);
        %f28 = stack[%80d];
        jump %f28;
    }

    proc #4b1 {
        %e81 = "3";
        %497 = ($sp - %e81);
        %b8d = stack[%497];
        %4c = "0";
        %55 = (!(%b8d == %4c));
        %243 = #a22;
        %8cc = #229;
        if %55 then jump %243 else jump %8cc;
    }

    proc #229 {
        %29 = "1";
        %8e9 = ($sp - %29);
        %9f8 = "2";
        %f8 = ($sp + %9f8);
        stack[%f8] = %8e9;
        %566 = "4";
        %80f = ($sp - %566);
        %19 = stack[%80f];
        %467 = "3";
        %fc7 = ($sp + %467);
        stack[%fc7] = %19;
        %376 = "3";
        %a29 = ($sp - %376);
        %249 = stack[%a29];
        %bf7 = "4";
        %40c = ($sp + %bf7);
        stack[%40c] = %249;
        %ef3 = "1";
        %a25 = ($sp + %ef3);
        %cbd = #4a;
        stack[%a25] = %cbd;
        %aee = #4fd;
        jump %aee;
    }

    proc #4a {
        %efd = "0";
        %40d = ($sp - %efd);
        %52b = stack[%40d];
        %250 = "1";
        %43 = ($sp - %250);
        %e79 = stack[%43];
        %b4a = stack[%e79];
        %0bc = (%52b ~ %b4a);
        %369 = "0";
        %517 = ($sp - %369);
        %c72 = "0";
        %14 = (%517 + %c72);
        stack[%14] = %0bc;
        %ae6 = "3";
        %845 = ($sp - %ae6);
        %26 = stack[%845];
        %17f = "1";
        %c1 = (%26 + %17f);
        %c02 = "3";
        %d37 = ($sp - %c02);
        %558 = "0";
        %8ba = (%d37 + %558);
        stack[%8ba] = %c1;
        %50b = #4b;
        jump %50b;
    }

    proc #a22 {
        %932 = "0";
        %565 = ($sp - %932);
        %2d6 = stack[%565];
        %76 = ", ";
        %d35 = (%2d6 ~ %76);
        %905 = "0";
        %3bf = ($sp - %905);
        %107 = "0";
        %034 = (%3bf + %107);
        stack[%034] = %d35;
        %bdc = #229;
        jump %bdc;
    }

    proc #4b {
        %0d2 = "3";
        %bb = ($sp - %0d2);
        %a8c = stack[%bb];
        %23f = "2";
        %eaf = ($sp - %23f);
        %049 = stack[%eaf];
        %3da = (%a8c < %049);
        %1aa = #4b1;
        %c2d = #b2a;
        if %3da then jump %1aa else jump %c2d;
    }
}

func func.Vec_sort {
    proc #6f {
        %8c2 = "9";
        $sp = ($sp + %8c2);
        %5a = "0";
        %8c5 = "6";
        %500 = ($sp - %8c5);
        %eb2 = "0";
        %50ba = (%500 + %eb2);
        stack[%50ba] = %5a;
        %40c0 = "4";
        %795 = ($sp - %40c0);
        %be2 = "2";
        %93e = ($sp + %be2);
        stack[%93e] = %795;
        %23c = "7";
        %96a = ($sp - %23c);
        %60 = stack[%96a];
        %506 = "3";
        %2d69 = ($sp + %506);
        stack[%2d69] = %60;
        %ebc = "1";
        %bbb = ($sp + %ebc);
        %f82 = #0cb;
        stack[%bbb] = %f82;
        %2f9 = #a7;
        jump %2f9;
    }

    proc #0cb {
        %7ff = #aa;
        jump %7ff;
    }

    proc #7b6 {
        %58 = "9";
        $sp = ($sp - %58);
        %df = "1";
        %1d0e = ($sp + %df);
        %04f = stack[%1d0e];
        jump %04f;
    }

    proc #24b9 {
        %cde = "6";
        %564 = ($sp - %cde);
        %f1d = stack[%564];
        %e6 = "5";
        %2ea = ($sp - %e6);
        %b1 = "0";
        %af9 = (%2ea + %b1);
        stack[%af9] = %f1d;
        %939 = #bca;
        jump %939;
    }

    proc #c81 {
        %382 = "6";
        %cc = ($sp - %382);
        %0aa = stack[%cc];
        %f0f = "1";
        %88e = (%0aa + %f0f);
        %a32 = "6";
        %14f = ($sp - %a32);
        %5ff = "0";
        %2f3 = (%14f + %5ff);
        stack[%2f3] = %88e;
        %960 = #aa;
        jump %960;
    }

    proc #e1 {
        %8a = "3";
        %6e = ($sp - %8a);
        %0e = "2";
        %91b = ($sp + %0e);
        stack[%91b] = %6e;
        %53 = "7";
        %41 = ($sp - %53);
        %fc6 = stack[%41];
        %2b5 = "3";
        %a3d = ($sp + %2b5);
        stack[%a3d] = %fc6;
        %4bf = "6";
        %548 = ($sp - %4bf);
        %207 = stack[%548];
        %eb7 = "4";
        %cd3 = ($sp + %eb7);
        stack[%cd3] = %207;
        %a8cc = "1";
        %28e = ($sp + %a8cc);
        %6cf = #65;
        stack[%28e] = %6cf;
        %aa0 = #4fd;
        jump %aa0;
    }

    proc #65 {
        %ed9 = "2";
        %e82 = ($sp - %ed9);
        %45 = "2";
        %291 = ($sp + %45);
        stack[%291] = %e82;
        %162 = "7";
        %3b5 = ($sp - %162);
        %dd8 = stack[%3b5];
        %d77 = "3";
        %100 = ($sp + %d77);
        stack[%100] = %dd8;
        %efc = "5";
        %ba = ($sp - %efc);
        %7d1 = stack[%ba];
        %917 = "4";
        %7a54 = ($sp + %917);
        stack[%7a54] = %7d1;
        %b837 = "1";
        %82d = ($sp + %b837);
        %ffc = #211;
        stack[%82d] = %ffc;
        %dd9 = #4fd;
        jump %dd9;
    }

    proc #211 {
        %3b3 = "3";
        %61d = ($sp - %3b3);
        %ceb = stack[%61d];
        %f0c = stack[%ceb];
        %197 = "1";
        %351 = ($sp - %197);
        %57 = "0";
        %330 = (%351 + %57);
        stack[%330] = %f0c;
        %c06 = "2";
        %2d50 = ($sp - %c06);
        %fd1 = stack[%2d50];
        %475 = stack[%fd1];
        %5b6 = "0";
        %10b = ($sp - %5b6);
        %263 = "0";
        %03a = (%10b + %263);
        stack[%03a] = %475;
        %9f1 = "0";
        %ce0 = ($sp - %9f1);
        %3bd = stack[%ce0];
        %2d9 = "1";
        %bfe6 = ($sp - %2d9);
        %1ab = stack[%bfe6];
        %fb = (%3bd < %1ab);
        %964 = #f1d4;
        %749 = #42f;
        if %fb then jump %964 else jump %749;
    }

    proc #42f {
        %683 = "5";
        %5b9 = ($sp - %683);
        %eb79 = stack[%5b9];
        %385 = "1";
        %8452 = (%eb79 + %385);
        %a32c = "5";
        %076 = ($sp - %a32c);
        %5dc = "0";
        %e9 = (%076 + %5dc);
        stack[%e9] = %8452;
        %891 = #bca;
        jump %891;
    }

    proc #f1d4 {
        %6e5 = "3";
        %38a = ($sp - %6e5);
        %b86 = stack[%38a];
        %98a = "2";
        %da = ($sp + %98a);
        stack[%da] = %b86;
        %eb9 = "2";
        %319 = ($sp - %eb9);
        %e87 = stack[%319];
        %faf = "3";
        %860 = ($sp + %faf);
        stack[%860] = %e87;
        %191 = "1";
        %e15 = ($sp + %191);
        %8a5 = #ca;
        stack[%e15] = %8a5;
        %0fc = #c9b;
        jump %0fc;
    }

    proc #ca {
        %a3f = #42f;
        jump %a3f;
    }

    proc #bca {
        %791 = "5";
        %f3 = ($sp - %791);
        %248 = stack[%f3];
        %6a9 = "4";
        %1f0 = ($sp - %6a9);
        %b01 = stack[%1f0];
        %59d = (%248 < %b01);
        %a570 = #e1;
        %5646 = #c81;
        if %59d then jump %a570 else jump %5646;
    }

    proc #aa {
        %007 = "6";
        %162c = ($sp - %007);
        %935 = stack[%162c];
        %29a = "4";
        %a48 = ($sp - %29a);
        %1e = stack[%a48];
        %e96 = (%935 < %1e);
        %099 = #24b9;
        %e03 = #7b6;
        if %e96 then jump %099 else jump %e03;
    }
}

func func.swap {
    proc #c9b {
        %06 = "4";
        $sp = ($sp + %06);
        %b8d2 = "2";
        %2ab = ($sp - %b8d2);
        %ac1 = stack[%2ab];
        %f58 = stack[%ac1];
        %8eb = "0";
        %8b1 = ($sp - %8eb);
        %220 = "0";
        %a2f = (%8b1 + %220);
        stack[%a2f] = %f58;
        %3a9e = "1";
        %771 = ($sp - %3a9e);
        %660 = stack[%771];
        %d91 = stack[%660];
        %aeb = "2";
        %9e = ($sp - %aeb);
        %a10 = stack[%9e];
        %b71 = "0";
        %bc2 = (%a10 + %b71);
        stack[%bc2] = %d91;
        %ae69 = "0";
        %c42 = ($sp - %ae69);
        %2f4 = stack[%c42];
        %169 = "1";
        %c5 = ($sp - %169);
        %ba1 = stack[%c5];
        %2e4 = "0";
        %b04 = (%ba1 + %2e4);
        stack[%b04] = %2f4;
        %5cc = "4";
        $sp = ($sp - %5cc);
        %a0d = "1";
        %b1f = ($sp + %a0d);
        %3f = stack[%b1f];
        jump %3f;
    }
}

func func.Vec_random_populate {
    proc #a4 {
        %63a = "7";
        $sp = ($sp + %63a);
        %377 = #b05;
        jump %377;
    }

    proc #be9 {
        %b3b = "7";
        $sp = ($sp - %b3b);
        %861 = "1";
        %f04 = ($sp + %861);
        %ba8 = stack[%f04];
        jump %ba8;
    }

    proc #43b {
        %b2c = "0";
        %f8e = ($sp - %b2c);
        %d4 = "2";
        %3a2 = ($sp + %d4);
        stack[%3a2] = %f8e;
        %6c9 = "3";
        %9849 = ($sp - %6c9);
        %bfa = stack[%9849];
        %162a = "3";
        %8f8 = ($sp + %162a);
        stack[%8f8] = %bfa;
        %eb3 = "2";
        %314 = ($sp - %eb3);
        %5af = stack[%314];
        %aebe = "4";
        %62b = ($sp + %aebe);
        stack[%62b] = %5af;
        %aab = "1";
        %0bd = ($sp + %aab);
        %8da = #338;
        stack[%0bd] = %8da;
        %0df = #e3cc;
        jump %0df;
    }

    proc #338 {
        %83b = "5";
        %cb7 = ($sp - %83b);
        %b99 = stack[%cb7];
        %b4d = "2";
        %f6 = ($sp + %b4d);
        stack[%f6] = %b99;
        %24c = "0";
        %87b = ($sp - %24c);
        %674 = stack[%87b];
        %536 = "3";
        %563 = ($sp + %536);
        stack[%563] = %674;
        %226 = "1";
        %b65 = ($sp + %226);
        %8f6 = #666;
        stack[%b65] = %8f6;
        %49b = #20;
        jump %49b;
    }

    proc #666 {
        %b12 = "1";
        %0e2 = ($sp - %b12);
        %a64 = stack[%0e2];
        %3e1 = "1";
        %215 = (%a64 + %3e1);
        %918 = "1";
        %fd4 = ($sp - %918);
        %b1b = "0";
        %8f3 = (%fd4 + %b1b);
        stack[%8f3] = %215;
        %d5b = #b05;
        jump %d5b;
    }

    proc #b05 {
        %a6c = "1";
        %a6b = ($sp - %a6c);
        %cfc = stack[%a6b];
        %965 = "4";
        %e821 = ($sp - %965);
        %55a = stack[%e821];
        %5ac = (%cfc < %55a);
        %242 = #43b;
        %4cf = #be9;
        if %5ac then jump %242 else jump %4cf;
    }
}

func func.out {
    proc #64 {
        %dd4 = "2";
        $sp = ($sp + %dd4);
        %e0e = "0";
        %b91 = ($sp - %e0e);
        %73a = stack[%b91];
        out %73a;
        %9d3 = "2";
        $sp = ($sp - %9d3);
        %b1f7 = "1";
        %c066 = ($sp + %b1f7);
        %e38 = stack[%c066];
        jump %e38;
    }
}

func func.in {
    proc #55d {
        %c54 = "3";
        $sp = ($sp + %c54);
        %6b2 = "0";
        %7ac = ($sp - %6b2);
        in;
        stack[%7ac] = $answer;
        %659 = "0";
        %b5e = ($sp - %659);
        %8ab = stack[%b5e];
        %581 = "1";
        %612 = ($sp - %581);
        %f93 = stack[%612];
        %1f6 = "0";
        %c00 = (%f93 + %1f6);
        stack[%c00] = %8ab;
        %3f2 = "3";
        $sp = ($sp - %3f2);
        %1ae = "1";
        %a1a = ($sp + %1ae);
        %1e1 = stack[%a1a];
        jump %1e1;
    }
}

func func.random_num {
    proc #e3cc {
        %3c4 = "5";
        $sp = ($sp + %3c4);
        %d65 = "0";
        %b27 = ($sp - %d65);
        %b3c = "2";
        %a3fa = ($sp - %b3c);
        %6ba = stack[%a3fa];
        %619 = "1";
        %5060 = ($sp - %619);
        %7df = stack[%5060];
        stack[%b27] = (%6ba <random> %7df);
        %43bb = "0";
        %34e = ($sp - %43bb);
        %ecb = stack[%34e];
        %874 = "3";
        %d6d6 = ($sp - %874);
        %785 = stack[%d6d6];
        %83f = "0";
        %512 = (%785 + %83f);
        stack[%512] = %ecb;
        %cfd = "5";
        $sp = ($sp - %cfd);
        %da1 = "1";
        %064 = ($sp + %da1);
        %14f1 = stack[%064];
        jump %14f1;
    }
}

func func.random_int {
    proc #7e9 {
        %dd2 = "5";
        $sp = ($sp + %dd2);
        %31e = "0";
        %539 = ($sp - %31e);
        %468 = "2";
        %696 = ($sp - %468);
        %452 = stack[%696];
        %5665 = "1";
        %9d4 = ($sp - %5665);
        %442 = stack[%9d4];
        stack[%539] = (%452 <random> %442);
        %015 = "0";
        %32c = ($sp - %015);
        %10bd = stack[%32c];
        %e68 = "3";
        %db3 = ($sp - %e68);
        %50e = stack[%db3];
        %f72 = "0";
        %37b = (%50e + %f72);
        stack[%37b] = %10bd;
        %41a = "5";
        $sp = ($sp - %41a);
        %0f0 = "1";
        %d3d = ($sp + %0f0);
        %0f2 = stack[%d3d];
        jump %0f2;
    }
}

func func.random_uint {
    proc #ff6 {
        %47c = "5";
        $sp = ($sp + %47c);
        %af8 = "0";
        %702 = ($sp - %af8);
        %446 = "2";
        %3e4 = ($sp - %446);
        %5f4 = stack[%3e4];
        %c2d3 = "1";
        %95 = ($sp - %c2d3);
        %e88 = stack[%95];
        stack[%702] = (%5f4 <random> %e88);
        %36e = "0";
        %364 = ($sp - %36e);
        %7ea = stack[%364];
        %b22 = "3";
        %22e = ($sp - %b22);
        %352 = stack[%22e];
        %575 = "0";
        %4743 = (%352 + %575);
        stack[%4743] = %7ea;
        %69c = "5";
        $sp = ($sp - %69c);
        %277 = "1";
        %879 = ($sp + %277);
        %bb5 = stack[%879];
        jump %bb5;
    }
}