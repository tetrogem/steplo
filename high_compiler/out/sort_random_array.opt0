main {
    proc #6b {
        $sp = "-1";
        %65 = #94;
        jump %65;
    }
}

func main {
    proc #94 {
        %bb = "103";
        $sp = ($sp + %bb);
        %ba = "2";
        %3b = ($sp - %ba);
        %b2 = "2";
        %1d = ($sp + %b2);
        stack[%1d] = %3b;
        %b2c = "101";
        %3a = ($sp - %b2c);
        %28 = "3";
        %fc = ($sp + %28);
        stack[%fc] = %3a;
        %a6 = "99";
        %76 = "4";
        %30 = ($sp + %76);
        stack[%30] = %a6;
        %34 = "0";
        %e8 = "5";
        %42 = ($sp + %e8);
        stack[%42] = %34;
        %01 = "1";
        %27 = ($sp + %01);
        %4f = #c6;
        stack[%27] = %4f;
        %f2 = #b9;
        jump %f2;
    }

    proc #c6 {
        %ca = "2";
        %ab = ($sp - %ca);
        %3bb = "2";
        %5b = ($sp + %3bb);
        stack[%5b] = %ab;
        %71 = "10";
        %56 = "3";
        %51 = ($sp + %56);
        stack[%51] = %71;
        %4fc = "-100";
        %3e = "4";
        %2d = ($sp + %3e);
        stack[%2d] = %4fc;
        %56f = "100";
        %c2 = "5";
        %f4 = ($sp + %c2);
        stack[%f4] = %56f;
        %1c = "1";
        %3f = ($sp + %1c);
        %e82 = #29;
        stack[%3f] = %e82;
        %38 = #8d;
        jump %38;
    }

    proc #29 {
        %52 = "Unsorted:";
        %da = "2";
        %8e = ($sp + %da);
        stack[%8e] = %52;
        %4c = "1";
        %df = ($sp + %4c);
        %12 = #a3;
        stack[%df] = %12;
        %3f0 = #48;
        jump %3f0;
    }

    proc #a3 {
        %8d7 = "2";
        %2e = ($sp - %8d7);
        %7d = "2";
        %44 = ($sp + %7d);
        stack[%44] = %2e;
        %df3 = "1";
        %6c = ($sp + %df3);
        %38b = #6be;
        stack[%6c] = %38b;
        %309 = #82;
        jump %309;
    }

    proc #6be {
        %aa = "Sorted:";
        %4e = "2";
        %56e = ($sp + %4e);
        stack[%56e] = %aa;
        %c8 = "1";
        %16 = ($sp + %c8);
        %40 = #7b;
        stack[%16] = %40;
        %64 = #48;
        jump %64;
    }

    proc #7b {
        %425 = "2";
        %f4d = ($sp - %425);
        %41 = "2";
        %33 = ($sp + %41);
        stack[%33] = %f4d;
        %2b = "1";
        %945 = ($sp + %2b);
        %87 = #304;
        stack[%945] = %87;
        %2c = #e4;
        jump %2c;
    }

    proc #304 {
        %a32 = "2";
        %d8 = ($sp - %a32);
        %ea = "2";
        %00 = ($sp + %ea);
        stack[%00] = %d8;
        %f0 = "1";
        %5d = ($sp + %f0);
        %7f = #f4b;
        stack[%5d] = %7f;
        %81 = #82;
        jump %81;
    }

    proc #f4b {
        %942 = "Pushing `12.5` then sorting again:";
        %31 = "2";
        %55 = ($sp + %31);
        stack[%55] = %942;
        %17 = "1";
        %646 = ($sp + %17);
        %ad = #14;
        stack[%646] = %ad;
        %29a = #48;
        jump %29a;
    }

    proc #14 {
        %91 = "2";
        %db = ($sp - %91);
        %58 = "2";
        %af = ($sp + %58);
        stack[%af] = %db;
        %77 = "12.5";
        %23 = "3";
        %a1 = ($sp + %23);
        stack[%a1] = %77;
        %ed = "1";
        %b0 = ($sp + %ed);
        %7b8 = #c25;
        stack[%b0] = %7b8;
        %57 = #0e;
        jump %57;
    }

    proc #c25 {
        %85 = "2";
        %5c = ($sp - %85);
        %0a = "2";
        %f9 = ($sp + %0a);
        stack[%f9] = %5c;
        %bf = "1";
        %59 = ($sp + %bf);
        %6d = #572;
        stack[%59] = %6d;
        %7bc = #e4;
        jump %7bc;
    }

    proc #572 {
        %bd = "2";
        %a8 = ($sp - %bd);
        %5a = "2";
        %bf1 = ($sp + %5a);
        stack[%bf1] = %a8;
        %c0 = "1";
        %a34 = ($sp + %c0);
        %123 = #014;
        stack[%a34] = %123;
        %dd = #82;
        jump %dd;
    }

    proc #014 {
        exit;
    }
}

func func.Vec_new {
    proc #b9 {
        %a1f = "5";
        $sp = ($sp + %a1f);
        %cb = "2";
        %b1 = ($sp - %cb);
        %06 = stack[%b1];
        %2cf = "3";
        %11 = ($sp - %2cf);
        %0e2 = stack[%11];
        %fa = "0";
        %e9 = (%0e2 + %fa);
        stack[%e9] = %06;
        %7c = "1";
        %f8 = ($sp - %7c);
        %53 = stack[%f8];
        %0d = "3";
        %a5 = ($sp - %0d);
        %69 = stack[%a5];
        %e5 = "1";
        %2f = (%69 + %e5);
        stack[%2f] = %53;
        %92 = "0";
        %2f8 = ($sp - %92);
        %3f1 = stack[%2f8];
        %d7 = "3";
        %6e = ($sp - %d7);
        %9e = stack[%6e];
        %713 = "2";
        %e42 = (%9e + %713);
        stack[%e42] = %3f1;
        %b8 = "5";
        $sp = ($sp - %b8);
        %a16 = "1";
        %283 = ($sp + %a16);
        %ed2 = stack[%283];
        jump %ed2;
    }
}

func func.Vec_entry {
    proc #48a {
        %fb = "4";
        $sp = ($sp + %fb);
        %d79 = "0";
        %299 = ($sp - %d79);
        %25 = stack[%299];
        %0ae = "0";
        %fc7 = "1";
        %5e = ($sp - %fc7);
        %d3 = stack[%5e];
        %1a = (%d3 + %0ae);
        %4d = stack[%1a];
        %ef = (%4d + %25);
        %03 = "2";
        %dd0 = ($sp - %03);
        %de = stack[%dd0];
        %f5 = "0";
        %c2d = (%de + %f5);
        stack[%c2d] = %ef;
        %7e = "4";
        $sp = ($sp - %7e);
        %e7 = "1";
        %910 = ($sp + %e7);
        %fc2 = stack[%910];
        jump %fc2;
    }
}

func func.Vec_cap {
    proc #3d {
        %dae = "3";
        $sp = ($sp + %dae);
        %56f5 = "1";
        %534 = "0";
        %df4 = ($sp - %534);
        %eb = stack[%df4];
        %54 = (%eb + %56f5);
        %36 = stack[%54];
        %4b = "1";
        %170 = ($sp - %4b);
        %b1c = stack[%170];
        %8b = "0";
        %35 = (%b1c + %8b);
        stack[%35] = %36;
        %3b8 = "3";
        $sp = ($sp - %3b8);
        %20 = "1";
        %877 = ($sp + %20);
        %a4 = stack[%877];
        jump %a4;
    }
}

func func.Vec_len_r {
    proc #d77 {
        %f22 = "3";
        $sp = ($sp + %f22);
        %bf8 = "2";
        %353 = "0";
        %5e9 = ($sp - %353);
        %c1 = stack[%5e9];
        %dc = (%c1 + %bf8);
        %4a = "1";
        %fb6 = ($sp - %4a);
        %445 = stack[%fb6];
        %1df = "0";
        %62 = (%445 + %1df);
        stack[%62] = %dc;
        %ec = "3";
        $sp = ($sp - %ec);
        %aac = "1";
        %90 = ($sp + %aac);
        %9f = stack[%90];
        jump %9f;
    }
}

func func.Vec_len {
    proc #bb5 {
        %2a = "4";
        $sp = ($sp + %2a);
        %4f6 = "0";
        %55c = ($sp - %4f6);
        %dc7 = "2";
        %567 = ($sp + %dc7);
        stack[%567] = %55c;
        %e3 = "1";
        %d32 = ($sp - %e3);
        %dc7b = stack[%d32];
        %cbf = "3";
        %2b8 = ($sp + %cbf);
        stack[%2b8] = %dc7b;
        %d7c = "1";
        %69a = ($sp + %d7c);
        %3dc = #50;
        stack[%69a] = %3dc;
        %f1 = #d77;
        jump %f1;
    }

    proc #50 {
        %83 = "0";
        %5eb = ($sp - %83);
        %85c = stack[%5eb];
        %c16 = stack[%85c];
        %a9 = "2";
        %bd7 = ($sp - %a9);
        %b7 = stack[%bd7];
        %21 = "0";
        %be = (%b7 + %21);
        stack[%be] = %c16;
        %cd = "4";
        $sp = ($sp - %cd);
        %77f = "1";
        %14f = ($sp + %77f);
        %b10 = stack[%14f];
        jump %b10;
    }
}

func func.Vec_push {
    proc #0e {
        %78 = "7";
        $sp = ($sp + %78);
        %6f = "3";
        %dd3 = ($sp - %6f);
        %6b2 = "2";
        %34b = ($sp + %6b2);
        stack[%34b] = %dd3;
        %2ec = "5";
        %c7 = ($sp - %2ec);
        %53a = stack[%c7];
        %8e7 = "3";
        %ea6 = ($sp + %8e7);
        stack[%ea6] = %53a;
        %b83 = "1";
        %64a = ($sp + %b83);
        %45 = #14c;
        stack[%64a] = %45;
        %e6 = #3d;
        jump %e6;
    }

    proc #14c {
        %13 = "2";
        %88 = ($sp - %13);
        %75 = "2";
        %f2a = ($sp + %75);
        stack[%f2a] = %88;
        %5b5 = "5";
        %401 = ($sp - %5b5);
        %940 = stack[%401];
        %af7 = "3";
        %b93 = ($sp + %af7);
        stack[%b93] = %940;
        %1c2 = "1";
        %c5 = ($sp + %1c2);
        %a9a = #e63;
        stack[%c5] = %a9a;
        %c13 = #bb5;
        jump %c13;
    }

    proc #e63 {
        %758 = "2";
        %9a = ($sp - %758);
        %c25b = stack[%9a];
        %2d4 = "3";
        %b86 = ($sp - %2d4);
        %9c = stack[%b86];
        %424 = (%c25b < %9c);
        %0d7 = #49;
        %e8c = #59e;
        if %424 then jump %0d7 else jump %e8c;
    }

    proc #59e {
        %4d9 = "7";
        $sp = ($sp - %4d9);
        %3c = "1";
        %038 = ($sp + %3c);
        %be9 = stack[%038];
        jump %be9;
    }

    proc #49 {
        %420 = "1";
        %52b = ($sp - %420);
        %f5b = "2";
        %649 = ($sp + %f5b);
        stack[%649] = %52b;
        %0d8 = "5";
        %24 = ($sp - %0d8);
        %fc3 = stack[%24];
        %2cb = "3";
        %f5a = ($sp + %2cb);
        stack[%f5a] = %fc3;
        %0c = "2";
        %b13 = ($sp - %0c);
        %7d8 = stack[%b13];
        %32 = "4";
        %c27 = ($sp + %32);
        stack[%c27] = %7d8;
        %3cf = "1";
        %c4 = ($sp + %3cf);
        %19 = #ee;
        stack[%c4] = %19;
        %889 = #48a;
        jump %889;
    }

    proc #ee {
        %9b = "4";
        %c69 = ($sp - %9b);
        %d34 = stack[%c69];
        %80 = "1";
        %9e3 = ($sp - %80);
        %f03 = stack[%9e3];
        %3bf = "0";
        %133 = (%f03 + %3bf);
        stack[%133] = %d34;
        %9ca = "0";
        %7b3 = ($sp - %9ca);
        %dbf = "2";
        %70 = ($sp + %dbf);
        stack[%70] = %7b3;
        %cf = "5";
        %2fb = ($sp - %cf);
        %8a = stack[%2fb];
        %a7 = "3";
        %21e = ($sp + %a7);
        stack[%21e] = %8a;
        %364 = "1";
        %10 = ($sp + %364);
        %580 = #0b;
        stack[%10] = %580;
        %d3f = #d77;
        jump %d3f;
    }

    proc #0b {
        %d3e = "2";
        %60 = ($sp - %d3e);
        %30d = stack[%60];
        %43 = "1";
        %dce = (%30d + %43);
        %ef9 = "0";
        %a2 = ($sp - %ef9);
        %289 = stack[%a2];
        %eac = "0";
        %819 = (%289 + %eac);
        stack[%819] = %dce;
        %ce = #59e;
        jump %ce;
    }
}

func func.Vec_print {
    proc #82 {
        %52a = "6";
        $sp = ($sp + %52a);
        %05 = "0";
        %a56 = "3";
        %138 = ($sp - %a56);
        %f81 = "0";
        %909 = (%138 + %f81);
        stack[%909] = %05;
        %75d = "Vec (";
        %2d1 = "0";
        %6bc = ($sp - %2d1);
        %759 = "0";
        %f24 = (%6bc + %759);
        stack[%f24] = %75d;
        %74 = "2";
        %f14 = ($sp - %74);
        %b08 = "2";
        %5bc = ($sp + %b08);
        stack[%5bc] = %f14;
        %a90 = "4";
        %143 = ($sp - %a90);
        %511 = stack[%143];
        %42a = "3";
        %6ff = ($sp + %42a);
        stack[%6ff] = %511;
        %b6 = "1";
        %e44 = ($sp + %b6);
        %f3 = #308;
        stack[%e44] = %f3;
        %9e5 = #bb5;
        jump %9e5;
    }

    proc #308 {
        %f58 = "0";
        %bbd = ($sp - %f58);
        %08 = stack[%bbd];
        %b0d = "2";
        %243 = ($sp - %b0d);
        %5c2 = stack[%243];
        %c131 = (%08 ~ %5c2);
        %98 = "0";
        %112 = ($sp - %98);
        %67 = "0";
        %5b2 = (%112 + %67);
        stack[%5b2] = %c131;
        %c07 = "0";
        %00c = ($sp - %c07);
        %1c4 = stack[%00c];
        %445e = ") ";
        %8c = (%1c4 ~ %445e);
        %57b = "0";
        %9405 = ($sp - %57b);
        %55b = "0";
        %714 = (%9405 + %55b);
        stack[%714] = %8c;
        %ba9 = #622;
        jump %ba9;
    }

    proc #2d5 {
        %c9 = "0";
        %f0b = ($sp - %c9);
        %be5 = stack[%f0b];
        %273 = "2";
        %1b = ($sp + %273);
        stack[%1b] = %be5;
        %259 = "1";
        %e3e = ($sp + %259);
        %b84 = #c3;
        stack[%e3e] = %b84;
        %d72 = #48;
        jump %d72;
    }

    proc #c3 {
        %4b6 = "6";
        $sp = ($sp - %4b6);
        %7d4 = "1";
        %aae = ($sp + %7d4);
        %df9 = stack[%aae];
        jump %df9;
    }

    proc #c45 {
        %e2 = "3";
        %1e = ($sp - %e2);
        %37 = stack[%1e];
        %4d2 = "0";
        %e90 = (!(%37 == %4d2));
        %00d = #192;
        %56c = #5f;
        if %e90 then jump %00d else jump %56c;
    }

    proc #5f {
        %46 = "1";
        %6a = ($sp - %46);
        %8a7 = "2";
        %eb1 = ($sp + %8a7);
        stack[%eb1] = %6a;
        %d1 = "4";
        %dde = ($sp - %d1);
        %8c3 = stack[%dde];
        %6e0 = "3";
        %4a4 = ($sp + %6e0);
        stack[%4a4] = %8c3;
        %61 = "3";
        %cba = ($sp - %61);
        %fc8 = stack[%cba];
        %d0 = "4";
        %afd = ($sp + %d0);
        stack[%afd] = %fc8;
        %315 = "1";
        %b1f = ($sp + %315);
        %80a = #ecd;
        stack[%b1f] = %80a;
        %cb0 = #48a;
        jump %cb0;
    }

    proc #ecd {
        %1bc = "0";
        %9bb = ($sp - %1bc);
        %3e3 = stack[%9bb];
        %c9b = "1";
        %aba = ($sp - %c9b);
        %c4a = stack[%aba];
        %e60 = stack[%c4a];
        %a79 = (%3e3 ~ %e60);
        %1cf = "0";
        %15 = ($sp - %1cf);
        %bf7 = "0";
        %7a = (%15 + %bf7);
        stack[%7a] = %a79;
        %41f = "3";
        %41c = ($sp - %41f);
        %1b3 = stack[%41c];
        %2d0 = "1";
        %465 = (%1b3 + %2d0);
        %a13 = "3";
        %e7e = ($sp - %a13);
        %01b = "0";
        %e79 = (%e7e + %01b);
        stack[%e79] = %465;
        %ce8 = #622;
        jump %ce8;
    }

    proc #192 {
        %6fa = "0";
        %235 = ($sp - %6fa);
        %98c = stack[%235];
        %f54 = ", ";
        %b3 = (%98c ~ %f54);
        %d9 = "0";
        %a7a = ($sp - %d9);
        %dc6 = "0";
        %12a = (%a7a + %dc6);
        stack[%12a] = %b3;
        %690 = #5f;
        jump %690;
    }

    proc #622 {
        %1cc = "3";
        %b933 = ($sp - %1cc);
        %0f = stack[%b933];
        %a36 = "2";
        %24b = ($sp - %a36);
        %93 = stack[%24b];
        %273b = (%0f < %93);
        %596 = #c45;
        %4b7 = #2d5;
        if %273b then jump %596 else jump %4b7;
    }
}

func func.Vec_sort {
    proc #e4 {
        %9a7 = "9";
        $sp = ($sp + %9a7);
        %ff = "0";
        %89 = "6";
        %055 = ($sp - %89);
        %b100 = "0";
        %214 = (%055 + %b100);
        stack[%214] = %ff;
        %5ff = "4";
        %db2 = ($sp - %5ff);
        %5bf = "2";
        %1aa = ($sp + %5bf);
        stack[%1aa] = %db2;
        %c10 = "7";
        %a20 = ($sp - %c10);
        %ea9 = stack[%a20];
        %43f = "3";
        %14a = ($sp + %43f);
        stack[%14a] = %ea9;
        %39 = "1";
        %bde = ($sp + %39);
        %4d1 = #921;
        stack[%bde] = %4d1;
        %61e = #bb5;
        jump %61e;
    }

    proc #921 {
        %7fa = #7ca;
        jump %7fa;
    }

    proc #e7f {
        %c272 = "9";
        $sp = ($sp - %c272);
        %abe = "1";
        %b1b = ($sp + %abe);
        %b5 = stack[%b1b];
        jump %b5;
    }

    proc #6d9 {
        %ed8 = "6";
        %bad = ($sp - %ed8);
        %f25 = stack[%bad];
        %a6d = "5";
        %72 = ($sp - %a6d);
        %f41 = "0";
        %4eb = (%72 + %f41);
        stack[%4eb] = %f25;
        %c85 = #eb7;
        jump %c85;
    }

    proc #aa1 {
        %b98 = "6";
        %065 = ($sp - %b98);
        %de8 = stack[%065];
        %a9a6 = "1";
        %4c6 = (%de8 + %a9a6);
        %be7 = "6";
        %bc = ($sp - %be7);
        %a0 = "0";
        %22 = (%bc + %a0);
        stack[%22] = %4c6;
        %ada = #7ca;
        jump %ada;
    }

    proc #38e {
        %2a9 = "3";
        %a52 = ($sp - %2a9);
        %1330 = "2";
        %e3a = ($sp + %1330);
        stack[%e3a] = %a52;
        %81b = "7";
        %80f = ($sp - %81b);
        %59a = stack[%80f];
        %ebf = "3";
        %375 = ($sp + %ebf);
        stack[%375] = %59a;
        %68 = "6";
        %85e = ($sp - %68);
        %dd01 = stack[%85e];
        %3bb9 = "4";
        %d35 = ($sp + %3bb9);
        stack[%d35] = %dd01;
        %d08 = "1";
        %c8f = ($sp + %d08);
        %e86 = #f6;
        stack[%c8f] = %e86;
        %da5 = #48a;
        jump %da5;
    }

    proc #f6 {
        %b3a = "2";
        %27f = ($sp - %b3a);
        %36d = "2";
        %412 = ($sp + %36d);
        stack[%412] = %27f;
        %fe = "7";
        %84 = ($sp - %fe);
        %f6b = stack[%84];
        %f0d = "3";
        %a74 = ($sp + %f0d);
        stack[%a74] = %f6b;
        %553 = "5";
        %87a = ($sp - %553);
        %89c = stack[%87a];
        %a1d = "4";
        %d4 = ($sp + %a1d);
        stack[%d4] = %89c;
        %c76 = "1";
        %e4e = ($sp + %c76);
        %d07 = #e29;
        stack[%e4e] = %d07;
        %02 = #48a;
        jump %02;
    }

    proc #e29 {
        %a34b = "3";
        %add = ($sp - %a34b);
        %48c = stack[%add];
        %13b = stack[%48c];
        %db8 = "1";
        %6a0 = ($sp - %db8);
        %addd = "0";
        %be6 = (%6a0 + %addd);
        stack[%be6] = %13b;
        %fb2 = "2";
        %d95 = ($sp - %fb2);
        %02d = stack[%d95];
        %626 = stack[%02d];
        %571 = "0";
        %751 = ($sp - %571);
        %cc = "0";
        %947 = (%751 + %cc);
        stack[%947] = %626;
        %509 = "0";
        %9c1 = ($sp - %509);
        %94c = stack[%9c1];
        %875 = "1";
        %5f3 = ($sp - %875);
        %f4f = stack[%5f3];
        %aa0 = (%94c < %f4f);
        %143f = #45f;
        %391 = #a1e;
        if %aa0 then jump %143f else jump %391;
    }

    proc #a1e {
        %c01 = "5";
        %cfa = ($sp - %c01);
        %29d = stack[%cfa];
        %6a05 = "1";
        %f2e = (%29d + %6a05);
        %c57 = "5";
        %0c8 = ($sp - %c57);
        %f4a = "0";
        %9c1b = (%0c8 + %f4a);
        stack[%9c1b] = %f2e;
        %3a3 = #eb7;
        jump %3a3;
    }

    proc #45f {
        %40e = "3";
        %ee6 = ($sp - %40e);
        %2736 = stack[%ee6];
        %34f = "2";
        %b4 = ($sp + %34f);
        stack[%b4] = %2736;
        %a19 = "2";
        %3754 = ($sp - %a19);
        %ccd = stack[%3754];
        %287 = "3";
        %61e3 = ($sp + %287);
        stack[%61e3] = %ccd;
        %7df = "1";
        %8d9 = ($sp + %7df);
        %3bd = #27c;
        stack[%8d9] = %3bd;
        %c1c = #c65;
        jump %c1c;
    }

    proc #27c {
        %ae = #a1e;
        jump %ae;
    }

    proc #eb7 {
        %1f = "5";
        %109 = ($sp - %1f);
        %d19 = stack[%109];
        %a38 = "4";
        %2b4 = ($sp - %a38);
        %2f83 = stack[%2b4];
        %a61 = (%d19 < %2f83);
        %418 = #38e;
        %0c2 = #aa1;
        if %a61 then jump %418 else jump %0c2;
    }

    proc #7ca {
        %15d = "6";
        %a72 = ($sp - %15d);
        %840 = stack[%a72];
        %2e9 = "4";
        %abd = ($sp - %2e9);
        %e5e = stack[%abd];
        %3bfd = (%840 < %e5e);
        %7a9 = #6d9;
        %b7b = #e7f;
        if %3bfd then jump %7a9 else jump %b7b;
    }
}

func func.swap {
    proc #c65 {
        %70d = "4";
        $sp = ($sp + %70d);
        %fe8 = "2";
        %7be = ($sp - %fe8);
        %c67 = stack[%7be];
        %6f6 = stack[%c67];
        %0a5 = "0";
        %4c3 = ($sp - %0a5);
        %e7fa = "0";
        %812 = (%4c3 + %e7fa);
        stack[%812] = %6f6;
        %d14 = "1";
        %218 = ($sp - %d14);
        %c7c = stack[%218];
        %42a8 = stack[%c7c];
        %718 = "2";
        %b32 = ($sp - %718);
        %77a = stack[%b32];
        %1b8 = "0";
        %6cf = (%77a + %1b8);
        stack[%6cf] = %42a8;
        %76c = "0";
        %3ff = ($sp - %76c);
        %36e = stack[%3ff];
        %296 = "1";
        %25f = ($sp - %296);
        %f7 = stack[%25f];
        %5c1 = "0";
        %9d = (%f7 + %5c1);
        stack[%9d] = %36e;
        %b15 = "4";
        $sp = ($sp - %b15);
        %37b = "1";
        %6a08 = ($sp + %37b);
        %a06 = stack[%6a08];
        jump %a06;
    }
}

func func.Vec_random_populate {
    proc #8d {
        %a67 = "7";
        $sp = ($sp + %a67);
        %f46 = #09;
        jump %f46;
    }

    proc #083 {
        %45a = "7";
        $sp = ($sp - %45a);
        %ad0 = "1";
        %b26 = ($sp + %ad0);
        %b22 = stack[%b26];
        jump %b22;
    }

    proc #920 {
        %18 = "0";
        %368 = ($sp - %18);
        %f3e = "2";
        %dcc = ($sp + %f3e);
        stack[%dcc] = %368;
        %60c = "3";
        %4f7 = ($sp - %60c);
        %221 = stack[%4f7];
        %768 = "3";
        %c29 = ($sp + %768);
        stack[%c29] = %221;
        %c95 = "2";
        %ab7 = ($sp - %c95);
        %f94 = stack[%ab7];
        %2d46 = "4";
        %e8c1 = ($sp + %2d46);
        stack[%e8c1] = %f94;
        %7a1 = "1";
        %501 = ($sp + %7a1);
        %66 = #72f;
        stack[%501] = %66;
        %5bd = #336;
        jump %5bd;
    }

    proc #72f {
        %c94 = "5";
        %75a = ($sp - %c94);
        %786 = stack[%75a];
        %210 = "2";
        %6fb = ($sp + %210);
        stack[%6fb] = %786;
        %d8e = "0";
        %0b5 = ($sp - %d8e);
        %8da = stack[%0b5];
        %ec3 = "3";
        %58e = ($sp + %ec3);
        stack[%58e] = %8da;
        %6f5 = "1";
        %1432 = ($sp + %6f5);
        %35a = #50c;
        stack[%1432] = %35a;
        %79 = #0e;
        jump %79;
    }

    proc #50c {
        %2e1 = "1";
        %27e = ($sp - %2e1);
        %451 = stack[%27e];
        %2dd = "1";
        %ff3 = (%451 + %2dd);
        %d2 = "1";
        %513 = ($sp - %d2);
        %f9d = "0";
        %9c9 = (%513 + %f9d);
        stack[%9c9] = %ff3;
        %f39 = #09;
        jump %f39;
    }

    proc #09 {
        %61c = "1";
        %ee9 = ($sp - %61c);
        %9f6 = stack[%ee9];
        %407 = "4";
        %eb77 = ($sp - %407);
        %c22 = stack[%eb77];
        %2a3 = (%9f6 < %c22);
        %99 = #920;
        %883 = #083;
        if %2a3 then jump %99 else jump %883;
    }
}

func func.out {
    proc #48 {
        %c6d = "2";
        $sp = ($sp + %c6d);
        %f19 = "0";
        %7da = ($sp - %f19);
        %d8d = stack[%7da];
        out %d8d;
        %23d = "2";
        $sp = ($sp - %23d);
        %7ab = "1";
        %c62 = ($sp + %7ab);
        %b56 = stack[%c62];
        jump %b56;
    }
}

func func.in {
    proc #be7c {
        %c15 = "3";
        $sp = ($sp + %c15);
        %0d4 = "0";
        %88f = ($sp - %0d4);
        in;
        stack[%88f] = $answer;
        %00e = "0";
        %e0 = ($sp - %00e);
        %3ac = stack[%e0];
        %bcb = "1";
        %371 = ($sp - %bcb);
        %d45 = stack[%371];
        %188 = "0";
        %7ab4 = (%d45 + %188);
        stack[%7ab4] = %3ac;
        %52c = "3";
        $sp = ($sp - %52c);
        %76a = "1";
        %216 = ($sp + %76a);
        %e5b = stack[%216];
        jump %e5b;
    }
}

func func.random_num {
    proc #336 {
        %914 = "5";
        $sp = ($sp + %914);
        %9401 = "0";
        %6e9 = ($sp - %9401);
        %033 = "0.0";
        %892 = "1.0";
        stack[%6e9] = (%033 <random> %892);
        %ac = "2";
        %dbb = ($sp - %ac);
        %58a = stack[%dbb];
        %24c = "0";
        %b76 = ($sp - %24c);
        %d7f = stack[%b76];
        %ab0 = "1";
        %2fd = ($sp - %ab0);
        %0e1 = stack[%2fd];
        %48d = "2";
        %4e9 = ($sp - %48d);
        %e3f = stack[%4e9];
        %96 = (%0e1 - %e3f);
        %59f = (%d7f * %96);
        %97 = (%58a + %59f);
        %cc6 = "3";
        %29f = ($sp - %cc6);
        %930 = stack[%29f];
        %6ea = "0";
        %5bf0 = (%930 + %6ea);
        stack[%5bf0] = %97;
        %06e = "5";
        $sp = ($sp - %06e);
        %5d8 = "1";
        %97e = ($sp + %5d8);
        %403 = stack[%97e];
        jump %403;
    }
}

func func.random_int {
    proc #1d3 {
        %2a5 = "5";
        $sp = ($sp + %2a5);
        %6c2 = "0";
        %930c = ($sp - %6c2);
        %9db = "2";
        %48cb = ($sp - %9db);
        %f60 = stack[%48cb];
        %e3a1 = "1";
        %f91 = ($sp - %e3a1);
        %b5f = stack[%f91];
        stack[%930c] = (%f60 <random> %b5f);
        %48c1 = "0";
        %ab4 = ($sp - %48c1);
        %e3ef = stack[%ab4];
        %e48 = "3";
        %9fe = ($sp - %e48);
        %5ce = stack[%9fe];
        %f05 = "0";
        %dd4 = (%5ce + %f05);
        stack[%dd4] = %e3ef;
        %63 = "5";
        $sp = ($sp - %63);
        %e2d = "1";
        %4f7c = ($sp + %e2d);
        %8ae = stack[%4f7c];
        jump %8ae;
    }
}

func func.random_uint {
    proc #b27 {
        %af4 = "5";
        $sp = ($sp + %af4);
        %2e2 = "0";
        %e99 = ($sp - %2e2);
        %3e35 = "2";
        %5d4 = ($sp - %3e35);
        %f18 = stack[%5d4];
        %d29 = "1";
        %b1d = ($sp - %d29);
        %85ef = stack[%b1d];
        stack[%e99] = (%f18 <random> %85ef);
        %57a = "0";
        %784 = ($sp - %57a);
        %bd1 = stack[%784];
        %546 = "3";
        %1d8 = ($sp - %546);
        %1fc = stack[%1d8];
        %ae5 = "0";
        %d6 = (%1fc + %ae5);
        stack[%d6] = %bd1;
        %405 = "5";
        $sp = ($sp - %405);
        %f04 = "1";
        %9cf = ($sp + %f04);
        %6a4 = stack[%9cf];
        jump %6a4;
    }
}