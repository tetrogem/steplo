main {
    proc #8c {
        $sp = "-1";
        %e3 = #8f;
        jump %e3;
    }
}

func main {
    proc #8f {
        %43 = "103";
        $sp = ($sp + %43);
        %86 = "2";
        %08 = ($sp - %86);
        %2c = "2";
        %db = ($sp + %2c);
        stack[%db] = %08;
        %47 = "101";
        %83 = ($sp - %47);
        %29 = "3";
        %3c = ($sp + %29);
        stack[%3c] = %83;
        %91 = "99";
        %10 = "4";
        %3a = ($sp + %10);
        stack[%3a] = %91;
        %16 = "0";
        %8d = "5";
        %13 = ($sp + %8d);
        stack[%13] = %16;
        %1a = "1";
        %34 = ($sp + %1a);
        %26 = #4c;
        stack[%34] = %26;
        %a0 = #39;
        jump %a0;
    }

    proc #4c {
        %d6 = "2";
        %85 = ($sp - %d6);
        %5a = "2";
        %a7 = ($sp + %5a);
        stack[%a7] = %85;
        %68 = "10";
        %12 = "3";
        %97 = ($sp + %12);
        stack[%97] = %68;
        %f9 = "-100";
        %4f = "4";
        %fd = ($sp + %4f);
        stack[%fd] = %f9;
        %cf = "100";
        %f8 = "5";
        %79 = ($sp + %f8);
        stack[%79] = %cf;
        %0c = "1";
        %fa = ($sp + %0c);
        %90 = #d2;
        stack[%fa] = %90;
        %7b = #0f;
        jump %7b;
    }

    proc #d2 {
        %44 = "Unsorted:";
        %98 = "2";
        %8d3 = ($sp + %98);
        stack[%8d3] = %44;
        %ae = "1";
        %ad = ($sp + %ae);
        %82 = #444;
        stack[%ad] = %82;
        %9a = #36;
        jump %9a;
    }

    proc #444 {
        %9c = "2";
        %59 = ($sp - %9c);
        %435 = "2";
        %63 = ($sp + %435);
        stack[%63] = %59;
        %bd = "1";
        %a5 = ($sp + %bd);
        %8a = #8fc;
        stack[%a5] = %8a;
        %78 = #e5;
        jump %78;
    }

    proc #8fc {
        %d3 = "Sorted:";
        %a2 = "2";
        %ae7 = ($sp + %a2);
        stack[%ae7] = %d3;
        %62 = "1";
        %3d = ($sp + %62);
        %c0 = #50;
        stack[%3d] = %c0;
        %ff = #36;
        jump %ff;
    }

    proc #50 {
        %ab = "2";
        %cb = ($sp - %ab);
        %16f = "2";
        %e9 = ($sp + %16f);
        stack[%e9] = %cb;
        %0cc = "1";
        %09 = ($sp + %0cc);
        %91a = #a3;
        stack[%09] = %91a;
        %da = #ad3;
        jump %da;
    }

    proc #a3 {
        %163 = "2";
        %32 = ($sp - %163);
        %05 = "2";
        %0e = ($sp + %05);
        stack[%0e] = %32;
        %e1 = "1";
        %d1 = ($sp + %e1);
        %2ce = #d0;
        stack[%d1] = %2ce;
        %f6 = #e5;
        jump %f6;
    }

    proc #d0 {
        %bf = "Pushing `12.5` then sorting again:";
        %1c = "2";
        %430 = ($sp + %1c);
        stack[%430] = %bf;
        %a6 = "1";
        %9f = ($sp + %a6);
        %a9 = #bc;
        stack[%9f] = %a9;
        %e2 = #36;
        jump %e2;
    }

    proc #bc {
        %a05 = "2";
        %3ac = ($sp - %a05);
        %973 = "2";
        %a1 = ($sp + %973);
        stack[%a1] = %3ac;
        %e6 = "12.5";
        %fe = "3";
        %52 = ($sp + %fe);
        stack[%52] = %e6;
        %22 = "1";
        %6e = ($sp + %22);
        %b3 = #c1;
        stack[%6e] = %b3;
        %8e = #d7;
        jump %8e;
    }

    proc #c1 {
        %822 = "2";
        %f5 = ($sp - %822);
        %f4 = "2";
        %1d = ($sp + %f4);
        stack[%1d] = %f5;
        %64 = "1";
        %41 = ($sp + %64);
        %443 = #95;
        stack[%41] = %443;
        %58 = #ad3;
        jump %58;
    }

    proc #95 {
        %a53 = "2";
        %74 = ($sp - %a53);
        %1b = "2";
        %907 = ($sp + %1b);
        stack[%907] = %74;
        %649 = "1";
        %5ac = ($sp + %649);
        %6d = #919;
        stack[%5ac] = %6d;
        %dae = #e5;
        jump %dae;
    }

    proc #919 {
        exit;
    }
}

func func.Vec_new {
    proc #39 {
        %14 = "5";
        $sp = ($sp + %14);
        %3c2 = "2";
        %a4 = ($sp - %3c2);
        %11 = stack[%a4];
        %64a = "3";
        %92 = ($sp - %64a);
        %fd2 = stack[%92];
        %ff1 = "0";
        %37 = (%fd2 + %ff1);
        stack[%37] = %11;
        %30 = "1";
        %3f = ($sp - %30);
        %9e = stack[%3f];
        %4a = "3";
        %04 = ($sp - %4a);
        %db3 = stack[%04];
        %f66 = "1";
        %921 = (%db3 + %f66);
        stack[%921] = %9e;
        %f93 = "0";
        %7a = ($sp - %f93);
        %d60 = stack[%7a];
        %c5 = "3";
        %e2a = ($sp - %c5);
        %c55 = stack[%e2a];
        %c6 = "2";
        %b1 = (%c55 + %c6);
        stack[%b1] = %d60;
        %349 = "5";
        $sp = ($sp - %349);
        %e0 = "1";
        %8d9 = ($sp + %e0);
        %00 = stack[%8d9];
        jump %00;
    }
}

func func.Vec_entry {
    proc #80 {
        %0b = "4";
        $sp = ($sp + %0b);
        %20 = "0";
        %60 = ($sp - %20);
        %35 = stack[%60];
        %02 = "0";
        %23 = "1";
        %9b = ($sp - %23);
        %826 = stack[%9b];
        %a93 = (%826 + %02);
        %14e = stack[%a93];
        %680 = (%14e + %35);
        %9ea = "2";
        %8b = ($sp - %9ea);
        %20c = stack[%8b];
        %5c = "0";
        %ba = (%20c + %5c);
        stack[%ba] = %680;
        %79e = "4";
        $sp = ($sp - %79e);
        %808 = "1";
        %f9e = ($sp + %808);
        %db1 = stack[%f9e];
        jump %db1;
    }
}

func func.Vec_cap {
    proc #ea {
        %a3a = "3";
        $sp = ($sp + %a3a);
        %b8 = "1";
        %94 = "0";
        %30f = ($sp - %94);
        %0bf = stack[%30f];
        %72 = (%0bf + %b8);
        %70 = stack[%72];
        %c8 = "1";
        %07 = ($sp - %c8);
        %ef = stack[%07];
        %2cd = "0";
        %00d = (%ef + %2cd);
        stack[%00d] = %70;
        %41f = "3";
        $sp = ($sp - %41f);
        %9b6 = "1";
        %de = ($sp + %9b6);
        %62b = stack[%de];
        jump %62b;
    }
}

func func.Vec_len_r {
    proc #2d {
        %393 = "3";
        $sp = ($sp + %393);
        %f81 = "2";
        %53 = "0";
        %83d = ($sp - %53);
        %7ab = stack[%83d];
        %f57 = (%7ab + %f81);
        %74b = "1";
        %8e0 = ($sp - %74b);
        %093 = stack[%8e0];
        %344 = "0";
        %07b = (%093 + %344);
        stack[%07b] = %f57;
        %c7 = "3";
        $sp = ($sp - %c7);
        %43e = "1";
        %d5 = ($sp + %43e);
        %be = stack[%d5];
        jump %be;
    }
}

func func.Vec_len {
    proc #03 {
        %bc0 = "4";
        $sp = ($sp + %bc0);
        %1a0 = "0";
        %20e = ($sp - %1a0);
        %e98 = "2";
        %a13 = ($sp + %e98);
        stack[%a13] = %20e;
        %2dd = "1";
        %c6f = ($sp - %2dd);
        %3b = stack[%c6f];
        %dbe = "3";
        %a4c = ($sp + %dbe);
        stack[%a4c] = %3b;
        %15 = "1";
        %bfd = ($sp + %15);
        %471 = #5f;
        stack[%bfd] = %471;
        %200 = #2d;
        jump %200;
    }

    proc #5f {
        %78b = "0";
        %e05 = ($sp - %78b);
        %a09 = stack[%e05];
        %35f = stack[%a09];
        %a46 = "2";
        %2a = ($sp - %a46);
        %1d3 = stack[%2a];
        %cc = "0";
        %75 = (%1d3 + %cc);
        stack[%75] = %35f;
        %33 = "4";
        $sp = ($sp - %33);
        %17 = "1";
        %82f = ($sp + %17);
        %c73 = stack[%82f];
        jump %c73;
    }
}

func func.Vec_push {
    proc #d7 {
        %b2 = "7";
        $sp = ($sp + %b2);
        %25 = "3";
        %df = ($sp - %25);
        %99 = "2";
        %6c = ($sp + %99);
        stack[%6c] = %df;
        %19 = "5";
        %d69 = ($sp - %19);
        %cd = stack[%d69];
        %5a3 = "3";
        %d4 = ($sp + %5a3);
        stack[%d4] = %cd;
        %3c23 = "1";
        %1ce = ($sp + %3c23);
        %2f = #4e;
        stack[%1ce] = %2f;
        %a8 = #ea;
        jump %a8;
    }

    proc #4e {
        %5e = "2";
        %28 = ($sp - %5e);
        %704 = "2";
        %851 = ($sp + %704);
        stack[%851] = %28;
        %833 = "5";
        %d8 = ($sp - %833);
        %b4 = stack[%d8];
        %b1f = "3";
        %3c9 = ($sp + %b1f);
        stack[%3c9] = %b4;
        %e54 = "1";
        %b42 = ($sp + %e54);
        %252 = #139;
        stack[%b42] = %252;
        %c74 = #03;
        jump %c74;
    }

    proc #139 {
        %e6f = "2";
        %28d = ($sp - %e6f);
        %351 = stack[%28d];
        %f91 = "3";
        %57 = ($sp - %f91);
        %8cd = stack[%57];
        %02e = (%351 < %8cd);
        %9a4 = #5b;
        %25e = #a10;
        if %02e then jump %9a4 else jump %25e;
    }

    proc #a10 {
        %aa = "7";
        $sp = ($sp - %aa);
        %1d5 = "1";
        %ba2 = ($sp + %1d5);
        %84 = stack[%ba2];
        jump %84;
    }

    proc #5b {
        %3e = "1";
        %8cf = ($sp - %3e);
        %60e = "2";
        %d07 = ($sp + %60e);
        stack[%d07] = %8cf;
        %002 = "5";
        %e08 = ($sp - %002);
        %c63 = stack[%e08];
        %86f = "3";
        %76 = ($sp + %86f);
        stack[%76] = %c63;
        %d69c = "2";
        %db8 = ($sp - %d69c);
        %d09 = stack[%db8];
        %58e = "4";
        %4fe = ($sp + %58e);
        stack[%4fe] = %d09;
        %ea3 = "1";
        %72b = ($sp + %ea3);
        %fb = #d44;
        stack[%72b] = %fb;
        %93 = #80;
        jump %93;
    }

    proc #d44 {
        %ad8 = "4";
        %bb = ($sp - %ad8);
        %006 = stack[%bb];
        %f53 = "1";
        %747 = ($sp - %f53);
        %09b = stack[%747];
        %63b = "0";
        %f1 = (%09b + %63b);
        stack[%f1] = %006;
        %a47 = "0";
        %726 = ($sp - %a47);
        %293 = "2";
        %77 = ($sp + %293);
        stack[%77] = %726;
        %915 = "5";
        %bfa = ($sp - %915);
        %a90 = stack[%bfa];
        %1bf = "3";
        %575 = ($sp + %1bf);
        stack[%575] = %a90;
        %c4 = "1";
        %238 = ($sp + %c4);
        %06 = #9ad;
        stack[%238] = %06;
        %f3 = #2d;
        jump %f3;
    }

    proc #9ad {
        %1f = "2";
        %8b4 = ($sp - %1f);
        %24 = stack[%8b4];
        %8d5 = "1";
        %803 = (%24 + %8d5);
        %66 = "0";
        %07b7 = ($sp - %66);
        %d0b = stack[%07b7];
        %ded = "0";
        %287 = (%d0b + %ded);
        stack[%287] = %803;
        %71 = #a10;
        jump %71;
    }
}

func func.Vec_print {
    proc #e5 {
        %67 = "6";
        $sp = ($sp + %67);
        %ae1 = "0";
        %fb4 = "3";
        %73 = ($sp - %fb4);
        %9ec = "0";
        %17f = (%73 + %9ec);
        stack[%17f] = %ae1;
        %49 = "Vec (";
        %cd7 = "0";
        %7abc = ($sp - %cd7);
        %a59 = "0";
        %50d = (%7abc + %a59);
        stack[%50d] = %49;
        %997 = "2";
        %f86 = ($sp - %997);
        %26d = "2";
        %6f = ($sp + %26d);
        stack[%6f] = %f86;
        %78e = "4";
        %d76 = ($sp - %78e);
        %4b = stack[%d76];
        %8b8 = "3";
        %bb2 = ($sp + %8b8);
        stack[%bb2] = %4b;
        %a7d = "1";
        %b39 = ($sp + %a7d);
        %a37 = #0f3;
        stack[%b39] = %a37;
        %ac = #03;
        jump %ac;
    }

    proc #0f3 {
        %99b = "0";
        %eb = ($sp - %99b);
        %09f = stack[%eb];
        %e10 = "2";
        %a1b = ($sp - %e10);
        %eb1 = stack[%a1b];
        %aab = (%09f ~ %eb1);
        %cfd = "0";
        %0a = ($sp - %cfd);
        %242 = "0";
        %785 = (%0a + %242);
        stack[%785] = %aab;
        %e19 = "0";
        %971 = ($sp - %e19);
        %93c = stack[%971];
        %114 = ") ";
        %3e1 = (%93c ~ %114);
        %cba = "0";
        %d84 = ($sp - %cba);
        %b7 = "0";
        %e6b = (%d84 + %b7);
        stack[%e6b] = %3e1;
        %af = #f3a;
        jump %af;
    }

    proc #e9e {
        %26b = "0";
        %52f = ($sp - %26b);
        %88 = stack[%52f];
        %b5 = "2";
        %3ca = ($sp + %b5);
        stack[%3ca] = %88;
        %240 = "1";
        %0c2 = ($sp + %240);
        %75d = #f4e;
        stack[%0c2] = %75d;
        %6cb = #36;
        jump %6cb;
    }

    proc #f4e {
        %61 = "6";
        $sp = ($sp - %61);
        %56 = "1";
        %c5e = ($sp + %56);
        %ff8 = stack[%c5e];
        jump %ff8;
    }

    proc #4e2 {
        %672 = "3";
        %bc01 = ($sp - %672);
        %195 = stack[%bc01];
        %839 = "0";
        %d14 = (!(%195 == %839));
        %e081 = #ccc;
        %a38 = #48;
        if %d14 then jump %e081 else jump %a38;
    }

    proc #48 {
        %a7f = "1";
        %b0 = ($sp - %a7f);
        %44f = "2";
        %f56 = ($sp + %44f);
        stack[%f56] = %b0;
        %3b4 = "4";
        %306 = ($sp - %3b4);
        %a9c = stack[%306];
        %972 = "3";
        %1fb = ($sp + %972);
        stack[%1fb] = %a9c;
        %9fc = "3";
        %51 = ($sp - %9fc);
        %f31 = stack[%51];
        %036 = "4";
        %0d = ($sp + %036);
        stack[%0d] = %f31;
        %68a = "1";
        %4c5 = ($sp + %68a);
        %3bf = #08e;
        stack[%4c5] = %3bf;
        %d49 = #80;
        jump %d49;
    }

    proc #08e {
        %48b = "0";
        %076 = ($sp - %48b);
        %af0 = stack[%076];
        %fbf = "1";
        %bce = ($sp - %fbf);
        %066 = stack[%bce];
        %a4a = stack[%066];
        %0fb = (%af0 ~ %a4a);
        %d41 = "0";
        %804 = ($sp - %d41);
        %5bf = "0";
        %95d = (%804 + %5bf);
        stack[%95d] = %0fb;
        %a57 = "3";
        %232 = ($sp - %a57);
        %2ce8 = stack[%232];
        %771 = "1";
        %6c2 = (%2ce8 + %771);
        %72b5 = "3";
        %d56 = ($sp - %72b5);
        %56a = "0";
        %a95 = (%d56 + %56a);
        stack[%a95] = %6c2;
        %85a = #f3a;
        jump %85a;
    }

    proc #ccc {
        %00e = "0";
        %99d = ($sp - %00e);
        %1db = stack[%99d];
        %92a = ", ";
        %2d9 = (%1db ~ %92a);
        %4a9 = "0";
        %50e = ($sp - %4a9);
        %3e5 = "0";
        %54 = (%50e + %3e5);
        stack[%54] = %2d9;
        %ed = #48;
        jump %ed;
    }

    proc #f3a {
        %2ab = "3";
        %4d = ($sp - %2ab);
        %e1c = stack[%4d];
        %dd = "2";
        %80c = ($sp - %dd);
        %4d2 = stack[%80c];
        %a51 = (%e1c < %4d2);
        %721 = #4e2;
        %6c3 = #e9e;
        if %a51 then jump %721 else jump %6c3;
    }
}

func func.Vec_sort {
    proc #ad3 {
        %96 = "9";
        $sp = ($sp + %96);
        %681 = "0";
        %99d9 = "6";
        %6cc = ($sp - %99d9);
        %db2 = "0";
        %25a = (%6cc + %db2);
        stack[%25a] = %681;
        %e03 = "4";
        %27 = ($sp - %e03);
        %45 = "2";
        %78c = ($sp + %45);
        stack[%78c] = %27;
        %39d = "7";
        %881 = ($sp - %39d);
        %8cd2 = stack[%881];
        %84f = "3";
        %fd0 = ($sp + %84f);
        stack[%fd0] = %8cd2;
        %c4d = "1";
        %67c = ($sp + %c4d);
        %618 = #5e5;
        stack[%67c] = %618;
        %c7c = #03;
        jump %c7c;
    }

    proc #5e5 {
        %abe = #080;
        jump %abe;
    }

    proc #12a {
        %71a = "9";
        $sp = ($sp - %71a);
        %a054 = "1";
        %c2 = ($sp + %a054);
        %4f5 = stack[%c2];
        jump %4f5;
    }

    proc #a27 {
        %e8 = "6";
        %ad9 = ($sp - %e8);
        %328 = stack[%ad9];
        %479 = "5";
        %7f = ($sp - %479);
        %2fe = "0";
        %3e2 = (%7f + %2fe);
        stack[%3e2] = %328;
        %ad30 = #a8c;
        jump %ad30;
    }

    proc #672b {
        %c02 = "6";
        %410 = ($sp - %c02);
        %7a8 = stack[%410];
        %887 = "1";
        %50b = (%7a8 + %887);
        %fb9 = "6";
        %0d3 = ($sp - %fb9);
        %563 = "0";
        %2de = (%0d3 + %563);
        stack[%2de] = %50b;
        %d60e = #080;
        jump %d60e;
    }

    proc #79f {
        %a099 = "3";
        %97b = ($sp - %a099);
        %98a = "2";
        %d43 = ($sp + %98a);
        stack[%d43] = %97b;
        %edb = "7";
        %4c50 = ($sp - %edb);
        %f3f = stack[%4c50];
        %13c = "3";
        %411 = ($sp + %13c);
        stack[%411] = %f3f;
        %9c3 = "6";
        %aea = ($sp - %9c3);
        %cfdb = stack[%aea];
        %476 = "4";
        %11e = ($sp + %476);
        stack[%11e] = %cfdb;
        %68f = "1";
        %4dc = ($sp + %68f);
        %23b = #3d4;
        stack[%4dc] = %23b;
        %334 = #80;
        jump %334;
    }

    proc #3d4 {
        %e51 = "2";
        %3ab = ($sp - %e51);
        %b0c = "2";
        %fa0 = ($sp + %b0c);
        stack[%fa0] = %3ab;
        %ebd = "7";
        %b3b = ($sp - %ebd);
        %ee = stack[%b3b];
        %052 = "3";
        %1ca = ($sp + %052);
        stack[%1ca] = %ee;
        %42 = "5";
        %01 = ($sp - %42);
        %8b6 = stack[%01];
        %2b = "4";
        %c29 = ($sp + %2b);
        stack[%c29] = %8b6;
        %7d = "1";
        %2d3 = ($sp + %7d);
        %b02 = #ba7;
        stack[%2d3] = %b02;
        %7e = #80;
        jump %7e;
    }

    proc #ba7 {
        %e94 = "3";
        %743 = ($sp - %e94);
        %81 = stack[%743];
        %6e0 = stack[%81];
        %b8f = "1";
        %514 = ($sp - %b8f);
        %79e5 = "0";
        %84e = (%514 + %79e5);
        stack[%84e] = %6e0;
        %d79 = "2";
        %865 = ($sp - %d79);
        %4c3 = stack[%865];
        %e34 = stack[%4c3];
        %331 = "0";
        %33e = ($sp - %331);
        %fa5 = "0";
        %ad7 = (%33e + %fa5);
        stack[%ad7] = %e34;
        %483 = "0";
        %a92 = ($sp - %483);
        %2d2 = stack[%a92];
        %2c4 = "1";
        %f49 = ($sp - %2c4);
        %db3c = stack[%f49];
        %2a1 = (%2d2 < %db3c);
        %0ba = #01c;
        %8d8 = #6c27;
        if %2a1 then jump %0ba else jump %8d8;
    }

    proc #6c27 {
        %abc = "5";
        %d48 = ($sp - %abc);
        %168 = stack[%d48];
        %30f5 = "1";
        %89 = (%168 + %30f5);
        %ff4 = "5";
        %155 = ($sp - %ff4);
        %92b = "0";
        %5a2 = (%155 + %92b);
        stack[%5a2] = %89;
        %470 = #a8c;
        jump %470;
    }

    proc #01c {
        %a9c4 = "3";
        %89f = ($sp - %a9c4);
        %e9c = stack[%89f];
        %59c = "2";
        %110 = ($sp + %59c);
        stack[%110] = %e9c;
        %2f9 = "2";
        %2387 = ($sp - %2f9);
        %a39 = stack[%2387];
        %525 = "3";
        %72c = ($sp + %525);
        stack[%72c] = %a39;
        %7bd = "1";
        %eef = ($sp + %7bd);
        %722 = #d59;
        stack[%eef] = %722;
        %e8d = #03b;
        jump %e8d;
    }

    proc #d59 {
        %598 = #6c27;
        jump %598;
    }

    proc #a8c {
        %91e = "5";
        %d5a = ($sp - %91e);
        %43ef = stack[%d5a];
        %e9eb = "4";
        %fbb = ($sp - %e9eb);
        %bad = stack[%fbb];
        %c8b = (%43ef < %bad);
        %bbf = #79f;
        %532 = #672b;
        if %c8b then jump %bbf else jump %532;
    }

    proc #080 {
        %132 = "6";
        %b87 = ($sp - %132);
        %dbd = stack[%b87];
        %bae = "4";
        %a5e = ($sp - %bae);
        %a71 = stack[%a5e];
        %f6b = (%dbd < %a71);
        %3bb = #a27;
        %dfc = #12a;
        if %f6b then jump %3bb else jump %dfc;
    }
}

func func.swap {
    proc #03b {
        %c70 = "4";
        $sp = ($sp + %c70);
        %148 = "2";
        %49c = ($sp - %148);
        %895 = stack[%49c];
        %53e = stack[%895];
        %eab = "0";
        %f1d = ($sp - %eab);
        %675 = "0";
        %dfe = (%f1d + %675);
        stack[%dfe] = %53e;
        %e85 = "1";
        %b44 = ($sp - %e85);
        %a12 = stack[%b44];
        %7b7 = stack[%a12];
        %1636 = "2";
        %8d1 = ($sp - %1636);
        %7fd = stack[%8d1];
        %2a15 = "0";
        %9b4 = (%7fd + %2a15);
        stack[%9b4] = %7b7;
        %ff2 = "0";
        %d26 = ($sp - %ff2);
        %f8c = stack[%d26];
        %a4a1 = "1";
        %ad74 = ($sp - %a4a1);
        %d1c = stack[%ad74];
        %303 = "0";
        %a8e = (%d1c + %303);
        stack[%a8e] = %f8c;
        %f7 = "4";
        $sp = ($sp - %f7);
        %dbc = "1";
        %2e = ($sp + %dbc);
        %fd7 = stack[%2e];
        jump %fd7;
    }
}

func func.Vec_random_populate {
    proc #0f {
        %3cd = "7";
        $sp = ($sp + %3cd);
        %843 = #798;
        jump %843;
    }

    proc #d1b {
        %5f7 = "7";
        $sp = ($sp - %5f7);
        %68c = "1";
        %837 = ($sp + %68c);
        %910 = stack[%837];
        jump %910;
    }

    proc #7438 {
        %684 = "0";
        %23d = ($sp - %684);
        %3a6 = "2";
        %141 = ($sp + %3a6);
        stack[%141] = %23d;
        %d05 = "3";
        %ab9 = ($sp - %d05);
        %b2b = stack[%ab9];
        %1c5 = "3";
        %e39 = ($sp + %1c5);
        stack[%e39] = %b2b;
        %ae4 = "2";
        %c3 = ($sp - %ae4);
        %7d6 = stack[%c3];
        %a02 = "4";
        %0baa = ($sp + %a02);
        stack[%0baa] = %7d6;
        %ec = "1";
        %e82 = ($sp + %ec);
        %ccc3 = #452;
        stack[%e82] = %ccc3;
        %d4c = #0a6;
        jump %d4c;
    }

    proc #452 {
        %540 = "5";
        %4f3 = ($sp - %540);
        %cd5 = stack[%4f3];
        %4e8 = "2";
        %562 = ($sp + %4e8);
        stack[%562] = %cd5;
        %69 = "0";
        %95a = ($sp - %69);
        %861 = stack[%95a];
        %a8f = "3";
        %6c3e = ($sp + %a8f);
        stack[%6c3e] = %861;
        %928 = "1";
        %85b = ($sp + %928);
        %cc0 = #10c;
        stack[%85b] = %cc0;
        %ee3 = #d7;
        jump %ee3;
    }

    proc #10c {
        %511 = "1";
        %87 = ($sp - %511);
        %5c9 = stack[%87];
        %2c2 = "1";
        %b07 = (%5c9 + %2c2);
        %c31 = "1";
        %7f5 = ($sp - %c31);
        %76d = "0";
        %93f = (%7f5 + %76d);
        stack[%93f] = %b07;
        %d63 = #798;
        jump %d63;
    }

    proc #798 {
        %e4 = "1";
        %6e05 = ($sp - %e4);
        %e12 = stack[%6e05];
        %a937 = "4";
        %bbe = ($sp - %a937);
        %14d = stack[%bbe];
        %6d2 = (%e12 < %14d);
        %b4c = #7438;
        %1a6 = #d1b;
        if %6d2 then jump %b4c else jump %1a6;
    }
}

func func.out {
    proc #36 {
        %ee0 = "2";
        $sp = ($sp + %ee0);
        %5b7 = "0";
        %809 = ($sp - %5b7);
        %d8b = stack[%809];
        out %d8b;
        %8fa = "2";
        $sp = ($sp - %8fa);
        %37d = "1";
        %fdb = ($sp + %37d);
        %3fc = stack[%fdb];
        jump %3fc;
    }
}

func func.in {
    proc #516 {
        %e40 = "3";
        $sp = ($sp + %e40);
        %43a = "0";
        %3d5 = ($sp - %43a);
        in;
        stack[%3d5] = $answer;
        %e5a = "0";
        %6c2f = ($sp - %e5a);
        %498 = stack[%6c2f];
        %c83 = "1";
        %e7 = ($sp - %c83);
        %717 = stack[%e7];
        %023 = "0";
        %da2 = (%717 + %023);
        stack[%da2] = %498;
        %20b = "3";
        $sp = ($sp - %20b);
        %853 = "1";
        %d85 = ($sp + %853);
        %f0 = stack[%d85];
        jump %f0;
    }
}

func func.random {
    proc #0a6 {
        %18 = "5";
        $sp = ($sp + %18);
        %3f3 = "0";
        %e1d = ($sp - %3f3);
        %047 = "2";
        %376 = ($sp - %047);
        %30d = stack[%376];
        %21 = "1";
        %951 = ($sp - %21);
        %61b = stack[%951];
        stack[%e1d] = (%30d <random> %61b);
        %767 = "0";
        %dbd2 = ($sp - %767);
        %60c = stack[%dbd2];
        %5b0 = "3";
        %e81 = ($sp - %5b0);
        %d81 = stack[%e81];
        %818 = "0";
        %61e = (%d81 + %818);
        stack[%61e] = %60c;
        %699 = "5";
        $sp = ($sp - %699);
        %eab1 = "1";
        %f7f = ($sp + %eab1);
        %e4f = stack[%f7f];
        jump %e4f;
    }
}