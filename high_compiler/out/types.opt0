main {
    proc #2c {
        $sp = "-1";
        %3b = #a6;
        jump %3b;
    }
}

func main {
    proc #a6 {
        %25 = "9";
        $sp = ($sp + %25);
        %58 = "Hello!";
        %53 = "7";
        %70 = ($sp - %53);
        %9b = "0";
        %86 = (%70 + %9b);
        stack[%86] = %58;
        %bc = "7";
        %ed = ($sp - %bc);
        %a66 = "6";
        %d6 = ($sp - %a66);
        %8c = "0";
        %3f = (%d6 + %8c);
        stack[%3f] = %ed;
        %7c = "6";
        %59 = ($sp - %7c);
        %d7 = "5";
        %fe = ($sp - %d7);
        %44 = "0";
        %14 = (%fe + %44);
        stack[%14] = %59;
        %93 = "6";
        %64 = ($sp - %93);
        %9c = stack[%64];
        %cc = "2";
        %2ca = ($sp + %cc);
        stack[%2ca] = %9c;
        %b5 = "1";
        %5a = ($sp + %b5);
        %4c = #a5;
        stack[%5a] = %4c;
        %6c = #2c1;
        jump %6c;
    }

    proc #a5 {
        %02 = "Hello world!";
        %f7 = "4";
        %b6 = ($sp - %f7);
        %80 = "0";
        %b0 = (%b6 + %80);
        stack[%b0] = %02;
        %90 = "0";
        %e0 = "4";
        %40 = ($sp - %e0);
        %e3 = "0";
        %01 = (%40 + %e3);
        stack[%01] = %90;
        %3c = "10.5";
        %ab = "3";
        %95 = ($sp - %ab);
        %3cd = "0";
        %de = (%95 + %3cd);
        stack[%de] = %3c;
        %f6 = "-4.7";
        %65 = "3";
        %2d = ($sp - %65);
        %66 = "0";
        %13 = (%2d + %66);
        stack[%13] = %f6;
        %21 = "0";
        %00 = "3";
        %596 = ($sp - %00);
        %3e = "0";
        %b3 = (%596 + %3e);
        stack[%b3] = %21;
        %32 = "-32";
        %d63 = "2";
        %d7f = ($sp - %d63);
        %b1 = "0";
        %dc = (%d7f + %b1);
        stack[%dc] = %32;
        %1e = "0";
        %c7 = "2";
        %52 = ($sp - %c7);
        %e07 = "0";
        %98 = (%52 + %e07);
        stack[%98] = %1e;
        %5c = "88";
        %45 = "1";
        %1f = ($sp - %45);
        %ba = "0";
        %92 = (%1f + %ba);
        stack[%92] = %5c;
        %3fe = "0";
        %d6d = "1";
        %a2 = ($sp - %d6d);
        %a4 = "0";
        %2e = (%a2 + %a4);
        stack[%2e] = %3fe;
        %7d = "true";
        %33 = "0";
        %5f = ($sp - %33);
        %28 = "0";
        %ca = (%5f + %28);
        stack[%ca] = %7d;
        %210 = "false";
        %24 = "0";
        %75 = ($sp - %24);
        %f66 = "0";
        %af = (%75 + %f66);
        stack[%af] = %210;
        %808 = "1";
        %d7c = ($sp - %808);
        %a3 = stack[%d7c];
        %3d = "1";
        %bd = ($sp - %3d);
        %11 = stack[%bd];
        %bca = (%a3 + %11);
        %665 = "1";
        %8a = ($sp - %665);
        %76 = "0";
        %c0 = (%8a + %76);
        stack[%c0] = %bca;
        %49 = "1";
        %dce = ($sp - %49);
        %449 = stack[%dce];
        %b8 = "1";
        %5a6 = ($sp - %b8);
        %0d = stack[%5a6];
        %215 = (%449 + %0d);
        %35 = "2";
        %27 = ($sp - %35);
        %17 = "0";
        %bd0 = (%27 + %17);
        stack[%bd0] = %215;
        %ae = "1";
        %a7 = ($sp - %ae);
        %325 = stack[%a7];
        %08 = "2";
        %b4 = ($sp - %08);
        %84 = stack[%b4];
        %d4 = (%325 + %84);
        %03 = "2";
        %587 = ($sp - %03);
        %63 = "0";
        %72 = (%587 + %63);
        stack[%72] = %d4;
        exit;
    }
}

func func.out {
    proc #5872 {
        %ae2 = "2";
        $sp = ($sp + %ae2);
        %5b = "0";
        %a9 = ($sp - %5b);
        %a6b = stack[%a9];
        out %a6b;
        %ee = "2";
        $sp = ($sp - %ee);
        %4f = "1";
        %bb = ($sp + %4f);
        %e36 = stack[%bb];
        jump %e36;
    }
}

func func.in {
    proc #2c1 {
        %fc = "3";
        $sp = ($sp + %fc);
        %2f = "0";
        %6a = ($sp - %2f);
        in;
        stack[%6a] = $answer;
        %81 = "0";
        %b08 = ($sp - %81);
        %97 = stack[%b08];
        %6d = "1";
        %328 = ($sp - %6d);
        %4f6 = stack[%328];
        %43 = "0";
        %37 = (%4f6 + %43);
        stack[%37] = %97;
        %e2 = "3";
        $sp = ($sp - %e2);
        %8c2 = "1";
        %12 = ($sp + %8c2);
        %f8 = stack[%12];
        jump %f8;
    }
}

func func.random_num {
    proc #5cb {
        %036 = "5";
        $sp = ($sp + %036);
        %1a = "0";
        %e6 = ($sp - %1a);
        %99 = "0.0";
        %23 = "1.0";
        stack[%e6] = (%99 <random> %23);
        %bdf = "2";
        %1c = ($sp - %bdf);
        %939 = stack[%1c];
        %845 = "0";
        %5d = ($sp - %845);
        %34 = stack[%5d];
        %50 = "1";
        %34c = ($sp - %50);
        %246 = stack[%34c];
        %083 = "2";
        %30 = ($sp - %083);
        %8af = stack[%30];
        %3d9 = (%246 - %8af);
        %907 = (%34 * %3d9);
        %d6d1 = (%939 + %907);
        %e1 = "3";
        %bb5 = ($sp - %e1);
        %a71 = stack[%bb5];
        %b52 = "0";
        %346 = (%a71 + %b52);
        stack[%346] = %d6d1;
        %69 = "5";
        $sp = ($sp - %69);
        %ff = "1";
        %370 = ($sp + %ff);
        %e63 = stack[%370];
        jump %e63;
    }
}

func func.random_int {
    proc #47 {
        %bf = "5";
        $sp = ($sp + %bf);
        %631 = "0";
        %c4 = ($sp - %631);
        %723 = "2";
        %cb = ($sp - %723);
        %999 = stack[%cb];
        %6a9 = "1";
        %d8 = ($sp - %6a9);
        %38 = stack[%d8];
        stack[%c4] = (%999 <random> %38);
        %cf = "0";
        %1fc = ($sp - %cf);
        %409 = stack[%1fc];
        %8f = "3";
        %9d = ($sp - %8f);
        %37f = stack[%9d];
        %02a = "0";
        %7f = (%37f + %02a);
        stack[%7f] = %409;
        %5da = "5";
        $sp = ($sp - %5da);
        %e30 = "1";
        %62 = ($sp + %e30);
        %40f = stack[%62];
        jump %40f;
    }
}

func func.random_uint {
    proc #ed1 {
        %12c = "5";
        $sp = ($sp + %12c);
        %88 = "0";
        %128 = ($sp - %88);
        %16 = "2";
        %e22 = ($sp - %16);
        %90a = stack[%e22];
        %a1 = "1";
        %3c6 = ($sp - %a1);
        %56 = stack[%3c6];
        stack[%128] = (%90a <random> %56);
        %660 = "0";
        %028 = ($sp - %660);
        %b7 = stack[%028];
        %6d4 = "3";
        %370c = ($sp - %6d4);
        %3a = stack[%370c];
        %fe6 = "0";
        %94 = (%3a + %fe6);
        stack[%94] = %b7;
        %4d = "5";
        $sp = ($sp - %4d);
        %9a = "1";
        %26 = ($sp + %9a);
        %ab0 = stack[%26];
        jump %ab0;
    }
}