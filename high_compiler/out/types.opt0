main {
    proc #c6 {
        $sp = "-1";
        %f2 = #bf;
        jump %f2;
    }
}

func main {
    proc #bf {
        %64 = "9";
        $sp = ($sp + %64);
        %8d = "Hello!";
        %a2 = "7";
        %92 = ($sp - %a2);
        %4f = "0";
        %16 = (%92 + %4f);
        stack[%16] = %8d;
        %5c = "7";
        %c69 = ($sp - %5c);
        %b1 = "6";
        %be = ($sp - %b1);
        %87 = "0";
        %b9 = (%be + %87);
        stack[%b9] = %c69;
        %03 = "6";
        %b0 = ($sp - %03);
        %fd = "5";
        %d8 = ($sp - %fd);
        %b4 = "0";
        %1c = (%d8 + %b4);
        stack[%1c] = %b0;
        %d6 = "6";
        %3c = ($sp - %d6);
        %67 = stack[%3c];
        %be0 = "2";
        %a4 = ($sp + %be0);
        stack[%a4] = %67;
        %b3 = "1";
        %f9 = ($sp + %b3);
        %fa = #f8;
        stack[%f9] = %fa;
        %f1 = #a4d;
        jump %f1;
    }

    proc #f8 {
        %79 = "Hello world!";
        %e1 = "4";
        %14 = ($sp - %e1);
        %7f = "0";
        %68 = (%14 + %7f);
        stack[%68] = %79;
        %c1 = "0";
        %b6 = "4";
        %3c1 = ($sp - %b6);
        %8b = "0";
        %c4 = (%3c1 + %8b);
        stack[%c4] = %c1;
        %f9a = "10.5";
        %69 = "3";
        %2f = ($sp - %69);
        %ac = "0";
        %ff = (%2f + %ac);
        stack[%ff] = %f9a;
        %7d = "-4.7";
        %77 = "3";
        %93 = ($sp - %77);
        %11 = "0";
        %684 = (%93 + %11);
        stack[%684] = %7d;
        %19 = "0";
        %d0 = "3";
        %12 = ($sp - %d0);
        %2a = "0";
        %aa = (%12 + %2a);
        stack[%aa] = %19;
        %15 = "-32";
        %9f = "2";
        %21 = ($sp - %9f);
        %94 = "0";
        %ef = (%21 + %94);
        stack[%ef] = %15;
        %e3 = "0";
        %8b3 = "2";
        %dc = ($sp - %8b3);
        %0b = "0";
        %d2 = (%dc + %0b);
        stack[%d2] = %e3;
        %ea = "88";
        %45 = "1";
        %3c7 = ($sp - %45);
        %81 = "0";
        %921 = (%3c7 + %81);
        stack[%921] = %ea;
        %56 = "0";
        %47 = "1";
        %fc = ($sp - %47);
        %a1 = "0";
        %d5 = (%fc + %a1);
        stack[%d5] = %56;
        %be1 = "true";
        %5c5 = "0";
        %13 = ($sp - %5c5);
        %90 = "0";
        %e5 = (%13 + %90);
        stack[%e5] = %be1;
        %27 = "false";
        %5e = "0";
        %1d = ($sp - %5e);
        %f4 = "0";
        %4e = (%1d + %f4);
        stack[%4e] = %27;
        %34 = "1";
        %9a = ($sp - %34);
        %0a = stack[%9a];
        %52 = "1";
        %17 = ($sp - %52);
        %05 = stack[%17];
        %c0 = (%0a + %05);
        %62 = "1";
        %9d = ($sp - %62);
        %cc = "0";
        %8c = (%9d + %cc);
        stack[%8c] = %c0;
        %fdb = "1";
        %bb = ($sp - %fdb);
        %53 = stack[%bb];
        %b8 = "1";
        %eb = ($sp - %b8);
        %ab = stack[%eb];
        %31 = (%53 + %ab);
        %f5 = "2";
        %8a = ($sp - %f5);
        %fb = "0";
        %cd = (%8a + %fb);
        stack[%cd] = %31;
        %7c = "1";
        %49 = ($sp - %7c);
        %9da = stack[%49];
        %97 = "2";
        %e4 = ($sp - %97);
        %aae = stack[%e4];
        %d03 = (%9da + %aae);
        %22 = "2";
        %10 = ($sp - %22);
        %38 = "0";
        %e7 = (%10 + %38);
        stack[%e7] = %d03;
        exit;
    }
}

func func.out {
    proc #ccf {
        %9ae = "2";
        $sp = ($sp + %9ae);
        %a8 = "0";
        %25 = ($sp - %a8);
        %7cc = stack[%25];
        out %7cc;
        %aa2 = "2";
        $sp = ($sp - %aa2);
        %2d = "1";
        %33 = ($sp + %2d);
        %a0 = stack[%33];
        jump %a0;
    }
}

func func.in {
    proc #a4d {
        %b43 = "3";
        $sp = ($sp + %b43);
        %b5 = "0";
        %9e = ($sp - %b5);
        in;
        stack[%9e] = $answer;
        %4c = "0";
        %d6e = ($sp - %4c);
        %de = stack[%d6e];
        %12e = "1";
        %35 = ($sp - %12e);
        %21d = stack[%35];
        %cf = "0";
        %e79 = (%21d + %cf);
        stack[%e79] = %de;
        %8f = "3";
        $sp = ($sp - %8f);
        %42 = "1";
        %2f0 = ($sp + %42);
        %ed = stack[%2f0];
        jump %ed;
    }
}

func func.random_num {
    proc #00 {
        %0e = "5";
        $sp = ($sp + %0e);
        %87c = "0";
        %7e = ($sp - %87c);
        %da = "0.0";
        %98 = "1.0";
        stack[%7e] = (%da <random> %98);
        %96 = "2";
        %73 = ($sp - %96);
        %08 = stack[%73];
        %22d = "0";
        %85 = ($sp - %22d);
        %2e = stack[%85];
        %95 = "1";
        %2e2 = ($sp - %95);
        %ded = stack[%2e2];
        %128 = "2";
        %9d1 = ($sp - %128);
        %46 = stack[%9d1];
        %56a = (%ded - %46);
        %9c = (%2e * %56a);
        %6d = (%08 + %9c);
        %75 = "3";
        %3e = ($sp - %75);
        %104 = stack[%3e];
        %96f = "0";
        %4fe = (%104 + %96f);
        stack[%4fe] = %6d;
        %b64 = "5";
        $sp = ($sp - %b64);
        %30 = "1";
        %46a = ($sp + %30);
        %6b = stack[%46a];
        jump %6b;
    }
}

func func.random_int {
    proc #f7 {
        %66 = "5";
        $sp = ($sp + %66);
        %420 = "0";
        %76 = ($sp - %420);
        %4b = "2";
        %f1c = ($sp - %4b);
        %b39 = stack[%f1c];
        %f44 = "1";
        %f6 = ($sp - %f44);
        %2ab = stack[%f6];
        stack[%76] = (%b39 <random> %2ab);
        %63 = "0";
        %e1a = ($sp - %63);
        %59 = stack[%e1a];
        %630 = "3";
        %d88 = ($sp - %630);
        %84 = stack[%d88];
        %36 = "0";
        %39 = (%84 + %36);
        stack[%39] = %59;
        %9ac = "5";
        $sp = ($sp - %9ac);
        %626 = "1";
        %9ac9 = ($sp + %626);
        %47c = stack[%9ac9];
        jump %47c;
    }
}

func func.random_uint {
    proc #cdd {
        %955 = "5";
        $sp = ($sp + %955);
        %a1b = "0";
        %ba = ($sp - %a1b);
        %d8e = "2";
        %f41 = ($sp - %d8e);
        %968 = stack[%f41];
        %23 = "1";
        %71 = ($sp - %23);
        %23a = stack[%71];
        stack[%ba] = (%968 <random> %23a);
        %74 = "0";
        %1e = ($sp - %74);
        %fbd = stack[%1e];
        %f43 = "3";
        %20 = ($sp - %f43);
        %cc6 = stack[%20];
        %e8 = "0";
        %d58 = (%cc6 + %e8);
        stack[%d58] = %fbd;
        %43 = "5";
        $sp = ($sp - %43);
        %0a7 = "1";
        %ffa = ($sp + %0a7);
        %13f = stack[%ffa];
        jump %13f;
    }
}