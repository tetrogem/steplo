main {
    proc #5f {
        $sp = "-1";
        %85 = #52;
        jump %85;
    }
}

func main {
    proc #52 {
        %6e = "9";
        $sp = ($sp + %6e);
        %90 = "Hello!";
        %e8 = "7";
        %b9 = ($sp - %e8);
        %df = "0";
        %bf = (%b9 + %df);
        stack[%bf] = %90;
        %09 = "7";
        %4e = ($sp - %09);
        %ac = "6";
        %47 = ($sp - %ac);
        %ba = "0";
        %7e = (%47 + %ba);
        stack[%7e] = %4e;
        %de = "6";
        %9d = ($sp - %de);
        %7d = "5";
        %9c = ($sp - %7d);
        %48 = "0";
        %0b = (%9c + %48);
        stack[%0b] = %9d;
        %0e = "6";
        %8d = ($sp - %0e);
        %0e1 = stack[%8d];
        %87 = "2";
        %6f = ($sp + %87);
        stack[%6f] = %0e1;
        %9f = "1";
        %25 = ($sp + %9f);
        %18 = #1d;
        stack[%25] = %18;
        %5d = #878;
        jump %5d;
    }

    proc #1d {
        %57 = "Hello world!";
        %6ee = "4";
        %12 = ($sp - %6ee);
        %9b = "0";
        %a9 = (%12 + %9b);
        stack[%a9] = %57;
        %65 = "0";
        %95 = "4";
        %07 = ($sp - %95);
        %a3 = "0";
        %e0 = (%07 + %a3);
        stack[%e0] = %65;
        %16 = "10.5";
        %bf3 = "3";
        %77 = ($sp - %bf3);
        %de3 = "0";
        %22 = (%77 + %de3);
        stack[%22] = %16;
        %c7 = "-4.7";
        %bc = "3";
        %4c = ($sp - %bc);
        %4b = "0";
        %953 = (%4c + %4b);
        stack[%953] = %c7;
        %5df = "0";
        %50 = "3";
        %1e = ($sp - %50);
        %07e = "0";
        %7e6 = (%1e + %07e);
        stack[%7e6] = %5df;
        %3b = "-32";
        %86 = "2";
        %8c = ($sp - %86);
        %bac = "0";
        %b7 = (%8c + %bac);
        stack[%b7] = %3b;
        %61 = "0";
        %dec = "2";
        %14 = ($sp - %dec);
        %c6 = "0";
        %b2 = (%14 + %c6);
        stack[%b2] = %61;
        %144 = "88";
        %70 = "1";
        %00 = ($sp - %70);
        %98 = "0";
        %6b = (%00 + %98);
        stack[%6b] = %144;
        %97 = "0";
        %fc = "1";
        %68 = ($sp - %fc);
        %07f = "0";
        %c4 = (%68 + %07f);
        stack[%c4] = %97;
        %10 = "true";
        %688 = "0";
        %e1 = ($sp - %688);
        %08 = "0";
        %63 = (%e1 + %08);
        stack[%63] = %10;
        %08d = "false";
        %26 = "0";
        %cb = ($sp - %26);
        %f3 = "0";
        %a6 = (%cb + %f3);
        stack[%a6] = %08d;
        %09c = "1";
        %9e = ($sp - %09c);
        %488 = stack[%9e];
        %fa = "1";
        %651 = ($sp - %fa);
        %74 = stack[%651];
        %cf = (%488 + %74);
        %e7 = "1";
        %fd = ($sp - %e7);
        %ad = "0";
        %d5 = (%fd + %ad);
        stack[%d5] = %cf;
        %4886 = "1";
        %083 = ($sp - %4886);
        %ec = stack[%083];
        %989 = "1";
        %183 = ($sp - %989);
        %6b2 = stack[%183];
        %adf = (%ec + %6b2);
        %27 = "2";
        %a1 = ($sp - %27);
        %0e7 = "0";
        %21 = (%a1 + %0e7);
        stack[%21] = %adf;
        %d59 = "1";
        %ee = ($sp - %d59);
        %67 = stack[%ee];
        %77f = "2";
        %b1 = ($sp - %77f);
        %75 = stack[%b1];
        %7e2 = (%67 + %75);
        %11 = "2";
        %fae = ($sp - %11);
        %d9 = "0";
        %fd2 = (%fae + %d9);
        stack[%fd2] = %7e2;
        exit;
    }
}

func func.out {
    proc #00f {
        %4e7 = "2";
        $sp = ($sp + %4e7);
        %5b = "0";
        %085 = ($sp - %5b);
        %cd = stack[%085];
        out %cd;
        %3e = "2";
        $sp = ($sp - %3e);
        %de0 = "1";
        %13 = ($sp + %de0);
        %42 = stack[%13];
        jump %42;
    }
}

func func.in {
    proc #878 {
        %470 = "3";
        $sp = ($sp + %470);
        %da = "0";
        %f6 = ($sp - %da);
        in;
        stack[%f6] = $answer;
        %99 = "0";
        %635 = ($sp - %99);
        %02 = stack[%635];
        %8a = "1";
        %34 = ($sp - %8a);
        %ada = stack[%34];
        %ce = "0";
        %6f3 = (%ada + %ce);
        stack[%6f3] = %02;
        %b4 = "3";
        $sp = ($sp - %b4);
        %6c = "1";
        %9e4 = ($sp + %6c);
        %3d = stack[%9e4];
        jump %3d;
    }
}

func func.random_num {
    proc #09a {
        %88 = "5";
        $sp = ($sp + %88);
        %cc = "0";
        %46 = ($sp - %cc);
        %b71 = "0.0";
        %67d = "1.0";
        stack[%46] = (%b71 <random> %67d);
        %752 = "2";
        %90e = ($sp - %752);
        %dac = stack[%90e];
        %4e3 = "0";
        %dee = ($sp - %4e3);
        %6b4 = stack[%dee];
        %f0 = "1";
        %006 = ($sp - %f0);
        %7b = stack[%006];
        %40 = "2";
        %71 = ($sp - %40);
        %ff = stack[%71];
        %1dc = (%7b - %ff);
        %864 = (%6b4 * %1dc);
        %e4 = (%dac + %864);
        %d0 = "3";
        %503 = ($sp - %d0);
        %cf3 = stack[%503];
        %23 = "0";
        %0f = (%cf3 + %23);
        stack[%0f] = %e4;
        %257 = "5";
        $sp = ($sp - %257);
        %2f = "1";
        %bb = ($sp + %2f);
        %852 = stack[%bb];
        jump %852;
    }
}

func func.random_int {
    proc #bf4 {
        %f3e = "5";
        $sp = ($sp + %f3e);
        %37 = "0";
        %4a = ($sp - %37);
        %79 = "2";
        %ef = ($sp - %79);
        %675 = stack[%ef];
        %0be = "1";
        %d0f = ($sp - %0be);
        %38 = stack[%d0f];
        stack[%4a] = (%675 <random> %38);
        %021 = "0";
        %7b8 = ($sp - %021);
        %25d = stack[%7b8];
        %758 = "3";
        %460 = ($sp - %758);
        %633 = stack[%460];
        %ec7 = "0";
        %ea = (%633 + %ec7);
        stack[%ea] = %25d;
        %20 = "5";
        $sp = ($sp - %20);
        %d8 = "1";
        %076 = ($sp + %d8);
        %58 = stack[%076];
        jump %58;
    }
}

func func.random_uint {
    proc #3a {
        %097 = "5";
        $sp = ($sp + %097);
        %a3c = "0";
        %0e6 = ($sp - %a3c);
        %4e1 = "2";
        %a99 = ($sp - %4e1);
        %bfb = stack[%a99];
        %5a = "1";
        %cb1 = ($sp - %5a);
        %ac2 = stack[%cb1];
        stack[%0e6] = (%bfb <random> %ac2);
        %df9 = "0";
        %428 = ($sp - %df9);
        %ed = stack[%428];
        %cc7 = "3";
        %e5 = ($sp - %cc7);
        %33 = stack[%e5];
        %22a = "0";
        %34b = (%33 + %22a);
        stack[%34b] = %ed;
        %085e = "5";
        $sp = ($sp - %085e);
        %36 = "1";
        %ff6 = ($sp + %36);
        %be = stack[%ff6];
        jump %be;
    }
}