main {
    proc #2f {
        $sp = "-1";
        %fb = #0e;
        jump %fb;
    }
}

func main {
    proc #0e {
        %74 = "5";
        $sp = ($sp + %74);
        %60 = "10";
        %6a = "3";
        %b3 = ($sp - %6a);
        %ad = "0";
        %0f = (%b3 + %ad);
        stack[%0f] = %60;
        %01 = "15";
        %a8 = "2";
        %a1 = ($sp - %a8);
        %3c = "0";
        %0c = (%a1 + %3c);
        stack[%0c] = %01;
        %16 = "50";
        %c4 = "1";
        %50 = ($sp - %c4);
        %0f5 = "0";
        %c7 = (%50 + %0f5);
        stack[%c7] = %16;
        %1c = "3";
        %39 = ($sp - %1c);
        %a4 = stack[%39];
        %63 = "2";
        %e1 = ($sp - %63);
        %6ac = stack[%e1];
        %cf = (%a4 + %6ac);
        %cd = "0";
        %73 = ($sp - %cd);
        %10 = "0";
        %f2 = (%73 + %10);
        stack[%f2] = %cf;
        %b4 = "0";
        %35 = ($sp - %b4);
        %a45 = stack[%35];
        %11 = "2";
        %2b = ($sp + %11);
        stack[%2b] = %a45;
        %dd = "1";
        %8a = ($sp + %dd);
        %28 = #fe;
        stack[%8a] = %28;
        %c3 = #e8;
        jump %c3;
    }

    proc #fe {
        %c0 = "2";
        %35c = ($sp - %c0);
        %f9 = stack[%35c];
        %e0 = "1";
        %d2 = ($sp - %e0);
        %54 = stack[%d2];
        %29 = (%f9 + %54);
        %1c8 = "0";
        %84 = ($sp - %1c8);
        %6a5 = "0";
        %f6 = (%84 + %6a5);
        stack[%f6] = %29;
        %3c7 = "0";
        %f3 = ($sp - %3c7);
        %6b = stack[%f3];
        %49 = "2";
        %ac = ($sp + %49);
        stack[%ac] = %6b;
        %25 = "1";
        %da = ($sp + %25);
        %5f = #4f;
        stack[%da] = %5f;
        %cc = #e8;
        jump %cc;
    }

    proc #4f {
        %3f = "100";
        %f1 = "200";
        %3b = (%3f + %f1);
        %e7 = "0";
        %5b = ($sp - %e7);
        %e4 = "0";
        %b0 = (%5b + %e4);
        stack[%b0] = %3b;
        %a6 = "0";
        %8c = ($sp - %a6);
        %38 = stack[%8c];
        %79 = "2";
        %1d = ($sp + %79);
        stack[%1d] = %38;
        %57 = "1";
        %75 = ($sp + %57);
        %a8f = #53;
        stack[%75] = %a8f;
        %96 = #e8;
        jump %96;
    }

    proc #53 {
        %26 = "500";
        %0e3 = "75";
        %f36 = (%26 + %0e3);
        %3b0 = "2";
        %a14 = ($sp + %3b0);
        stack[%a14] = %f36;
        %d9 = "1";
        %5fc = ($sp + %d9);
        %e4c = #57f;
        stack[%5fc] = %e4c;
        %30 = #e8;
        jump %30;
    }

    proc #57f {
        exit;
    }
}

func func.out {
    proc #e8 {
        %ec = "2";
        $sp = ($sp + %ec);
        %85 = "0";
        %5bf = ($sp - %85);
        %b9 = stack[%5bf];
        out %b9;
        %00 = "2";
        $sp = ($sp - %00);
        %74a = "1";
        %4d = ($sp + %74a);
        %fc = stack[%4d];
        jump %fc;
    }
}

func func.in {
    proc #ce {
        %51 = "3";
        $sp = ($sp + %51);
        %79a = "0";
        %13 = ($sp - %79a);
        in;
        stack[%13] = $answer;
        %4d3 = "0";
        %7b = ($sp - %4d3);
        %b96 = stack[%7b];
        %8a5 = "1";
        %dd1 = ($sp - %8a5);
        %288 = stack[%dd1];
        %19 = "0";
        %c8 = (%288 + %19);
        stack[%c8] = %b96;
        %bf = "3";
        $sp = ($sp - %bf);
        %0b = "1";
        %aa = ($sp + %0b);
        %88 = stack[%aa];
        jump %88;
    }
}

func func.random_num {
    proc #fd {
        %7bc = "5";
        $sp = ($sp + %7bc);
        %cdc = "0";
        %d22 = ($sp - %cdc);
        %570 = "0.0";
        %0bb = "1.0";
        stack[%d22] = (%570 <random> %0bb);
        %da0 = "2";
        %734 = ($sp - %da0);
        %31 = stack[%734];
        %41 = "0";
        %7c = ($sp - %41);
        %39f = stack[%7c];
        %28d = "1";
        %b7 = ($sp - %28d);
        %4a = stack[%b7];
        %0f1 = "2";
        %14 = ($sp - %0f1);
        %b8 = stack[%14];
        %91 = (%4a - %b8);
        %95 = (%39f * %91);
        %3c5 = (%31 + %95);
        %eb = "3";
        %502 = ($sp - %eb);
        %b2 = stack[%502];
        %165 = "0";
        %03 = (%b2 + %165);
        stack[%03] = %3c5;
        %130 = "5";
        $sp = ($sp - %130);
        %410 = "1";
        %da6 = ($sp + %410);
        %83 = stack[%da6];
        jump %83;
    }
}

func func.random_int {
    proc #103 {
        %6f = "5";
        $sp = ($sp + %6f);
        %fcc = "0";
        %2e = ($sp - %fcc);
        %c2 = "2";
        %5e = ($sp - %c2);
        %532 = stack[%5e];
        %6ad = "1";
        %c3f = ($sp - %6ad);
        %5e2 = stack[%c3f];
        stack[%2e] = (%532 <random> %5e2);
        %40 = "0";
        %c40 = ($sp - %40);
        %578 = stack[%c40];
        %ea = "3";
        %ac4 = ($sp - %ea);
        %27 = stack[%ac4];
        %a44 = "0";
        %17 = (%27 + %a44);
        stack[%17] = %578;
        %af = "5";
        $sp = ($sp - %af);
        %b1 = "1";
        %87 = ($sp + %b1);
        %2d = stack[%87];
        jump %2d;
    }
}

func func.random_uint {
    proc #4e {
        %c1 = "5";
        $sp = ($sp + %c1);
        %7a = "0";
        %1300 = ($sp - %7a);
        %ccf = "2";
        %0d = ($sp - %ccf);
        %47 = stack[%0d];
        %0d6 = "1";
        %f5 = ($sp - %0d6);
        %2da = stack[%f5];
        stack[%1300] = (%47 <random> %2da);
        %a7 = "0";
        %f0 = ($sp - %a7);
        %5fb = stack[%f0];
        %81 = "3";
        %e5 = ($sp - %81);
        %15 = stack[%e5];
        %b0a = "0";
        %56 = (%15 + %b0a);
        stack[%56] = %5fb;
        %c9 = "5";
        $sp = ($sp - %c9);
        %7c2 = "1";
        %2b7 = ($sp + %7c2);
        %ea7 = stack[%2b7];
        jump %ea7;
    }
}