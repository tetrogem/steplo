main {
    proc #53 {
        $sp = "-1";
        %11 = #75;
        jump %11;
    }
}

func main {
    proc #75 {
        %56 = "5";
        $sp = ($sp + %56);
        %45 = "10";
        %9b = "3";
        %b4 = ($sp - %9b);
        %85 = "0";
        %533 = (%b4 + %85);
        stack[%533] = %45;
        %25 = "15";
        %37 = "2";
        %24 = ($sp - %37);
        %5f = "0";
        %d7 = (%24 + %5f);
        stack[%d7] = %25;
        %f0 = "50";
        %d5 = "1";
        %7c = ($sp - %d5);
        %05 = "0";
        %e9 = (%7c + %05);
        stack[%e9] = %f0;
        %35 = "3";
        %7ca = ($sp - %35);
        %2c = stack[%7ca];
        %ee = "2";
        %9c = ($sp - %ee);
        %50 = stack[%9c];
        %74 = (%2c + %50);
        %0a = "0";
        %84 = ($sp - %0a);
        %cf = "0";
        %ba = (%84 + %cf);
        stack[%ba] = %74;
        %99 = "0";
        %c1 = ($sp - %99);
        %fc = stack[%c1];
        %8c = "2";
        %27 = ($sp + %8c);
        stack[%27] = %fc;
        %ad = "1";
        %aa = ($sp + %ad);
        %40 = #8d;
        stack[%aa] = %40;
        %9a = #17;
        jump %9a;
    }

    proc #8d {
        %2b = "2";
        %1b = ($sp - %2b);
        %9ad = stack[%1b];
        %ac = "1";
        %49 = ($sp - %ac);
        %61 = stack[%49];
        %44 = (%9ad + %61);
        %d7e = "0";
        %bb = ($sp - %d7e);
        %aa4 = "0";
        %9d = (%bb + %aa4);
        stack[%9d] = %44;
        %e4 = "0";
        %ce = ($sp - %e4);
        %04 = stack[%ce];
        %c4 = "2";
        %7d = ($sp + %c4);
        stack[%7d] = %04;
        %29 = "1";
        %b5 = ($sp + %29);
        %26 = #76;
        stack[%b5] = %26;
        %c6 = #17;
        jump %c6;
    }

    proc #76 {
        %a4 = "100";
        %d1 = "200";
        %c11 = (%a4 + %d1);
        %262 = "0";
        %05e = ($sp - %262);
        %d3 = "0";
        %1a = (%05e + %d3);
        stack[%1a] = %c11;
        %00 = "0";
        %353 = ($sp - %00);
        %f5 = stack[%353];
        %db = "2";
        %20 = ($sp + %db);
        stack[%20] = %f5;
        %b7 = "1";
        %5e = ($sp + %b7);
        %92 = #8f;
        stack[%5e] = %92;
        %45d = #17;
        jump %45d;
    }

    proc #8f {
        %ae = "500";
        %be = "75";
        %753 = (%ae + %be);
        %c8 = "2";
        %91 = ($sp + %c8);
        stack[%91] = %753;
        %843 = "1";
        %25c = ($sp + %843);
        %dd = #440;
        stack[%25c] = %dd;
        %54 = #17;
        jump %54;
    }

    proc #440 {
        exit;
    }
}

func func.out {
    proc #17 {
        %4b = "2";
        $sp = ($sp + %4b);
        %cd = "0";
        %94 = ($sp - %cd);
        %52 = stack[%94];
        out %52;
        %ca = "2";
        $sp = ($sp - %ca);
        %d1e = "1";
        %95 = ($sp + %d1e);
        %f1 = stack[%95];
        jump %f1;
    }
}

func func.in {
    proc #c5 {
        %405 = "3";
        $sp = ($sp + %405);
        %d8 = "0";
        %dc = ($sp - %d8);
        in;
        stack[%dc] = $answer;
        %b2 = "0";
        %b27 = ($sp - %b2);
        %2d = stack[%b27];
        %69 = "1";
        %3a = ($sp - %69);
        %63 = stack[%3a];
        %7a = "0";
        %06 = (%63 + %7a);
        stack[%06] = %2d;
        %cb = "3";
        $sp = ($sp - %cb);
        %a6 = "1";
        %d5e = ($sp + %a6);
        %71 = stack[%d5e];
        jump %71;
    }
}

func func.random_num {
    proc #528 {
        %27c = "5";
        $sp = ($sp + %27c);
        %e8 = "0";
        %22 = ($sp - %e8);
        %007 = "0.0";
        %41 = "1.0";
        stack[%22] = (%007 <random> %41);
        %68 = "2";
        %d2 = ($sp - %68);
        %8b = stack[%d2];
        %51 = "0";
        %48 = ($sp - %51);
        %6c = stack[%48];
        %686 = "1";
        %0c = ($sp - %686);
        %77 = stack[%0c];
        %5a = "2";
        %90 = ($sp - %5a);
        %aab = stack[%90];
        %d4 = (%77 - %aab);
        %64 = (%6c * %d4);
        %aed = (%8b + %64);
        %2f = "3";
        %4d = ($sp - %2f);
        %f6 = stack[%4d];
        %c4e = "0";
        %8da = (%f6 + %c4e);
        stack[%8da] = %aed;
        %f3 = "5";
        $sp = ($sp - %f3);
        %ada = "1";
        %cc = ($sp + %ada);
        %21 = stack[%cc];
        jump %21;
    }
}

func func.random_int {
    proc #a5 {
        %e2 = "5";
        $sp = ($sp + %e2);
        %cb6 = "0";
        %6d = ($sp - %cb6);
        %4d9 = "2";
        %fa = ($sp - %4d9);
        %eeb = stack[%fa];
        %7b = "1";
        %03 = ($sp - %7b);
        %35c = stack[%03];
        stack[%6d] = (%eeb <random> %35c);
        %7da = "0";
        %ee5 = ($sp - %7da);
        %d8d = stack[%ee5];
        %ed = "3";
        %2a = ($sp - %ed);
        %1c = stack[%2a];
        %e6 = "0";
        %1b8 = (%1c + %e6);
        stack[%1b8] = %d8d;
        %38 = "5";
        $sp = ($sp - %38);
        %b0 = "1";
        %ac2 = ($sp + %b0);
        %fb = stack[%ac2];
        jump %fb;
    }
}

func func.random_uint {
    proc #73 {
        %65 = "5";
        $sp = ($sp + %65);
        %0d = "0";
        %08 = ($sp - %0d);
        %ba1 = "2";
        %76e = ($sp - %ba1);
        %2b1 = stack[%76e];
        %37f = "1";
        %96 = ($sp - %37f);
        %3e = stack[%96];
        stack[%08] = (%2b1 <random> %3e);
        %cdb = "0";
        %8cf = ($sp - %cdb);
        %c52 = stack[%8cf];
        %b9 = "3";
        %65a = ($sp - %b9);
        %0ae = stack[%65a];
        %a1 = "0";
        %217 = (%0ae + %a1);
        stack[%217] = %c52;
        %f03 = "5";
        $sp = ($sp - %f03);
        %d85 = "1";
        %d8f = ($sp + %d85);
        %a49 = stack[%d8f];
        jump %a49;
    }
}