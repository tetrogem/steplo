main {
    proc #29 {
        $sp = "-1";
        %e5 = #1f;
        jump %e5;
    }
}

func main {
    proc #1f {
        %a3 = "13";
        $sp = ($sp + %a3);
        %1e = "Variable";
        %c8 = "11";
        %ed = ($sp - %c8);
        %5e = "0";
        %ac = (%ed + %5e);
        stack[%ac] = %1e;
        %17 = "11";
        %59 = ($sp - %17);
        %dd = stack[%59];
        %a8 = "2";
        %93 = ($sp + %a8);
        stack[%93] = %dd;
        %f3 = "1";
        %98 = ($sp + %f3);
        %e1 = #a7;
        stack[%98] = %e1;
        %2d = #52;
        jump %2d;
    }

    proc #a7 {
        %fe = "10";
        %c7 = "0";
        %9b = "10";
        %60 = ($sp - %9b);
        %a70 = (%60 + %c7);
        %2a = "0";
        %68 = (%a70 + %2a);
        stack[%68] = %fe;
        %a0 = "0";
        %ed3 = "10";
        %a06 = ($sp - %ed3);
        %1a = (%a06 + %a0);
        %eb = stack[%1a];
        %6d = "2";
        %69 = ($sp + %6d);
        stack[%69] = %eb;
        %ff = "1";
        %b8 = ($sp + %ff);
        %bb = #69d;
        stack[%b8] = %bb;
        %c5 = #52;
        jump %c5;
    }

    proc #69d {
        %96 = "Hello";
        %a0b = "3";
        %9a = "10";
        %a74 = ($sp - %9a);
        %1c = (%a74 + %a0b);
        %10 = "0";
        %9f = (%1c + %10);
        stack[%9f] = %96;
        %82 = "World!";
        %e9 = "2";
        %c6 = "10";
        %7b = ($sp - %c6);
        %91 = (%7b + %e9);
        %d7 = "0";
        %c65 = (%91 + %d7);
        stack[%c65] = %82;
        %ce = "2";
        %65 = "10";
        %a4 = ($sp - %65);
        %fc = (%a4 + %ce);
        %f5 = stack[%fc];
        %5a = "4";
        %e2 = "10";
        %55 = ($sp - %e2);
        %f5e = (%55 + %5a);
        %ffe = "0";
        %2de = (%f5e + %ffe);
        stack[%2de] = %f5;
        %0b = "11";
        %97 = ($sp - %0b);
        %2ab = stack[%97];
        %26 = "4";
        %08 = "10";
        %ca = ($sp - %08);
        %0e = (%ca + %26);
        %e6 = "0";
        %ee = (%0e + %e6);
        stack[%ee] = %2ab;
        %09 = "3";
        %f1 = "10";
        %65b = ($sp - %f1);
        %7f = (%65b + %09);
        %1b = stack[%7f];
        %76 = "2";
        %c0 = ($sp + %76);
        stack[%c0] = %1b;
        %15 = "1";
        %9d = ($sp + %15);
        %b0 = #ae;
        stack[%9d] = %b0;
        %5e0 = #52;
        jump %5e0;
    }

    proc #ae {
        %13 = "4";
        %92 = "10";
        %78 = ($sp - %92);
        %87 = (%78 + %13);
        %76b = stack[%87];
        %30 = "2";
        %b4 = ($sp + %30);
        stack[%b4] = %76b;
        %7a = "1";
        %3a = ($sp + %7a);
        %76c = #b8a;
        stack[%3a] = %76c;
        %1c9 = #52;
        jump %1c9;
    }

    proc #b8a {
        %681 = "1";
        %5e9 = "5";
        %8a = ($sp - %5e9);
        %106 = "0";
        %81 = (%8a + %106);
        stack[%81] = %681;
        %683 = "2";
        %5b = "5";
        %d6 = ($sp - %5b);
        %c7c = "1";
        %8f = (%d6 + %c7c);
        stack[%8f] = %683;
        %6f = "3";
        %05 = "5";
        %1fb = ($sp - %05);
        %91d = "2";
        %3d = (%1fb + %91d);
        stack[%3d] = %6f;
        %56 = "4";
        %1af = "5";
        %a9 = ($sp - %1af);
        %23 = "3";
        %fd = (%a9 + %23);
        stack[%fd] = %56;
        %99 = "5";
        %88 = "5";
        %acf = ($sp - %88);
        %3e = "4";
        %09c = (%acf + %3e);
        stack[%09c] = %99;
        %61 = "6";
        %ff9 = "5";
        %b7 = ($sp - %ff9);
        %f2 = "5";
        %fc9 = (%b7 + %f2);
        stack[%fc9] = %61;
        exit;
    }
}

func func.out {
    proc #52 {
        %c3 = "2";
        $sp = ($sp + %c3);
        %19 = "0";
        %38 = ($sp - %19);
        %f16 = stack[%38];
        out %f16;
        %9ad = "2";
        $sp = ($sp - %9ad);
        %2c = "1";
        %06 = ($sp + %2c);
        %73 = stack[%06];
        jump %73;
    }
}

func func.in {
    proc #20 {
        %62 = "3";
        $sp = ($sp + %62);
        %af = "0";
        %02 = ($sp - %af);
        in;
        stack[%02] = $answer;
        %03 = "0";
        %065 = ($sp - %03);
        %83 = stack[%065];
        %269 = "1";
        %9e = ($sp - %269);
        %48 = stack[%9e];
        %c1 = "0";
        %e9c = (%48 + %c1);
        stack[%e9c] = %83;
        %cf = "3";
        $sp = ($sp - %cf);
        %fdf = "1";
        %d9 = ($sp + %fdf);
        %4a = stack[%d9];
        jump %4a;
    }
}

func func.random_num {
    proc #4f {
        %eb4 = "5";
        $sp = ($sp + %eb4);
        %aca = "0";
        %a6 = ($sp - %aca);
        %52a = "0.0";
        %28 = "1.0";
        stack[%a6] = (%52a <random> %28);
        %28c = "2";
        %b04 = ($sp - %28c);
        %b9 = stack[%b04];
        %5a8 = "0";
        %49 = ($sp - %5a8);
        %01 = stack[%49];
        %bc = "1";
        %58 = ($sp - %bc);
        %41 = stack[%58];
        %fe7 = "2";
        %c4 = ($sp - %fe7);
        %ddd = stack[%c4];
        %7d = (%41 - %ddd);
        %83f = (%01 * %7d);
        %2e = (%b9 + %83f);
        %fd9 = "3";
        %918 = ($sp - %fd9);
        %72 = stack[%918];
        %85 = "0";
        %d4 = (%72 + %85);
        stack[%d4] = %2e;
        %ab = "5";
        $sp = ($sp - %ab);
        %1a2 = "1";
        %a40 = ($sp + %1a2);
        %37 = stack[%a40];
        jump %37;
    }
}

func func.random_int {
    proc #16 {
        %11 = "5";
        $sp = ($sp + %11);
        %7e = "0";
        %e9d = ($sp - %7e);
        %039 = "2";
        %b03 = ($sp - %039);
        %cf9 = stack[%b03];
        %610 = "1";
        %9bd = ($sp - %610);
        %86 = stack[%9bd];
        stack[%e9d] = (%cf9 <random> %86);
        %5f = "0";
        %f7 = ($sp - %5f);
        %57 = stack[%f7];
        %989 = "3";
        %a9a = ($sp - %989);
        %e4 = stack[%a9a];
        %22 = "0";
        %62c = (%e4 + %22);
        stack[%62c] = %57;
        %3d6 = "5";
        $sp = ($sp - %3d6);
        %a9c = "1";
        %628 = ($sp + %a9c);
        %e3 = stack[%628];
        jump %e3;
    }
}

func func.random_uint {
    proc #858 {
        %e5a = "5";
        $sp = ($sp + %e5a);
        %485 = "0";
        %e1d = ($sp - %485);
        %9f7 = "2";
        %b2 = ($sp - %9f7);
        %c42 = stack[%b2];
        %27 = "1";
        %764 = ($sp - %27);
        %d74 = stack[%764];
        stack[%e1d] = (%c42 <random> %d74);
        %0ec = "0";
        %7f2 = ($sp - %0ec);
        %c423 = stack[%7f2];
        %0b2 = "3";
        %ec = ($sp - %0b2);
        %aea = stack[%ec];
        %fb = "0";
        %ec7 = (%aea + %fb);
        stack[%ec7] = %c423;
        %e2b = "5";
        $sp = ($sp - %e2b);
        %d0 = "1";
        %66 = ($sp + %d0);
        %81f = stack[%66];
        jump %81f;
    }
}