main {
    proc #7d {
        $sp = "-1";
        %f8 = #2e;
        jump %f8;
    }
}

func main {
    proc #2e {
        %5e = "2";
        $sp = ($sp + %5e);
        %1b = "0";
        %ec = ($sp - %1b);
        %8d = "2";
        %aa = ($sp + %8d);
        stack[%aa] = %ec;
        %04 = "1";
        %b2 = ($sp + %04);
        %d4 = #de;
        stack[%b2] = %d4;
        %65 = #5c;
        jump %65;
    }

    proc #de {
        %66 = "0";
        %8c = ($sp - %66);
        %cc = stack[%8c];
        %8b = "2";
        %60 = ($sp + %8b);
        stack[%60] = %cc;
        %ed = "1";
        %a7 = ($sp + %ed);
        %c9 = #68;
        stack[%a7] = %c9;
        %5b = #d1;
        jump %5b;
    }

    proc #68 {
        exit;
    }
}

func func.mutate_ref {
    proc #5c {
        %b0 = "2";
        $sp = ($sp + %b0);
        %ef = "1";
        %32 = "0";
        %62 = ($sp - %32);
        %20 = stack[%62];
        %79 = "0";
        %2f = (%20 + %79);
        stack[%2f] = %ef;
        %6a = "2";
        $sp = ($sp - %6a);
        %cd = "1";
        %f2 = ($sp + %cd);
        %26 = stack[%f2];
        jump %26;
    }
}

func func.needs_val {
    proc #d1 {
        %03 = "2";
        $sp = ($sp + %03);
        %25 = "0";
        %d7 = ($sp - %25);
        %52 = stack[%d7];
        %14 = "2";
        %ef2 = ($sp + %14);
        stack[%ef2] = %52;
        %521 = "1";
        %c3 = ($sp + %521);
        %c91 = #12;
        stack[%c3] = %c91;
        %c97 = #39;
        jump %c97;
    }

    proc #12 {
        %4a = "2";
        $sp = ($sp - %4a);
        %dd = "1";
        %f3 = ($sp + %dd);
        %70 = stack[%f3];
        jump %70;
    }
}

func func.out {
    proc #39 {
        %56 = "2";
        $sp = ($sp + %56);
        %76 = "0";
        %8a = ($sp - %76);
        %78 = stack[%8a];
        out %78;
        %6d = "2";
        $sp = ($sp - %6d);
        %f4 = "1";
        %5c8 = ($sp + %f4);
        %253 = stack[%5c8];
        jump %253;
    }
}

func func.in {
    proc #35 {
        %656 = "3";
        $sp = ($sp + %656);
        %cd6 = "0";
        %e2 = ($sp - %cd6);
        in;
        stack[%e2] = $answer;
        %88 = "0";
        %57 = ($sp - %88);
        %6e = stack[%57];
        %ecb = "1";
        %93 = ($sp - %ecb);
        %a5 = stack[%93];
        %23 = "0";
        %6e4 = (%a5 + %23);
        stack[%6e4] = %6e;
        %09 = "3";
        $sp = ($sp - %09);
        %524 = "1";
        %36 = ($sp + %524);
        %bd = stack[%36];
        jump %bd;
    }
}

func func.random_num {
    proc #f5 {
        %22 = "5";
        $sp = ($sp + %22);
        %49 = "0";
        %ac = ($sp - %49);
        %85 = "0.0";
        %06 = "1.0";
        stack[%ac] = (%85 <random> %06);
        %fe = "2";
        %d1e = ($sp - %fe);
        %2d = stack[%d1e];
        %700 = "0";
        %bc = ($sp - %700);
        %11 = stack[%bc];
        %4b = "1";
        %d6 = ($sp - %4b);
        %7b = stack[%d6];
        %08 = "2";
        %0c = ($sp - %08);
        %4f = stack[%0c];
        %032 = (%7b - %4f);
        %c7 = (%11 * %032);
        %ba = (%2d + %c7);
        %a3 = "3";
        %ed4 = ($sp - %a3);
        %5e8 = stack[%ed4];
        %e24 = "0";
        %ba7 = (%5e8 + %e24);
        stack[%ba7] = %ba;
        %80 = "5";
        $sp = ($sp - %80);
        %72 = "1";
        %d3 = ($sp + %72);
        %42 = stack[%d3];
        jump %42;
    }
}

func func.random_int {
    proc #123 {
        %2c = "5";
        $sp = ($sp + %2c);
        %236 = "0";
        %b8 = ($sp - %236);
        %86 = "2";
        %9e = ($sp - %86);
        %e22 = stack[%9e];
        %a54 = "1";
        %c0 = ($sp - %a54);
        %782 = stack[%c0];
        stack[%b8] = (%e22 <random> %782);
        %a2 = "0";
        %ee = ($sp - %a2);
        %a8 = stack[%ee];
        %9e2 = "3";
        %bb = ($sp - %9e2);
        %1c = stack[%bb];
        %94 = "0";
        %c99 = (%1c + %94);
        stack[%c99] = %a8;
        %4b2 = "5";
        $sp = ($sp - %4b2);
        %58 = "1";
        %949 = ($sp + %58);
        %cd0 = stack[%949];
        jump %cd0;
    }
}

func func.random_uint {
    proc #72a {
        %91 = "5";
        $sp = ($sp + %91);
        %f1 = "0";
        %1cf = ($sp - %f1);
        %00 = "2";
        %cc3 = ($sp - %00);
        %4b7 = stack[%cc3];
        %f12 = "1";
        %0cf = ($sp - %f12);
        %63 = stack[%0cf];
        stack[%1cf] = (%4b7 <random> %63);
        %93f = "0";
        %ae = ($sp - %93f);
        %5e2 = stack[%ae];
        %42c = "3";
        %81 = ($sp - %42c);
        %d77 = stack[%81];
        %e3 = "0";
        %af = (%d77 + %e3);
        stack[%af] = %5e2;
        %d2 = "5";
        $sp = ($sp - %d2);
        %31 = "1";
        %e8 = ($sp + %31);
        %59 = stack[%e8];
        jump %59;
    }
}