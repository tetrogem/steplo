main {
    proc #e7 {
        $sp = "-1";
        %4b = #7a;
        jump %4b;
    }
}

func main {
    proc #7a {
        %00 = "2";
        $sp = ($sp + %00);
        %e6 = "0";
        %1f = ($sp - %e6);
        %4ba = "2";
        %c8 = ($sp + %4ba);
        stack[%c8] = %1f;
        %b3 = "1";
        %21 = ($sp + %b3);
        %58 = #51;
        stack[%21] = %58;
        %be = #a9;
        jump %be;
    }

    proc #51 {
        %06 = "0";
        %f0 = ($sp - %06);
        %42 = stack[%f0];
        %09 = "2";
        %9c = ($sp + %09);
        stack[%9c] = %42;
        %dc = "1";
        %e5 = ($sp + %dc);
        %16 = #7b;
        stack[%e5] = %16;
        %75 = #66;
        jump %75;
    }

    proc #7b {
        exit;
    }
}

func func.mutate_ref {
    proc #a9 {
        %57 = "2";
        $sp = ($sp + %57);
        %2f = "1";
        %5e = "0";
        %33 = ($sp - %5e);
        %02 = stack[%33];
        %ed = "0";
        %8b = (%02 + %ed);
        stack[%8b] = %2f;
        %be4 = "2";
        $sp = ($sp - %be4);
        %a5 = "1";
        %53 = ($sp + %a5);
        %6c = stack[%53];
        jump %6c;
    }
}

func func.needs_val {
    proc #66 {
        %fc = "2";
        $sp = ($sp + %fc);
        %096 = "0";
        %3b = ($sp - %096);
        %67 = stack[%3b];
        %750 = "2";
        %72 = ($sp + %750);
        stack[%72] = %67;
        %39 = "1";
        %ac = ($sp + %39);
        %10 = #12;
        stack[%ac] = %10;
        %91 = #8d;
        jump %91;
    }

    proc #12 {
        %36 = "2";
        $sp = ($sp - %36);
        %a3 = "1";
        %a1 = ($sp + %a3);
        %429 = stack[%a1];
        jump %429;
    }
}

func func.out {
    proc #8d {
        %aa = "2";
        $sp = ($sp + %aa);
        %6d = "0";
        %e9 = ($sp - %6d);
        %e0 = stack[%e9];
        out %e0;
        %4e = "2";
        $sp = ($sp - %4e);
        %cc = "1";
        %0b = ($sp + %cc);
        %4d = stack[%0b];
        jump %4d;
    }
}

func func.in {
    proc #52 {
        %424 = "3";
        $sp = ($sp + %424);
        %d5 = "0";
        %0a = ($sp - %d5);
        in;
        stack[%0a] = $answer;
        %c7 = "0";
        %56 = ($sp - %c7);
        %95 = stack[%56];
        %27 = "1";
        %f5 = ($sp - %27);
        %069 = stack[%f5];
        %d2 = "0";
        %c7e = (%069 + %d2);
        stack[%c7e] = %95;
        %670 = "3";
        $sp = ($sp - %670);
        %24 = "1";
        %0d = ($sp + %24);
        %ba = stack[%0d];
        jump %ba;
    }
}

func func.random_num {
    proc #f6 {
        %f5f = "5";
        $sp = ($sp + %f5f);
        %ff = "0";
        %063 = ($sp - %ff);
        %e98 = "0.0";
        %fe = "1.0";
        stack[%063] = (%e98 <random> %fe);
        %ff0 = "2";
        %05 = ($sp - %ff0);
        %d5a = stack[%05];
        %244 = "0";
        %9f = ($sp - %244);
        %cb = stack[%9f];
        %79 = "1";
        %c3 = ($sp - %79);
        %bc = stack[%c3];
        %99 = "2";
        %44 = ($sp - %99);
        %fb = stack[%44];
        %2a = (%bc - %fb);
        %4ed = (%cb * %2a);
        %a4 = (%d5a + %4ed);
        %27d = "3";
        %e2 = ($sp - %27d);
        %83 = stack[%e2];
        %43 = "0";
        %18 = (%83 + %43);
        stack[%18] = %a4;
        %37 = "5";
        $sp = ($sp - %37);
        %fd = "1";
        %b2 = ($sp + %fd);
        %2ac = stack[%b2];
        jump %2ac;
    }
}

func func.random_int {
    proc #7c {
        %4d9 = "5";
        $sp = ($sp + %4d9);
        %88 = "0";
        %39c = ($sp - %88);
        %3d = "2";
        %9d = ($sp - %3d);
        %b8 = stack[%9d];
        %c3b = "1";
        %8d9 = ($sp - %c3b);
        %85 = stack[%8d9];
        stack[%39c] = (%b8 <random> %85);
        %126 = "0";
        %270 = ($sp - %126);
        %c8e = stack[%270];
        %69 = "3";
        %df = ($sp - %69);
        %371 = stack[%df];
        %c0 = "0";
        %fc8 = (%371 + %c0);
        stack[%fc8] = %c8e;
        %4f = "5";
        $sp = ($sp - %4f);
        %73 = "1";
        %6db = ($sp + %73);
        %b8e = stack[%6db];
        jump %b8e;
    }
}

func func.random_uint {
    proc #aa6 {
        %240 = "5";
        $sp = ($sp + %240);
        %ee = "0";
        %065 = ($sp - %ee);
        %d2a = "2";
        %40 = ($sp - %d2a);
        %d58 = stack[%40];
        %04 = "1";
        %c6 = ($sp - %04);
        %dc9 = stack[%c6];
        stack[%065] = (%d58 <random> %dc9);
        %123 = "0";
        %c0c = ($sp - %123);
        %0ad = stack[%c0c];
        %8f = "3";
        %6f = ($sp - %8f);
        %f2 = stack[%6f];
        %f1 = "0";
        %d0 = (%f2 + %f1);
        stack[%d0] = %0ad;
        %63 = "5";
        $sp = ($sp - %63);
        %bd = "1";
        %d1 = ($sp + %bd);
        %78 = stack[%d1];
        jump %78;
    }
}