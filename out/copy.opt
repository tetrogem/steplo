main {
    proc #ff {
        $sp = "-1";
        %cf = #46;
        jump %cf;
    }
}

func main {
    proc #46 {
        %e7 = "3";
        $sp = ($sp + %e7);
        %9a = "12345";
        %25 = "1";
        %73 = ($sp - %25);
        %b6 = "0";
        %e3 = (%73 + %b6);
        stack[%e3] = %9a;
        %fe = "1";
        %7a = ($sp - %fe);
        %02 = stack[%7a];
        %e0 = "0";
        %e6 = ($sp - %e0);
        %93 = "0";
        %78 = (%e6 + %93);
        stack[%78] = %02;
        exit;
    }
}

func func.out {
    proc #03 {
        %30 = "2";
        $sp = ($sp + %30);
        %f4 = "0";
        %0d = ($sp - %f4);
        %28 = stack[%0d];
        out %28;
        %e75 = "2";
        $sp = ($sp - %e75);
        %48 = "1";
        %58 = ($sp + %48);
        %fb = stack[%58];
        jump %fb;
    }
}

func func.in {
    proc #2e {
        %ea = "3";
        $sp = ($sp + %ea);
        %c8 = "0";
        %9d = ($sp - %c8);
        in;
        stack[%9d] = $answer;
        %dc = "0";
        %f5 = ($sp - %dc);
        %83 = stack[%f5];
        %96 = "1";
        %d8 = ($sp - %96);
        %60 = "0";
        %e5 = (%d8 + %60);
        %e5 = %e5;
        stack[%e5] = %83;
        %e5a = "3";
        $sp = ($sp - %e5a);
        %f6 = "1";
        %460 = ($sp + %f6);
        %95 = stack[%460];
        jump %95;
    }
}