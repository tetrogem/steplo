main {
    proc #8e {
        $sp = "-1";
        %b4 = #61;
        jump %b4;
    }
}

func main {
    proc #61 {
        %d2 = "3";
        $sp = ($sp + %d2);
        %a7 = "Enter how many iterations to perform:";
        %5f = "2";
        %e7 = ($sp + %5f);
        stack[%e7] = %a7;
        %f1 = "1";
        %b1 = ($sp + %f1);
        %1b = #bd;
        stack[%b1] = %1b;
        %73 = #0b;
        jump %73;
    }

    proc #bd {
        %35 = "0";
        %c5 = ($sp - %35);
        %b4a = "2";
        %75 = ($sp + %b4a);
        stack[%75] = %c5;
        %2d = "1";
        %03 = ($sp + %2d);
        %e3 = #48;
        stack[%03] = %e3;
        %8b = #14;
        jump %8b;
    }

    proc #48 {
        %ca = "1";
        %22 = "1";
        %99 = ($sp - %22);
        %45 = "0";
        %cb = (%99 + %45);
        stack[%cb] = %ca;
        %41 = #32;
        jump %41;
    }

    proc #ef {
        %d3 = "Done!";
        %6b = "2";
        %13 = ($sp + %6b);
        stack[%13] = %d3;
        %e4 = "1";
        %26 = ($sp + %e4);
        %79 = #ee;
        stack[%26] = %79;
        %c3 = #0b;
        jump %c3;
    }

    proc #ee {
        exit;
    }

    proc #cf {
        %04 = "1";
        %5b = ($sp - %04);
        %f0 = stack[%5b];
        %4d = "15";
        %98 = (%f0 % %4d);
        %54 = "0";
        %c7 = (%98 == %54);
        %f2 = #aa;
        %f5 = #29;
        if %c7 then jump %f2 else jump %f5;
    }

    proc #90 {
        %8bc = "1";
        %78 = ($sp - %8bc);
        %2e = stack[%78];
        %2db = "1";
        %3e = (%2e + %2db);
        %c1 = "1";
        %76 = ($sp - %c1);
        %791 = "0";
        %9a = (%76 + %791);
        stack[%9a] = %3e;
        %fd = #32;
        jump %fd;
    }

    proc #aa {
        %bb = "FizzBuzz";
        %fa = "2";
        %ca5 = ($sp + %fa);
        stack[%ca5] = %bb;
        %97 = "1";
        %58 = ($sp + %97);
        %21 = #71;
        stack[%58] = %21;
        %751 = #0b;
        jump %751;
    }

    proc #71 {
        %e78 = #90;
        jump %e78;
    }

    proc #29 {
        %51 = "1";
        %13f = ($sp - %51);
        %52 = stack[%13f];
        %0d = "3";
        %5e = (%52 % %0d);
        %8a = "0";
        %77 = (%5e == %8a);
        %480 = #ae;
        %8f = #05;
        if %77 then jump %480 else jump %8f;
    }

    proc #731 {
        %d7 = #90;
        jump %d7;
    }

    proc #ae {
        %94 = "Fizz";
        %1e = "2";
        %bf = ($sp + %1e);
        stack[%bf] = %94;
        %d29 = "1";
        %93 = ($sp + %d29);
        %bd0 = #217;
        stack[%93] = %bd0;
        %66 = #0b;
        jump %66;
    }

    proc #217 {
        %dc = #731;
        jump %dc;
    }

    proc #05 {
        %1d = "1";
        %6f = ($sp - %1d);
        %7d = stack[%6f];
        %15 = "5";
        %3b = (%7d % %15);
        %43 = "0";
        %943 = (%3b == %43);
        %d6 = #aa0;
        %47 = #1c;
        if %943 then jump %d6 else jump %47;
    }

    proc #60 {
        %7c = #731;
        jump %7c;
    }

    proc #aa0 {
        %152 = "Buzz";
        %af = "2";
        %510 = ($sp + %af);
        stack[%510] = %152;
        %e6 = "1";
        %bfa = ($sp + %e6);
        %d62 = #937;
        stack[%bfa] = %d62;
        %1c7 = #0b;
        jump %1c7;
    }

    proc #937 {
        %fd3 = #60;
        jump %fd3;
    }

    proc #1c {
        %1cf = "1";
        %54a = ($sp - %1cf);
        %1dc = stack[%54a];
        %46 = "2";
        %cbb = ($sp + %46);
        stack[%cbb] = %1dc;
        %295 = "1";
        %f4 = ($sp + %295);
        %5d = #7d1;
        stack[%f4] = %5d;
        %a3 = #0b;
        jump %a3;
    }

    proc #7d1 {
        %09 = #60;
        jump %09;
    }

    proc #32 {
        %b0 = "1";
        %f6 = ($sp - %b0);
        %50 = stack[%f6];
        %20 = "0";
        %fc = ($sp - %20);
        %aa9 = stack[%fc];
        %a4 = (!(%50 > %aa9));
        %8b0 = #cf;
        %2f = #ef;
        if %a4 then jump %8b0 else jump %2f;
    }
}

func func.out {
    proc #0b {
        %a0 = "2";
        $sp = ($sp + %a0);
        %8c = "0";
        %3c = ($sp - %8c);
        %1dd = stack[%3c];
        out %1dd;
        %55 = "2";
        $sp = ($sp - %55);
        %3bc = "1";
        %ae9 = ($sp + %3bc);
        %49 = stack[%ae9];
        jump %49;
    }
}

func func.in {
    proc #14 {
        %46e = "3";
        $sp = ($sp + %46e);
        %c9 = "0";
        %e7f = ($sp - %c9);
        in;
        stack[%e7f] = $answer;
        %22f = "0";
        %62 = ($sp - %22f);
        %f5b = stack[%62];
        %24 = "1";
        %608 = ($sp - %24);
        %f60 = stack[%608];
        %ba = "0";
        %0b3 = (%f60 + %ba);
        stack[%0b3] = %f5b;
        %8e1 = "3";
        $sp = ($sp - %8e1);
        %249 = "1";
        %605 = ($sp + %249);
        %cc = stack[%605];
        jump %cc;
    }
}

func func.random_num {
    proc #b6 {
        %53 = "5";
        $sp = ($sp + %53);
        %95 = "0";
        %36 = ($sp - %95);
        %08 = "0.0";
        %7c2 = "1.0";
        stack[%36] = (%08 <random> %7c2);
        %ff = "2";
        %92 = ($sp - %ff);
        %614 = stack[%92];
        %84 = "0";
        %31 = ($sp - %84);
        %aab = stack[%31];
        %842 = "1";
        %83 = ($sp - %842);
        %763 = stack[%83];
        %7a = "2";
        %084 = ($sp - %7a);
        %02 = stack[%084];
        %f14 = (%763 - %02);
        %324 = (%aab * %f14);
        %dd = (%614 + %324);
        %39 = "3";
        %1e3 = ($sp - %39);
        %a9 = stack[%1e3];
        %01 = "0";
        %c91 = (%a9 + %01);
        stack[%c91] = %dd;
        %2e6 = "5";
        $sp = ($sp - %2e6);
        %f8 = "1";
        %01a = ($sp + %f8);
        %465 = stack[%01a];
        jump %465;
    }
}

func func.random_int {
    proc #bde {
        %c36 = "5";
        $sp = ($sp + %c36);
        %a9c = "0";
        %26f = ($sp - %a9c);
        %73f = "2";
        %619 = ($sp - %73f);
        %e1 = stack[%619];
        %5c = "1";
        %77e = ($sp - %5c);
        %998 = stack[%77e];
        stack[%26f] = (%e1 <random> %998);
        %3d = "0";
        %1da = ($sp - %3d);
        %fe = stack[%1da];
        %c56 = "3";
        %b5 = ($sp - %c56);
        %760 = stack[%b5];
        %c9b = "0";
        %0c = (%760 + %c9b);
        stack[%0c] = %fe;
        %84f = "5";
        $sp = ($sp - %84f);
        %be = "1";
        %64 = ($sp + %be);
        %a8 = stack[%64];
        jump %a8;
    }
}

func func.random_uint {
    proc #3a {
        %949 = "5";
        $sp = ($sp + %949);
        %7b = "0";
        %aee = ($sp - %7b);
        %211 = "2";
        %8c5 = ($sp - %211);
        %514 = stack[%8c5];
        %81 = "1";
        %f48 = ($sp - %81);
        %05a = stack[%f48];
        stack[%aee] = (%514 <random> %05a);
        %2d4 = "0";
        %a08 = ($sp - %2d4);
        %645 = stack[%a08];
        %785 = "3";
        %ea = ($sp - %785);
        %e13 = stack[%ea];
        %46f = "0";
        %024 = (%e13 + %46f);
        stack[%024] = %645;
        %0cb = "5";
        $sp = ($sp - %0cb);
        %366 = "1";
        %a6 = ($sp + %366);
        %16 = stack[%a6];
        jump %16;
    }
}