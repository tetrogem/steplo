main {
    proc #0c {
        $sp = "-1";
        %d7 = #4f;
        jump %d7;
    }
}

func main {
    proc #4f {
        %f7 = "2";
        $sp = ($sp + %f7);
        %a2 = "20";
        %01 = "0";
        %40 = ($sp - %01);
        %10 = "0";
        %ad = (%40 + %10);
        stack[%ad] = %a2;
        %91 = "0";
        %c1 = ($sp - %91);
        %3b = "2";
        %a9 = ($sp + %3b);
        stack[%a9] = %c1;
        %7f = "1";
        %08 = ($sp + %7f);
        %df = #b5;
        stack[%08] = %df;
        %2a = #c0;
        jump %2a;
    }

    proc #b5 {
        exit;
    }
}

func func.iterate {
    proc #c0 {
        %18 = "3";
        $sp = ($sp + %18);
        %be = "1";
        %a8 = ($sp - %be);
        %d5 = stack[%a8];
        %1d = stack[%d5];
        %da = "0";
        %30 = ($sp - %da);
        %c4 = "0";
        %87 = (%30 + %c4);
        stack[%87] = %1d;
        %d74 = "0";
        %41 = "0";
        %30f = ($sp - %41);
        %89 = stack[%30f];
        %6c = (!(%d74 == %89));
        %9d = #a6;
        %bc = #31;
        if %6c then jump %9d else jump %bc;
    }

    proc #31 {
        %d3 = "3";
        $sp = ($sp - %d3);
        %72 = "1";
        %310 = ($sp + %72);
        %a1 = stack[%310];
        jump %a1;
    }

    proc #a6 {
        %48 = "0";
        %54 = ($sp - %48);
        %70 = stack[%54];
        %c2 = "1";
        %2f = (%70 - %c2);
        %f9 = "1";
        %a8b = ($sp - %f9);
        %7d = stack[%a8b];
        %ae = "0";
        %c49 = (%7d + %ae);
        stack[%c49] = %2f;
        %36 = "1";
        %e9 = ($sp + %36);
        %b6 = #9e;
        stack[%e9] = %b6;
        %0a = #ff;
        jump %0a;
    }

    proc #9e {
        %15 = "1";
        %b51 = ($sp - %15);
        %93 = stack[%b51];
        %80 = "2";
        %da6 = ($sp + %80);
        stack[%da6] = %93;
        %1da = "1";
        %81 = ($sp + %1da);
        %27 = #a9a;
        stack[%81] = %27;
        %7b = #c0;
        jump %7b;
    }

    proc #a9a {
        %f3 = #31;
        jump %f3;
    }
}

func func.greet {
    proc #ff {
        %d9 = "1";
        $sp = ($sp + %d9);
        %82 = "Hello!";
        %84 = "2";
        %c1a = ($sp + %84);
        stack[%c1a] = %82;
        %beb = "1";
        %d0 = ($sp + %beb);
        %c42 = #1dd;
        stack[%d0] = %c42;
        %85 = #c7;
        jump %85;
    }

    proc #1dd {
        %083 = "1";
        $sp = ($sp - %083);
        %157 = "1";
        %a18 = ($sp + %157);
        %52 = stack[%a18];
        jump %52;
    }
}

func func.out {
    proc #c7 {
        %ee = "2";
        $sp = ($sp + %ee);
        %18e = "0";
        %1e = ($sp - %18e);
        %5c = stack[%1e];
        out %5c;
        %32 = "2";
        $sp = ($sp - %32);
        %16 = "1";
        %4f2 = ($sp + %16);
        %b3 = stack[%4f2];
        jump %b3;
    }
}

func func.in {
    proc #2d {
        %27d = "3";
        $sp = ($sp + %27d);
        %707 = "0";
        %2e = ($sp - %707);
        in;
        stack[%2e] = $answer;
        %41e = "0";
        %07 = ($sp - %41e);
        %ad8 = stack[%07];
        %bf = "1";
        %4e = ($sp - %bf);
        %70b = stack[%4e];
        %c26 = "0";
        %ce = (%70b + %c26);
        stack[%ce] = %ad8;
        %b55 = "3";
        $sp = ($sp - %b55);
        %729 = "1";
        %25 = ($sp + %729);
        %17 = stack[%25];
        jump %17;
    }
}