main {
    proc #ac {
        $sp = "-1";
        %d0 = #b1;
        jump %d0;
    }
}

func main {
    proc #b1 {
        %ed = "1111";
        $sp = ($sp + %ed);
        %92 = "9";
        %88 = ($sp - %92);
        %fb = "2";
        %ca = ($sp + %fb);
        stack[%ca] = %88;
        %cc = "109";
        %fbc = ($sp - %cc);
        %cc6 = "3";
        %ad = ($sp + %cc6);
        stack[%ad] = %fbc;
        %4f = "100";
        %f7 = "4";
        %67 = ($sp + %f7);
        stack[%67] = %4f;
        %6f = "1";
        %32 = ($sp + %6f);
        %01 = #bc;
        stack[%32] = %01;
        %6d = #2e;
        jump %6d;
    }

    proc #bc {
        %be = "6";
        %41 = ($sp - %be);
        %3b = "2";
        %62 = ($sp + %3b);
        stack[%62] = %41;
        %10 = "1109";
        %ce = ($sp - %10);
        %05 = "3";
        %16 = ($sp + %05);
        stack[%16] = %ce;
        %09 = "9";
        %89 = ($sp - %09);
        %56 = "4";
        %2ec = ($sp + %56);
        stack[%2ec] = %89;
        %9f = "1";
        %69 = ($sp + %9f);
        %ce0 = #2c;
        stack[%69] = %ce0;
        %60 = #ef;
        jump %60;
    }

    proc #2c {
        %1a = "3";
        %5e = ($sp - %1a);
        %dc = "2";
        %30 = ($sp + %dc);
        stack[%30] = %5e;
        %cb = "6";
        %59 = ($sp - %cb);
        %019 = "3";
        %61 = ($sp + %019);
        stack[%61] = %59;
        %b0 = "1";
        %1d = "4";
        %6dd = ($sp + %1d);
        stack[%6dd] = %b0;
        %91 = "1";
        %d05 = ($sp + %91);
        %df = #99;
        stack[%d05] = %df;
        %bb = #b5;
        jump %bb;
    }

    proc #99 {
        %7a = "10";
        %7c = "3";
        %f6 = ($sp - %7c);
        %50 = stack[%f6];
        %b6 = "0";
        %da = (%50 + %b6);
        stack[%da] = %7a;
        %ef8 = "4";
        %f0 = ($sp - %ef8);
        %f2 = "2";
        %5a = ($sp + %f2);
        stack[%5a] = %f0;
        %eb = "9";
        %38 = ($sp - %eb);
        %77 = "3";
        %e8 = ($sp + %77);
        stack[%e8] = %38;
        %48 = "1";
        %c6 = ($sp + %48);
        %b2 = #506;
        stack[%c6] = %b2;
        %aa = #25;
        jump %aa;
    }

    proc #506 {
        %f3 = "4";
        %da2 = ($sp - %f3);
        %dd = stack[%da2];
        %dd0 = "2";
        %5f = ($sp + %dd0);
        stack[%5f] = %dd;
        %08 = "1";
        %d1 = ($sp + %08);
        %13 = #8a;
        stack[%d1] = %13;
        %49 = #b3;
        jump %49;
    }

    proc #8a {
        %db = "2";
        %2a = ($sp - %db);
        %a2 = "2";
        %b39 = ($sp + %a2);
        stack[%b39] = %2a;
        %b25 = "6";
        %b9 = ($sp - %b25);
        %2e2 = "3";
        %c7 = ($sp + %2e2);
        stack[%c7] = %b9;
        %7ad = "3";
        %09c = "4";
        %71 = ($sp + %09c);
        stack[%71] = %7ad;
        %e0 = "1";
        %fb7 = ($sp + %e0);
        %ee = #96;
        stack[%fb7] = %ee;
        %26 = #b5;
        jump %26;
    }

    proc #96 {
        %f9 = "11";
        %d4 = "2";
        %2d = ($sp - %d4);
        %0e = stack[%2d];
        %676 = "0";
        %b0e = (%0e + %676);
        stack[%b0e] = %f9;
        %2b = "22";
        %380 = "2";
        %80 = ($sp - %380);
        %e4 = stack[%80];
        %1e = "1";
        %90 = (%e4 + %1e);
        stack[%90] = %2b;
        %92d = "33";
        %d3 = "2";
        %be8 = ($sp - %d3);
        %a2b = stack[%be8];
        %82 = "2";
        %8a6 = (%a2b + %82);
        stack[%8a6] = %92d;
        %c63 = "4";
        %12 = ($sp - %c63);
        %75 = "2";
        %00 = ($sp + %75);
        stack[%00] = %12;
        %f8 = "9";
        %cc4 = ($sp - %f8);
        %8b = "3";
        %f4 = ($sp + %8b);
        stack[%f4] = %cc4;
        %d32 = "1";
        %55 = ($sp + %d32);
        %b4 = #2de;
        stack[%55] = %b4;
        %c0 = #25;
        jump %c0;
    }

    proc #2de {
        %560 = "4";
        %f3a = ($sp - %560);
        %20 = stack[%f3a];
        %ad4 = "2";
        %d7 = ($sp + %ad4);
        stack[%d7] = %20;
        %625 = "1";
        %c9 = ($sp + %625);
        %4b = #d2;
        stack[%c9] = %4b;
        %3b8 = #b3;
        jump %3b8;
    }

    proc #d2 {
        %fb3 = "1";
        %07 = ($sp - %fb3);
        %11 = "2";
        %06 = ($sp + %11);
        stack[%06] = %07;
        %7d = "6";
        %84 = ($sp - %7d);
        %70 = "3";
        %114 = ($sp + %70);
        stack[%114] = %84;
        %139 = "1";
        %e9 = "4";
        %d9 = ($sp + %e9);
        stack[%d9] = %139;
        %4f8 = "1";
        %890 = ($sp + %4f8);
        %af = #37;
        stack[%890] = %af;
        %88d = #b5;
        jump %88d;
    }

    proc #37 {
        %a4 = "-9.5";
        %46 = "1";
        %8d = ($sp - %46);
        %5ab = stack[%8d];
        %58 = "0";
        %0c = (%5ab + %58);
        stack[%0c] = %a4;
        %b99 = "4";
        %ebe = ($sp - %b99);
        %ed4 = "2";
        %0c3 = ($sp + %ed4);
        stack[%0c3] = %ebe;
        %94 = "9";
        %6b = ($sp - %94);
        %592 = "3";
        %4c = ($sp + %592);
        stack[%4c] = %6b;
        %843 = "1";
        %846 = ($sp + %843);
        %a4f = #73;
        stack[%846] = %a4f;
        %bd = #25;
        jump %bd;
    }

    proc #73 {
        %38c = "4";
        %8f = ($sp - %38c);
        %5c = stack[%8f];
        %ad6 = "2";
        %802 = ($sp + %ad6);
        stack[%802] = %5c;
        %f1 = "1";
        %3b6 = ($sp + %f1);
        %b23 = #f83;
        stack[%3b6] = %b23;
        %6b4 = #b3;
        jump %6b4;
    }

    proc #f83 {
        %8b1 = "6";
        %d79 = ($sp - %8b1);
        %d5 = "2";
        %64 = ($sp + %d5);
        stack[%64] = %d79;
        %6c = "3";
        %95 = ($sp - %6c);
        %93 = stack[%95];
        %c8 = "3";
        %1d5 = ($sp + %c8);
        stack[%1d5] = %93;
        %a5 = "1";
        %42 = ($sp + %a5);
        %de = #85;
        stack[%42] = %de;
        %45 = #54;
        jump %45;
    }

    proc #85 {
        %1f = "4";
        %081 = ($sp - %1f);
        %dca = "2";
        %1fb = ($sp + %dca);
        stack[%1fb] = %081;
        %81 = "9";
        %7e = ($sp - %81);
        %5c4 = "3";
        %48d = ($sp + %5c4);
        stack[%48d] = %7e;
        %0c2 = "1";
        %e1 = ($sp + %0c2);
        %ee1 = #094;
        stack[%e1] = %ee1;
        %11b = #25;
        jump %11b;
    }

    proc #094 {
        %303 = "4";
        %ebe3 = ($sp - %303);
        %0e0 = stack[%ebe3];
        %2a9 = "2";
        %ede = ($sp + %2a9);
        stack[%ede] = %0e0;
        %29 = "1";
        %ba = ($sp + %29);
        %b98 = #3b81;
        stack[%ba] = %b98;
        %1af = #b3;
        jump %1af;
    }

    proc #3b81 {
        %ed6 = "0";
        %39 = ($sp - %ed6);
        %2ce = "2";
        %04 = ($sp + %2ce);
        stack[%04] = %39;
        %d7f = "6";
        %44 = ($sp - %d7f);
        %428 = "3";
        %3a = ($sp + %428);
        stack[%3a] = %44;
        %09c2 = "5";
        %ba5 = "4";
        %692 = ($sp + %ba5);
        stack[%692] = %09c2;
        %31 = "1";
        %ff = ($sp + %31);
        %94e = #1b;
        stack[%ff] = %94e;
        %bb4 = #b5;
        jump %bb4;
    }

    proc #1b {
        %4b6 = "-2";
        %28 = "0";
        %e8b = ($sp - %28);
        %6b6 = stack[%e8b];
        %2d4 = "0";
        %3c = (%6b6 + %2d4);
        stack[%3c] = %4b6;
        %92e = "-1";
        %e2 = "0";
        %cab = ($sp - %e2);
        %04b = stack[%cab];
        %f22 = "1";
        %cbb = (%04b + %f22);
        stack[%cbb] = %92e;
        %bd1 = "0";
        %0f = "0";
        %6a = ($sp - %0f);
        %9c = stack[%6a];
        %df1 = "2";
        %a9 = (%9c + %df1);
        stack[%a9] = %bd1;
        %7cc = "1";
        %40 = "0";
        %6f0 = ($sp - %40);
        %1fe = stack[%6f0];
        %c3 = "3";
        %d7fe = (%1fe + %c3);
        stack[%d7fe] = %7cc;
        %02 = "2";
        %47 = "0";
        %a1 = ($sp - %47);
        %0cb = stack[%a1];
        %33 = "4";
        %8e = (%0cb + %33);
        stack[%8e] = %02;
        %b7 = "4";
        %084 = ($sp - %b7);
        %806 = "2";
        %444 = ($sp + %806);
        stack[%444] = %084;
        %1c = "9";
        %316 = ($sp - %1c);
        %920 = "3";
        %23 = ($sp + %920);
        stack[%23] = %316;
        %88f = "1";
        %5f4 = ($sp + %88f);
        %fff = #11a;
        stack[%5f4] = %fff;
        %475 = #25;
        jump %475;
    }

    proc #11a {
        %ab = "4";
        %6f7 = ($sp - %ab);
        %91c = stack[%6f7];
        %e23 = "2";
        %604 = ($sp + %e23);
        stack[%604] = %91c;
        %01d = "1";
        %da0 = ($sp + %01d);
        %4a = #d9b;
        stack[%da0] = %4a;
        %50c = #b3;
        jump %50c;
    }

    proc #d9b {
        %711 = "3";
        %9c2 = ($sp - %711);
        %9d = "2";
        %807 = ($sp + %9d);
        stack[%807] = %9c2;
        %c1 = "6";
        %25e = ($sp - %c1);
        %98 = "3";
        %04bf = ($sp + %98);
        stack[%04bf] = %25e;
        %7b = "1";
        %b1f = "4";
        %dc3 = ($sp + %b1f);
        stack[%dc3] = %7b;
        %936 = "1";
        %5b = ($sp + %936);
        %e17 = #953;
        stack[%5b] = %e17;
        %be3 = #b5;
        jump %be3;
    }

    proc #953 {
        %6b0 = "88";
        %e6 = "3";
        %4f1 = ($sp - %e6);
        %bdb = stack[%4f1];
        %048 = "0";
        %b0ea = (%bdb + %048);
        stack[%b0ea] = %6b0;
        %fd = "4";
        %8b3 = ($sp - %fd);
        %9a = "2";
        %ec = ($sp + %9a);
        stack[%ec] = %8b3;
        %8d7 = "9";
        %35 = ($sp - %8d7);
        %c8a = "3";
        %41b = ($sp + %c8a);
        stack[%41b] = %35;
        %3a6 = "1";
        %4aa = ($sp + %3a6);
        %f5 = #d27;
        stack[%4aa] = %f5;
        %410 = #25;
        jump %410;
    }

    proc #d27 {
        %c03 = "4";
        %83 = ($sp - %c03);
        %cb1 = stack[%83];
        %87 = "2";
        %ed0 = ($sp + %87);
        stack[%ed0] = %cb1;
        %5a1 = "1";
        %714 = ($sp + %5a1);
        %27 = #498;
        stack[%714] = %27;
        %21 = #b3;
        jump %21;
    }

    proc #498 {
        exit;
    }
}

func func.Heap_new {
    proc #ef {
        %d70 = "4";
        $sp = ($sp + %d70);
        %483 = "1";
        %f86 = ($sp - %483);
        %455 = stack[%f86];
        %22 = "2";
        %6f3 = ($sp - %22);
        %c91 = stack[%6f3];
        %133 = "0";
        %d8 = (%c91 + %133);
        stack[%d8] = %455;
        %06c = "0";
        %70e = ($sp - %06c);
        %719 = stack[%70e];
        %c5 = "2";
        %b1e = ($sp - %c5);
        %c4 = stack[%b1e];
        %25b = "1";
        %731 = (%c4 + %25b);
        stack[%731] = %719;
        %e66 = "4";
        $sp = ($sp - %e66);
        %5aa = "1";
        %5c6 = ($sp + %5aa);
        %e00 = stack[%5c6];
        jump %e00;
    }
}

func func.Heap_open {
    proc #b18 {
        %28e = "3";
        $sp = ($sp + %28e);
        %0b = "0";
        %d31 = "0";
        %700 = ($sp - %d31);
        %e02 = stack[%700];
        %937 = (%e02 + %0b);
        %dea = stack[%937];
        %f75 = "1";
        %1fc = ($sp - %f75);
        %edb = stack[%1fc];
        %b90 = "0";
        %5c63 = (%edb + %b90);
        stack[%5c63] = %dea;
        %ff1 = "3";
        $sp = ($sp - %ff1);
        %5f0 = "1";
        %eff = ($sp + %5f0);
        %f57 = stack[%eff];
        jump %f57;
    }
}

func func.Heap_books {
    proc #3a9 {
        %e1c = "3";
        $sp = ($sp + %e1c);
        %0bc = "1";
        %77e = "0";
        %83f = ($sp - %77e);
        %ed3 = stack[%83f];
        %4b4 = (%ed3 + %0bc);
        %97 = stack[%4b4];
        %58b = "1";
        %5a13 = ($sp - %58b);
        %cc3 = stack[%5a13];
        %fbb = "0";
        %e99 = (%cc3 + %fbb);
        stack[%e99] = %97;
        %c32 = "3";
        $sp = ($sp - %c32);
        %aae = "1";
        %d6 = ($sp + %aae);
        %47f = stack[%d6];
        jump %47f;
    }
}

func func.Heap_books_find_open {
    proc #42e {
        %46c = "11";
        $sp = ($sp + %46c);
        %b63 = "0";
        %c74 = "6";
        %e46 = ($sp - %c74);
        %99b = "0";
        %eed = (%e46 + %99b);
        stack[%eed] = %b63;
        %3d = "0";
        %e4a = "4";
        %308 = ($sp - %e4a);
        %25e9 = "0";
        %7a1 = (%308 + %25e9);
        stack[%7a1] = %3d;
        %4753 = "true";
        %ad2 = "0";
        %314 = ($sp - %ad2);
        %43 = "0";
        %65 = (%314 + %43);
        stack[%65] = %4753;
        %68 = "5";
        %a2a = ($sp - %68);
        %ab0 = "2";
        %d7b = ($sp + %ab0);
        stack[%d7b] = %a2a;
        %ffe = "8";
        %e5 = ($sp - %ffe);
        %334 = stack[%e5];
        %5ff = "3";
        %136 = ($sp + %5ff);
        stack[%136] = %334;
        %0a = "1";
        %2ae = ($sp + %0a);
        %b8 = #8be;
        stack[%2ae] = %b8;
        %e51 = #b12;
        jump %e51;
    }

    proc #8be {
        %80c = #fb1;
        jump %80c;
    }

    proc #4bf {
        %c07 = "8";
        %989 = ($sp - %c07);
        %0b3 = stack[%989];
        %3d3 = "2";
        %752 = ($sp + %3d3);
        stack[%752] = %0b3;
        %cf = "4";
        %1ed = ($sp - %cf);
        %120 = stack[%1ed];
        %b01 = "7";
        %473 = ($sp - %b01);
        %711a = stack[%473];
        %004 = (%120 + %711a);
        %40d = "3";
        %adb = ($sp + %40d);
        stack[%adb] = %004;
        %696 = "6";
        %32d = ($sp - %696);
        %504 = stack[%32d];
        %79 = "4";
        %15 = ($sp + %79);
        stack[%15] = %504;
        %be5 = "1";
        %7df = ($sp + %be5);
        %e4d = #813;
        stack[%7df] = %e4d;
        %86 = #03;
        jump %86;
    }

    proc #813 {
        %bb40 = "8";
        %256 = ($sp - %bb40);
        %082 = stack[%256];
        %5ac = "2";
        %d83 = ($sp + %5ac);
        stack[%d83] = %082;
        %754 = "4";
        %cb9 = ($sp - %754);
        %ce9 = stack[%cb9];
        %3a0 = "3";
        %232 = ($sp + %3a0);
        stack[%232] = %ce9;
        %23e = "6";
        %3e = ($sp - %23e);
        %e97 = stack[%3e];
        %596 = "4";
        %86b = ($sp + %596);
        stack[%86b] = %e97;
        %88e = "1";
        %e0f = ($sp + %88e);
        %0a8 = #ea;
        stack[%e0f] = %0a8;
        %8f4 = #03;
        jump %8f4;
    }

    proc #ea {
        %873 = "4";
        %4b44 = ($sp - %873);
        %af5 = stack[%4b44];
        %693 = "9";
        %26d = ($sp - %693);
        %9f3 = stack[%26d];
        %b5b = "0";
        %a6 = (%9f3 + %b5b);
        stack[%a6] = %af5;
        %eaa = "11";
        $sp = ($sp - %eaa);
        %63 = "1";
        %e5f = ($sp + %63);
        %db8 = stack[%e5f];
        jump %db8;
    }

    proc #131 {
        %b3c = "3";
        %714d = ($sp - %b3c);
        %6d6 = "2";
        %358 = ($sp + %6d6);
        stack[%358] = %714d;
        %9cb = "8";
        %8de = ($sp - %9cb);
        %69f = stack[%8de];
        %22b = "3";
        %a1d = ($sp + %22b);
        stack[%a1d] = %69f;
        %d50 = "6";
        %47a = ($sp - %d50);
        %831 = stack[%47a];
        %33c = "4";
        %630 = ($sp + %33c);
        stack[%630] = %831;
        %dbc = "1";
        %c45 = ($sp + %dbc);
        %b9e = #6b1;
        stack[%c45] = %b9e;
        %ee0 = #639;
        jump %ee0;
    }

    proc #6b1 {
        %08a = "2";
        %0c7 = ($sp - %08a);
        %077 = "2";
        %dfd = ($sp + %077);
        stack[%dfd] = %0c7;
        %0d = "8";
        %1b5 = ($sp - %0d);
        %99f = stack[%1b5];
        %5f9 = "3";
        %0d1 = ($sp + %5f9);
        stack[%0d1] = %99f;
        %a0 = "6";
        %465 = ($sp - %a0);
        %e5fd = stack[%465];
        %17 = "1";
        %7aa = (%e5fd + %17);
        %9d5 = "4";
        %869 = ($sp + %9d5);
        stack[%869] = %7aa;
        %b909 = "1";
        %6b3 = ($sp + %b909);
        %a2e = #55d;
        stack[%6b3] = %a2e;
        %4e = #639;
        jump %4e;
    }

    proc #55d {
        %549 = "2";
        %3085 = ($sp - %549);
        %ba0 = stack[%3085];
        %e3 = "3";
        %5b3 = ($sp - %e3);
        %ba4 = stack[%5b3];
        %9cc = (%ba0 - %ba4);
        %43a = "1";
        %960 = ($sp - %43a);
        %14 = "0";
        %ad7 = (%960 + %14);
        stack[%ad7] = %9cc;
        %fc = "4";
        %6e = ($sp - %fc);
        %1d9 = stack[%6e];
        %d85 = "3";
        %b29 = ($sp - %d85);
        %232f = stack[%b29];
        %ce7 = (!(%1d9 < %232f));
        %4aa8 = "4";
        %178 = ($sp - %4aa8);
        %870 = stack[%178];
        %23a = "2";
        %4c8 = ($sp - %23a);
        %7a5 = stack[%4c8];
        %af9 = (%870 < %7a5);
        %51 = (%ce7 && %af9);
        %72 = "7";
        %728 = ($sp - %72);
        %f15 = stack[%728];
        %895 = "1";
        %76 = ($sp - %895);
        %153 = stack[%76];
        %3b8a = (%f15 > %153);
        %b80 = (%51 || %3b8a);
        %93c = #b40;
        %9b = #f32;
        if %b80 then jump %93c else jump %9b;
    }

    proc #1f2 {
        %a7 = #fb1;
        jump %a7;
    }

    proc #b40 {
        %864 = "2";
        %82c = ($sp - %864);
        %b83 = stack[%82c];
        %aa9 = "4";
        %f50 = ($sp - %aa9);
        %19 = "0";
        %f59 = (%f50 + %19);
        stack[%f59] = %b83;
        %214 = "6";
        %b7c = ($sp - %214);
        %6cb = stack[%b7c];
        %a5d = "2";
        %171 = (%6cb + %a5d);
        %6f8 = "6";
        %175 = ($sp - %6f8);
        %df4 = "0";
        %284 = (%175 + %df4);
        stack[%284] = %171;
        %17f = #1f2;
        jump %17f;
    }

    proc #f32 {
        %a50 = "false";
        %46d = "0";
        %9e = ($sp - %46d);
        %b27 = "0";
        %daf = (%9e + %b27);
        stack[%daf] = %a50;
        %8af = #1f2;
        jump %8af;
    }

    proc #fb1 {
        %4cc = "0";
        %680 = ($sp - %4cc);
        %f45 = stack[%680];
        %3e4 = "6";
        %f56 = ($sp - %3e4);
        %501 = stack[%f56];
        %9a9 = "5";
        %5e1 = ($sp - %9a9);
        %5b2 = stack[%5e1];
        %92f = (%501 < %5b2);
        %dbd = (%f45 && %92f);
        %42a = #131;
        %1ae = #4bf;
        if %dbd then jump %42a else jump %1ae;
    }
}

func func.malloc {
    proc #b5 {
        %e13 = "7";
        $sp = ($sp + %e13);
        %34 = "0";
        %a1c = ($sp - %34);
        %81d = "2";
        %d04 = ($sp + %81d);
        stack[%d04] = %a1c;
        %ae = "4";
        %997 = ($sp - %ae);
        %7e0 = stack[%997];
        %52 = "3";
        %6eb = ($sp + %52);
        stack[%6eb] = %7e0;
        %0a4 = "1";
        %bce = ($sp + %0a4);
        %aaed = #dba;
        stack[%bce] = %aaed;
        %0c2f = #b18;
        jump %0c2f;
    }

    proc #dba {
        %acc = "1";
        %6398 = ($sp - %acc);
        %3803 = "2";
        %b3b = ($sp + %3803);
        stack[%b3b] = %6398;
        %a46 = "4";
        %886 = ($sp - %a46);
        %392 = stack[%886];
        %71a = "3";
        %fa = ($sp + %71a);
        stack[%fa] = %392;
        %9c1 = "1";
        %1b8 = ($sp + %9c1);
        %7f = #702;
        stack[%1b8] = %7f;
        %87d = #3a9;
        jump %87d;
    }

    proc #702 {
        %dafe = "2";
        %2329 = ($sp - %dafe);
        %9b4 = "2";
        %a44 = ($sp + %9b4);
        stack[%a44] = %2329;
        %324 = "1";
        %e38 = ($sp - %324);
        %778 = stack[%e38];
        %69d = "3";
        %57 = ($sp + %69d);
        stack[%57] = %778;
        %9b2 = "3";
        %d22 = ($sp - %9b2);
        %49c = stack[%d22];
        %2ad = "4";
        %5490 = ($sp + %2ad);
        stack[%5490] = %49c;
        %f6e = "1";
        %904 = ($sp + %f6e);
        %4bc = #66;
        stack[%904] = %4bc;
        %520 = #42e;
        jump %520;
    }

    proc #66 {
        %0db = "2";
        %662 = ($sp - %0db);
        %69b = stack[%662];
        %29d = "0";
        %71f = ($sp - %29d);
        %6a4 = stack[%71f];
        %995 = (%6a4 + %69b);
        %80b = "5";
        %fe = ($sp - %80b);
        %bf = stack[%fe];
        %395 = "0";
        %e06 = (%bf + %395);
        stack[%e06] = %995;
        %8d5 = "7";
        $sp = ($sp - %8d5);
        %227 = "1";
        %81c = ($sp + %227);
        %ddc = stack[%81c];
        jump %ddc;
    }
}

func func.free {
    proc #54 {
        %90e = "10";
        $sp = ($sp + %90e);
        %a03 = "6";
        %f09 = ($sp - %a03);
        %8c = "2";
        %f6f = ($sp + %8c);
        stack[%f6f] = %f09;
        %c96 = "8";
        %211 = ($sp - %c96);
        %1538 = stack[%211];
        %92c = "3";
        %5bd = ($sp + %92c);
        stack[%5bd] = %1538;
        %703 = "1";
        %501e = ($sp + %703);
        %be9 = #044;
        stack[%501e] = %be9;
        %a95 = #b18;
        jump %a95;
    }

    proc #044 {
        %a9e = "4";
        %cc0 = ($sp - %a9e);
        %078 = "2";
        %a94 = ($sp + %078);
        stack[%a94] = %cc0;
        %9d6 = "8";
        %52c = ($sp - %9d6);
        %dd5 = stack[%52c];
        %fe6 = "3";
        %66a = ($sp + %fe6);
        stack[%66a] = %dd5;
        %3bb = "1";
        %4d = ($sp + %3bb);
        %c13 = #81c9;
        stack[%4d] = %c13;
        %bb1 = #3a9;
        jump %bb1;
    }

    proc #81c9 {
        %70f = "3";
        %76c = ($sp - %70f);
        %c09 = "2";
        %505 = ($sp + %c09);
        stack[%505] = %76c;
        %7d7 = "4";
        %40f = ($sp - %7d7);
        %5e5 = stack[%40f];
        %14e = "3";
        %1fd = ($sp + %14e);
        stack[%1fd] = %5e5;
        %26d7 = "1";
        %f23 = ($sp + %26d7);
        %481 = #262;
        stack[%f23] = %481;
        %03d = #b12;
        jump %03d;
    }

    proc #262 {
        %70d = "7";
        %df5 = ($sp - %70d);
        %f45e = stack[%df5];
        %a56 = "6";
        %014 = ($sp - %a56);
        %ac1 = stack[%014];
        %1c5 = (%f45e - %ac1);
        %75a = "5";
        %e40 = ($sp - %75a);
        %952 = "0";
        %494 = (%e40 + %952);
        stack[%494] = %1c5;
        %f62 = "0";
        %121 = "2";
        %69e = ($sp - %121);
        %029 = "0";
        %c2 = (%69e + %029);
        stack[%c2] = %f62;
        %c2a = #5f7;
        jump %c2a;
    }

    proc #6e5 {
        %47e = "10";
        $sp = ($sp - %47e);
        %ea9 = "1";
        %8c0 = ($sp + %ea9);
        %e03 = stack[%8c0];
        jump %e03;
    }

    proc #0ed {
        %99d = "1";
        %a8 = ($sp - %99d);
        %9a1 = "2";
        %2f = ($sp + %9a1);
        stack[%2f] = %a8;
        %30d = "4";
        %c637 = ($sp - %30d);
        %be2 = stack[%c637];
        %684 = "3";
        %fa1 = ($sp + %684);
        stack[%fa1] = %be2;
        %815 = "2";
        %aee = ($sp - %815);
        %f324 = stack[%aee];
        %4c8d = "4";
        %bfa = ($sp + %4c8d);
        stack[%bfa] = %f324;
        %d0e = "1";
        %ef6 = ($sp + %d0e);
        %57a = #175e;
        stack[%ef6] = %57a;
        %75f = #639;
        jump %75f;
    }

    proc #175e {
        %7e7 = "1";
        %6961 = ($sp - %7e7);
        %6b2 = stack[%6961];
        %774 = "5";
        %934 = ($sp - %774);
        %2dc = stack[%934];
        %de3 = (%6b2 == %2dc);
        %074 = #be6;
        %aef = #c86;
        if %de3 then jump %074 else jump %aef;
    }

    proc #96b {
        %423 = #5f7;
        jump %423;
    }

    proc #be6 {
        %ba6 = "0";
        %5cd = ($sp - %ba6);
        %14b = "2";
        %cf3 = ($sp + %14b);
        stack[%cf3] = %5cd;
        %e3e = "4";
        %d4d = ($sp - %e3e);
        %6300 = stack[%d4d];
        %75f5 = "3";
        %26dd = ($sp + %75f5);
        stack[%26dd] = %6300;
        %a84 = "2";
        %ee07 = ($sp - %a84);
        %e50 = stack[%ee07];
        %9af = "4";
        %c55 = ($sp + %9af);
        stack[%c55] = %e50;
        %bb9 = "1";
        %f41 = ($sp + %bb9);
        %3dd = #988;
        stack[%f41] = %3dd;
        %996 = #889;
        jump %996;
    }

    proc #988 {
        %fd2 = "0";
        %735 = ($sp - %fd2);
        %81a = "2";
        %cd = ($sp + %81a);
        stack[%cd] = %735;
        %3ad = "4";
        %677 = ($sp - %3ad);
        %60d = stack[%677];
        %e1a = "3";
        %21f = ($sp + %e1a);
        stack[%21f] = %60d;
        %de1 = "2";
        %02e = ($sp - %de1);
        %471 = stack[%02e];
        %b4a = "4";
        %2b8 = ($sp + %b4a);
        stack[%2b8] = %471;
        %0f9 = "1";
        %128 = ($sp + %0f9);
        %85e = #57d;
        stack[%128] = %85e;
        %7ec = #889;
        jump %7ec;
    }

    proc #57d {
        %ad4b = "3";
        %2c4 = ($sp - %ad4b);
        %1f6 = stack[%2c4];
        %458 = "2";
        %ae8 = ($sp - %458);
        %ac8 = "0";
        %a09 = (%ae8 + %ac8);
        stack[%a09] = %1f6;
        %705 = #96b;
        jump %705;
    }

    proc #c86 {
        %d4b = "2";
        %49d = ($sp - %d4b);
        %cdf = stack[%49d];
        %0d2 = "2";
        %56b = (%cdf + %0d2);
        %d9c = "2";
        %0f5 = ($sp - %d9c);
        %456 = "0";
        %1e6 = (%0f5 + %456);
        stack[%1e6] = %56b;
        %99fa = #96b;
        jump %99fa;
    }

    proc #5f7 {
        %20b = "2";
        %64e = ($sp - %20b);
        %332 = stack[%64e];
        %750 = "3";
        %4df = ($sp - %750);
        %fd4 = stack[%4df];
        %bc1 = (%332 < %fd4);
        %f8e = #0ed;
        %591 = #6e5;
        if %bc1 then jump %f8e else jump %591;
    }
}

func func.Vec_new {
    proc #2e {
        %6dc = "4";
        $sp = ($sp + %6dc);
        %ba1 = "1";
        %306 = ($sp - %ba1);
        %bc9 = stack[%306];
        %bd13 = "2";
        %720 = ($sp - %bd13);
        %cc1 = stack[%720];
        %ab3 = "0";
        %6fa = (%cc1 + %ab3);
        stack[%6fa] = %bc9;
        %0822 = "0";
        %667 = ($sp - %0822);
        %5e13 = stack[%667];
        %3f = "2";
        %9b49 = ($sp - %3f);
        %9f2 = stack[%9b49];
        %ea2 = "1";
        %103 = (%9f2 + %ea2);
        stack[%103] = %5e13;
        %3a1 = "0";
        %a2c = "2";
        %dbf = ($sp - %a2c);
        %cba = stack[%dbf];
        %672 = "2";
        %6c4 = (%cba + %672);
        stack[%6c4] = %3a1;
        %d5f = "4";
        $sp = ($sp - %d5f);
        %0f9b = "1";
        %d16 = ($sp + %0f9b);
        %894 = stack[%d16];
        jump %894;
    }
}

func func.Vec_arr {
    proc #013 {
        %072 = "3";
        $sp = ($sp + %072);
        %388 = "0";
        %8a8 = "0";
        %e04 = ($sp - %8a8);
        %a12 = stack[%e04];
        %36 = (%a12 + %388);
        %0b7 = stack[%36];
        %5fa = "1";
        %1d6 = ($sp - %5fa);
        %260 = stack[%1d6];
        %40b = "0";
        %c28 = (%260 + %40b);
        stack[%c28] = %0b7;
        %d9e = "3";
        $sp = ($sp - %d9e);
        %bcd = "1";
        %730 = ($sp + %bcd);
        %e46c = stack[%730];
        jump %e46c;
    }
}

func func.Vec_cap {
    proc #c36 {
        %eb5 = "3";
        $sp = ($sp + %eb5);
        %653 = "1";
        %82d = "0";
        %a0e = ($sp - %82d);
        %482 = stack[%a0e];
        %be4 = (%482 + %653);
        %1d6a = stack[%be4];
        %5d = "1";
        %67f = ($sp - %5d);
        %683 = stack[%67f];
        %2da = "0";
        %dec = (%683 + %2da);
        stack[%dec] = %1d6a;
        %466 = "3";
        $sp = ($sp - %466);
        %dd7 = "1";
        %890b = ($sp + %dd7);
        %03f = stack[%890b];
        jump %03f;
    }
}

func func.Vec_len_mut {
    proc #879 {
        %f1c = "3";
        $sp = ($sp + %f1c);
        %a55 = "2";
        %bd7 = "0";
        %dc7 = ($sp - %bd7);
        %e88 = stack[%dc7];
        %7b6 = (%e88 + %a55);
        %eab = "1";
        %bf0 = ($sp - %eab);
        %24 = stack[%bf0];
        %c3a = "0";
        %fa4 = (%24 + %c3a);
        stack[%fa4] = %7b6;
        %d30 = "3";
        $sp = ($sp - %d30);
        %3ca = "1";
        %4b2 = ($sp + %3ca);
        %89b = stack[%4b2];
        jump %89b;
    }
}

func func.Vec_len {
    proc #b12 {
        %ae7 = "3";
        $sp = ($sp + %ae7);
        %023 = "2";
        %606 = "0";
        %0ed9 = ($sp - %606);
        %61b = stack[%0ed9];
        %2f7 = (%61b + %023);
        %c6c = stack[%2f7];
        %e7 = "1";
        %ce3 = ($sp - %e7);
        %cbc = stack[%ce3];
        %93d = "0";
        %ab2 = (%cbc + %93d);
        stack[%ab2] = %c6c;
        %b08 = "3";
        $sp = ($sp - %b08);
        %d46 = "1";
        %94a = ($sp + %d46);
        %99f6 = stack[%94a];
        jump %99f6;
    }
}

func func.Vec_get_mut {
    proc #53 {
        %165 = "5";
        $sp = ($sp + %165);
        %f4e = "0";
        %422 = ($sp - %f4e);
        %7db = "2";
        %898 = ($sp + %7db);
        stack[%898] = %422;
        %7ea = "2";
        %31d = ($sp - %7ea);
        %be62 = stack[%31d];
        %dfb = "3";
        %7fe = ($sp + %dfb);
        stack[%7fe] = %be62;
        %499 = "1";
        %f63 = ($sp + %499);
        %b50 = #cf7;
        stack[%f63] = %b50;
        %7b4 = #013;
        jump %7b4;
    }

    proc #cf7 {
        %832 = "0";
        %a29 = ($sp - %832);
        %640 = stack[%a29];
        %c4c = "1";
        %f47 = ($sp - %c4c);
        %19a = stack[%f47];
        %68f = (%640 + %19a);
        %4c4 = "3";
        %8ae = ($sp - %4c4);
        %447 = stack[%8ae];
        %d47 = "0";
        %810 = (%447 + %d47);
        stack[%810] = %68f;
        %12c = "5";
        $sp = ($sp - %12c);
        %4f4 = "1";
        %827 = ($sp + %4f4);
        %12f = stack[%827];
        jump %12f;
    }
}

func func.Vec_get {
    proc #639 {
        %11b6 = "5";
        $sp = ($sp + %11b6);
        %5c5 = "0";
        %af52 = ($sp - %5c5);
        %26c = "2";
        %cb7 = ($sp + %26c);
        stack[%cb7] = %af52;
        %9ce = "2";
        %6a0 = ($sp - %9ce);
        %f3244 = stack[%6a0];
        %539 = "3";
        %e2b = ($sp + %539);
        stack[%e2b] = %f3244;
        %288 = "1";
        %4e1 = ($sp - %288);
        %263 = stack[%4e1];
        %e7b = "4";
        %dd1 = ($sp + %e7b);
        stack[%dd1] = %263;
        %e29 = "1";
        %52c2 = ($sp + %e29);
        %e24 = #91a;
        stack[%52c2] = %e24;
        %489 = #53;
        jump %489;
    }

    proc #91a {
        %01d0 = "0";
        %8dd = ($sp - %01d0);
        %c9c = stack[%8dd];
        %d0d = stack[%c9c];
        %d90 = "3";
        %6c1 = ($sp - %d90);
        %63a = stack[%6c1];
        %8b9 = "0";
        %2fa = (%63a + %8b9);
        stack[%2fa] = %d0d;
        %116 = "5";
        $sp = ($sp - %116);
        %d1d = "1";
        %4899 = ($sp + %d1d);
        %da5 = stack[%4899];
        jump %da5;
    }
}

func func.Vec_push {
    proc #01c {
        %8ea = "5";
        $sp = ($sp + %8ea);
        %197 = "1";
        %651 = ($sp - %197);
        %f02 = "2";
        %999 = ($sp + %f02);
        stack[%999] = %651;
        %034 = "3";
        %b41 = ($sp - %034);
        %b802 = stack[%b41];
        %f01 = "3";
        %d9b2 = ($sp + %f01);
        stack[%d9b2] = %b802;
        %173 = "1";
        %799 = ($sp + %173);
        %45d = #a3;
        stack[%799] = %45d;
        %830 = #879;
        jump %830;
    }

    proc #a3 {
        %0c34 = "0";
        %a82 = ($sp - %0c34);
        %23d = "2";
        %524 = ($sp + %23d);
        stack[%524] = %a82;
        %50a = "3";
        %9c3 = ($sp - %50a);
        %4221 = stack[%9c3];
        %814 = "3";
        %863 = ($sp + %814);
        stack[%863] = %4221;
        %ed1 = "1";
        %1ab = ($sp - %ed1);
        %105 = stack[%1ab];
        %e2b8 = stack[%105];
        %57d1 = "4";
        %311 = ($sp + %57d1);
        stack[%311] = %e2b8;
        %64ec = "1";
        %404 = ($sp + %64ec);
        %2847 = #d4a;
        stack[%404] = %2847;
        %4b0 = #53;
        jump %4b0;
    }

    proc #d4a {
        %93e = "2";
        %946 = ($sp - %93e);
        %82a = stack[%946];
        %62d = "0";
        %89f = ($sp - %62d);
        %11d = stack[%89f];
        %cd2 = "0";
        %60e = (%11d + %cd2);
        stack[%60e] = %82a;
        %eb9 = "1";
        %a73 = ($sp - %eb9);
        %0fb = stack[%a73];
        %a4c = stack[%0fb];
        %113 = "1";
        %0eb = (%a4c + %113);
        %2eb = "1";
        %1fc7 = ($sp - %2eb);
        %177 = stack[%1fc7];
        %b4d = "0";
        %ef7 = (%177 + %b4d);
        stack[%ef7] = %0eb;
        %deb = "5";
        $sp = ($sp - %deb);
        %af8 = "1";
        %20ba = ($sp + %af8);
        %50f = stack[%20ba];
        jump %50f;
    }
}

func func.Vec_pop {
    proc #48d7 {
        %ab4 = "5";
        $sp = ($sp + %ab4);
        %6a6 = "1";
        %68e = ($sp - %6a6);
        %0ca = "2";
        %ec5 = ($sp + %0ca);
        stack[%ec5] = %68e;
        %fc0 = "2";
        %5e2 = ($sp - %fc0);
        %bba = stack[%5e2];
        %ce01 = "3";
        %84a = ($sp + %ce01);
        stack[%84a] = %bba;
        %ab7 = "1";
        %4f3 = ($sp + %ab7);
        %794 = #0e4;
        stack[%4f3] = %794;
        %1b2 = #879;
        jump %1b2;
    }

    proc #0e4 {
        %e2c = "0";
        %a81 = ($sp - %e2c);
        %441 = "2";
        %8ddc = ($sp + %441);
        stack[%8ddc] = %a81;
        %5df = "2";
        %14a = ($sp - %5df);
        %523 = stack[%14a];
        %04d = "3";
        %1713 = ($sp + %04d);
        stack[%1713] = %523;
        %34a = "1";
        %312 = ($sp - %34a);
        %2840 = stack[%312];
        %450 = stack[%2840];
        %c0a = "1";
        %5ff6 = (%450 - %c0a);
        %349 = "4";
        %02c = ($sp + %349);
        stack[%02c] = %5ff6;
        %f11 = "1";
        %602 = ($sp + %f11);
        %b637 = #aed;
        stack[%602] = %b637;
        %7ccb = #639;
        jump %7ccb;
    }

    proc #aed {
        %e28 = "0";
        %3caa = ($sp - %e28);
        %267 = stack[%3caa];
        %ab8 = "3";
        %4c7 = ($sp - %ab8);
        %0e4f = stack[%4c7];
        %5ae = "0";
        %b00 = (%0e4f + %5ae);
        stack[%b00] = %267;
        %b3e = "1";
        %d505 = ($sp - %b3e);
        %f91 = stack[%d505];
        %4db = stack[%f91];
        %b0b = "1";
        %a92 = (%4db - %b0b);
        %fac = "1";
        %6c0 = ($sp - %fac);
        %5bc = stack[%6c0];
        %8b90 = "0";
        %4a1 = (%5bc + %8b90);
        stack[%4a1] = %a92;
        %2dc9 = "5";
        $sp = ($sp - %2dc9);
        %117 = "1";
        %9ee = ($sp + %117);
        %5a3 = stack[%9ee];
        jump %5a3;
    }
}

func func.Vec_insert {
    proc #03 {
        %340 = "8";
        $sp = ($sp + %340);
        %dbcd = "2";
        %a71 = ($sp - %dbcd);
        %075 = "2";
        %585 = ($sp + %075);
        stack[%585] = %a71;
        %4bcc = "6";
        %98d = ($sp - %4bcc);
        %379 = stack[%98d];
        %88f8 = "3";
        %867 = ($sp + %88f8);
        stack[%867] = %379;
        %6062 = "1";
        %b830 = ($sp + %6062);
        %d37 = #0fd;
        stack[%b830] = %d37;
        %52e = #b12;
        jump %52e;
    }

    proc #0fd {
        %d60 = "2";
        %fc03 = ($sp - %d60);
        %2db = stack[%fc03];
        %635 = "3";
        %fd6 = ($sp - %635);
        %0b1 = "0";
        %c98 = (%fd6 + %0b1);
        stack[%c98] = %2db;
        %8bb = "6";
        %914 = ($sp - %8bb);
        %905 = stack[%914];
        %c4a = "2";
        %8f6 = ($sp + %c4a);
        stack[%8f6] = %905;
        %9b3 = "0";
        %0235 = "3";
        %e26 = ($sp + %0235);
        stack[%e26] = %9b3;
        %534 = "1";
        %313 = ($sp + %534);
        %c53 = #795;
        stack[%313] = %c53;
        %f2d = #01c;
        jump %f2d;
    }

    proc #795 {
        %c6e = #dc8;
        jump %c6e;
    }

    proc #f28 {
        %8e4 = "1";
        %0fc = ($sp - %8e4);
        %2e8 = "2";
        %afb = ($sp + %2e8);
        stack[%afb] = %0fc;
        %238 = "6";
        %a48 = ($sp - %238);
        %6ec = stack[%a48];
        %b48 = "3";
        %55b = ($sp + %b48);
        stack[%55b] = %6ec;
        %de7 = "4";
        %8d6 = ($sp - %de7);
        %241 = stack[%8d6];
        %adb6 = "4";
        %ce02 = ($sp + %adb6);
        stack[%ce02] = %241;
        %f73 = "1";
        %93e3 = ($sp + %f73);
        %7bd = #4100;
        stack[%93e3] = %7bd;
        %ea9e = #53;
        jump %ea9e;
    }

    proc #4100 {
        %1a1 = "5";
        %43f = ($sp - %1a1);
        %66e = stack[%43f];
        %c49 = "1";
        %02c9 = ($sp - %c49);
        %281 = stack[%02c9];
        %21e = "0";
        %0fc9 = (%281 + %21e);
        stack[%0fc9] = %66e;
        %e037 = "8";
        $sp = ($sp - %e037);
        %36d = "1";
        %0f99 = ($sp + %36d);
        %40c = stack[%0f99];
        jump %40c;
    }

    proc #962 {
        %f4a = "1";
        %28c = ($sp - %f4a);
        %9a0 = "2";
        %925 = ($sp + %9a0);
        stack[%925] = %28c;
        %139a = "6";
        %c56 = ($sp - %139a);
        %f96 = stack[%c56];
        %f3d = "3";
        %2b9 = ($sp + %f3d);
        stack[%2b9] = %f96;
        %992 = "3";
        %4f0 = ($sp - %992);
        %d86 = stack[%4f0];
        %6dd1 = "4";
        %fe1 = ($sp + %6dd1);
        stack[%fe1] = %d86;
        %ad9 = "1";
        %bc6 = ($sp + %ad9);
        %3fe = #fa3;
        stack[%bc6] = %3fe;
        %dc75 = #53;
        jump %dc75;
    }

    proc #fa3 {
        %a9d = "0";
        %9ed = ($sp - %a9d);
        %2c9 = "2";
        %5f77 = ($sp + %2c9);
        stack[%5f77] = %9ed;
        %ec1 = "6";
        %d835 = ($sp - %ec1);
        %135 = stack[%d835];
        %ccd = "3";
        %d7e = ($sp + %ccd);
        stack[%d7e] = %135;
        %054 = "3";
        %9ee2 = ($sp - %054);
        %974 = stack[%9ee2];
        %280 = "1";
        %3f4 = (%974 + %280);
        %da8 = "4";
        %5fa8 = ($sp + %da8);
        stack[%5fa8] = %3f4;
        %caf = "1";
        %dcac = ($sp + %caf);
        %59c = #fac1;
        stack[%dcac] = %59c;
        %4e18 = #53;
        jump %4e18;
    }

    proc #fac1 {
        %8136 = "1";
        %a43 = ($sp - %8136);
        %882 = stack[%a43];
        %402 = stack[%882];
        %f85 = "0";
        %30a = ($sp - %f85);
        %9e6 = stack[%30a];
        %99f7 = "0";
        %a091 = (%9e6 + %99f7);
        stack[%a091] = %402;
        %2848 = "3";
        %838 = ($sp - %2848);
        %32b = stack[%838];
        %8b33 = "1";
        %de5 = (%32b - %8b33);
        %45a = "3";
        %f0b = ($sp - %45a);
        %bd0 = "0";
        %65f = (%f0b + %bd0);
        stack[%65f] = %de5;
        %46d4 = #dc8;
        jump %46d4;
    }

    proc #dc8 {
        %e09 = "3";
        %a97 = ($sp - %e09);
        %583 = stack[%a97];
        %5ea = "4";
        %c5a = ($sp - %5ea);
        %1e3 = stack[%c5a];
        %626 = (!(%583 < %1e3));
        %ae1 = #962;
        %da2e = #f28;
        if %626 then jump %ae1 else jump %da2e;
    }
}

func func.Vec_remove {
    proc #889 {
        %2801 = "8";
        $sp = ($sp + %2801);
        %a9d8 = "6";
        %0ac = ($sp - %a9d8);
        %fec = stack[%0ac];
        %c7d = "2";
        %b0ec = ($sp + %c7d);
        stack[%b0ec] = %fec;
        %c66 = "5";
        %5aea = ($sp - %c66);
        %ce8 = stack[%5aea];
        %34ad = "3";
        %ec3 = ($sp + %34ad);
        stack[%ec3] = %ce8;
        %425 = "4";
        %906 = ($sp - %425);
        %6bc = stack[%906];
        %244 = "4";
        %c133 = ($sp + %244);
        stack[%c133] = %6bc;
        %7ca = "1";
        %95b = ($sp + %7ca);
        %c71 = #37a;
        stack[%95b] = %c71;
        %0de = #639;
        jump %0de;
    }

    proc #37a {
        %05e = "4";
        %08e = ($sp - %05e);
        %ac4 = stack[%08e];
        %8a7 = "3";
        %70e5 = ($sp - %8a7);
        %06b = "0";
        %459 = (%70e5 + %06b);
        stack[%459] = %ac4;
        %4597 = "0";
        %9cee = ($sp - %4597);
        %8436 = "2";
        %ef5 = ($sp + %8436);
        stack[%ef5] = %9cee;
        %1b29 = "5";
        %bcb = ($sp - %1b29);
        %78 = stack[%bcb];
        %fd0 = "3";
        %0dd = ($sp + %fd0);
        stack[%0dd] = %78;
        %5f5 = "1";
        %b087 = ($sp + %5f5);
        %834 = #fbb5;
        stack[%b087] = %834;
        %eb8 = #879;
        jump %eb8;
    }

    proc #fbb5 {
        %a129 = "0";
        %87db = ($sp - %a129);
        %0297 = stack[%87db];
        %e51e = stack[%0297];
        %a57 = "1";
        %f89 = (%e51e - %a57);
        %20d = "0";
        %088 = ($sp - %20d);
        %401 = stack[%088];
        %6db = "0";
        %32c = (%401 + %6db);
        stack[%32c] = %f89;
        %25d = #1d5d;
        jump %25d;
    }

    proc #cf32 {
        %11d3 = "8";
        $sp = ($sp - %11d3);
        %fb35 = "1";
        %5a8 = ($sp + %fb35);
        %574 = stack[%5a8];
        jump %574;
    }

    proc #85d {
        %db6 = "2";
        %1fa = ($sp - %db6);
        %7541 = "2";
        %1c7 = ($sp + %7541);
        stack[%1c7] = %1fa;
        %aad = "5";
        %63c = ($sp - %aad);
        %151 = stack[%63c];
        %8ba = "3";
        %2bc = ($sp + %8ba);
        stack[%2bc] = %151;
        %0b2 = "3";
        %642 = ($sp - %0b2);
        %38f = stack[%642];
        %0ca0 = "4";
        %bfe = ($sp + %0ca0);
        stack[%bfe] = %38f;
        %b7a = "1";
        %486 = ($sp + %b7a);
        %e18 = #5c2;
        stack[%486] = %e18;
        %d19 = #53;
        jump %d19;
    }

    proc #5c2 {
        %0a80 = "1";
        %1ec = ($sp - %0a80);
        %25f = "2";
        %2cc = ($sp + %25f);
        stack[%2cc] = %1ec;
        %d22e = "5";
        %dbda = ($sp - %d22e);
        %b258 = stack[%dbda];
        %81f = "3";
        %35b = ($sp + %81f);
        stack[%35b] = %b258;
        %663 = "3";
        %8ca = ($sp - %663);
        %953e = stack[%8ca];
        %2b7 = "1";
        %02b = (%953e + %2b7);
        %b22 = "4";
        %102 = ($sp + %b22);
        stack[%102] = %02b;
        %22e = "1";
        %307 = ($sp + %22e);
        %177a = #a8a;
        stack[%307] = %177a;
        %432 = #53;
        jump %432;
    }

    proc #a8a {
        %e63 = "1";
        %38d = ($sp - %e63);
        %14c = stack[%38d];
        %e1c5 = stack[%14c];
        %0d4 = "2";
        %a71d = ($sp - %0d4);
        %0d16 = stack[%a71d];
        %651d = "0";
        %05d = (%0d16 + %651d);
        stack[%05d] = %e1c5;
        %209 = "3";
        %e86 = ($sp - %209);
        %ccb = stack[%e86];
        %5929 = "1";
        %15f = (%ccb + %5929);
        %e10 = "3";
        %a70 = ($sp - %e10);
        %58e = "0";
        %cea = (%a70 + %58e);
        stack[%cea] = %15f;
        %e3d = #1d5d;
        jump %e3d;
    }

    proc #1d5d {
        %a26 = "3";
        %b17 = ($sp - %a26);
        %415 = stack[%b17];
        %901 = "0";
        %2dd = ($sp - %901);
        %cbcb = stack[%2dd];
        %467 = stack[%cbcb];
        %e70 = (%415 < %467);
        %3df = #85d;
        %ed1b = #cf32;
        if %e70 then jump %3df else jump %ed1b;
    }
}

func func.Vec_to_str {
    proc #25 {
        %d84 = "7";
        $sp = ($sp + %d84);
        %16f = "[";
        %e94 = "3";
        %22d = ($sp - %e94);
        %6d5 = "0";
        %76b = (%22d + %6d5);
        stack[%76b] = %16f;
        %8bd = "2";
        %8c5 = ($sp - %8bd);
        %8cb = "2";
        %9fc = ($sp + %8cb);
        stack[%9fc] = %8c5;
        %cb0 = "4";
        %4d7 = ($sp - %cb0);
        %5a1b = stack[%4d7];
        %169 = "3";
        %390 = ($sp + %169);
        stack[%390] = %5a1b;
        %fb3a = "1";
        %f5d = ($sp + %fb3a);
        %69e0 = #24f;
        stack[%f5d] = %69e0;
        %23e2 = #b12;
        jump %23e2;
    }

    proc #24f {
        %569 = "0";
        %46c2 = "1";
        %73a = ($sp - %46c2);
        %bda = "0";
        %e41 = (%73a + %bda);
        stack[%e41] = %569;
        %0e8 = #c65;
        jump %0e8;
    }

    proc #66c {
        %0e9 = "3";
        %68b = ($sp - %0e9);
        %790 = stack[%68b];
        %11b7 = "]";
        %210 = (%790 ~ %11b7);
        %949 = "3";
        %af0 = ($sp - %949);
        %21d = "0";
        %6d4 = (%af0 + %21d);
        stack[%6d4] = %210;
        %efb = "3";
        %1be = ($sp - %efb);
        %4c44 = stack[%1be];
        %9be = "5";
        %761 = ($sp - %9be);
        %108 = stack[%761];
        %224 = "0";
        %5d5 = (%108 + %224);
        stack[%5d5] = %4c44;
        %2817 = "7";
        $sp = ($sp - %2817);
        %78f = "1";
        %a5a = ($sp + %78f);
        %3bba = stack[%a5a];
        jump %3bba;
    }

    proc #dbad {
        %267e = "0";
        %c93 = ($sp - %267e);
        %ebee = "2";
        %5ad = ($sp + %ebee);
        stack[%5ad] = %c93;
        %812 = "4";
        %3f9 = ($sp - %812);
        %17c = stack[%3f9];
        %9ef = "3";
        %196 = ($sp + %9ef);
        stack[%196] = %17c;
        %8634 = "1";
        %eac = ($sp - %8634);
        %b3f = stack[%eac];
        %2e21 = "4";
        %60f = ($sp + %2e21);
        stack[%60f] = %b3f;
        %62dd = "1";
        %845 = ($sp + %62dd);
        %160 = #ef0;
        stack[%845] = %160;
        %74 = #639;
        jump %74;
    }

    proc #ef0 {
        %4ee = "3";
        %4cd = ($sp - %4ee);
        %791 = stack[%4cd];
        %3073 = "0";
        %0cc = ($sp - %3073);
        %9b27 = stack[%0cc];
        %34d = (%791 ~ %9b27);
        %d68 = "3";
        %5d4 = ($sp - %d68);
        %7995 = "0";
        %5ba = (%5d4 + %7995);
        stack[%5ba] = %34d;
        %5d6 = "1";
        %52cc = ($sp - %5d6);
        %fcd = stack[%52cc];
        %a8ae = "2";
        %bc9e = ($sp - %a8ae);
        %3bb6 = stack[%bc9e];
        %80cb = "1";
        %5a2 = (%3bb6 - %80cb);
        %0b0 = (!(%fcd == %5a2));
        %ec7 = #87b;
        %14f = #63d;
        if %0b0 then jump %ec7 else jump %14f;
    }

    proc #63d {
        %d02 = "1";
        %427 = ($sp - %d02);
        %9a9c = stack[%427];
        %12b = "1";
        %fab = (%9a9c + %12b);
        %fe2 = "1";
        %60c = ($sp - %fe2);
        %33a = "0";
        %ccf = (%60c + %33a);
        stack[%ccf] = %fab;
        %737 = #c65;
        jump %737;
    }

    proc #87b {
        %8d65 = "3";
        %618 = ($sp - %8d65);
        %e18f = stack[%618];
        %4e10 = ", ";
        %9c26 = (%e18f ~ %4e10);
        %476 = "3";
        %222 = ($sp - %476);
        %7c5 = "0";
        %0b74 = (%222 + %7c5);
        stack[%0b74] = %9c26;
        %12c9 = #63d;
        jump %12c9;
    }

    proc #c65 {
        %31b = "1";
        %49b = ($sp - %31b);
        %99f9 = stack[%49b];
        %ec4 = "2";
        %963 = ($sp - %ec4);
        %a31 = stack[%963];
        %f70 = (%99f9 < %a31);
        %d62 = #dbad;
        %6a8 = #66c;
        if %f70 then jump %d62 else jump %6a8;
    }
}

func func.out {
    proc #b3 {
        %d13 = "2";
        $sp = ($sp + %d13);
        %22c = "0";
        %ca5 = ($sp - %22c);
        %fa7 = stack[%ca5];
        out %fa7;
        %643 = "2";
        $sp = ($sp - %643);
        %2c42 = "1";
        %f51 = ($sp + %2c42);
        %fce = stack[%f51];
        jump %fce;
    }
}

func func.in {
    proc #c05 {
        %064 = "3";
        $sp = ($sp + %064);
        %947 = "0";
        %f31 = ($sp - %947);
        in;
        stack[%f31] = $answer;
        %3c4 = "0";
        %df6 = ($sp - %3c4);
        %f18 = stack[%df6];
        %800 = "1";
        %9208 = ($sp - %800);
        %414 = stack[%9208];
        %65d = "0";
        %e33 = (%414 + %65d);
        stack[%e33] = %f18;
        %9a15 = "3";
        $sp = ($sp - %9a15);
        %8dc = "1";
        %16f4 = ($sp + %8dc);
        %579 = stack[%16f4];
        jump %579;
    }
}

func func.random_num {
    proc #f1c3 {
        %1cd = "5";
        $sp = ($sp + %1cd);
        %e7d = "0";
        %cfb = ($sp - %e7d);
        %34e = "0.0";
        %801 = "1.0";
        stack[%cfb] = (%34e <random> %801);
        %7902 = "2";
        %9255 = ($sp - %7902);
        %8c1 = stack[%9255];
        %fa44 = "0";
        %afe = ($sp - %fa44);
        %ba9 = stack[%afe];
        %bd4 = "1";
        %93e0 = ($sp - %bd4);
        %18 = stack[%93e0];
        %9c6 = "2";
        %366 = ($sp - %9c6);
        %eb3 = stack[%366];
        %f72 = (%18 - %eb3);
        %1b2e = (%ba9 * %f72);
        %970 = (%8c1 + %1b2e);
        %03f4 = "3";
        %1f4 = ($sp - %03f4);
        %dda = stack[%1f4];
        %4da = "0";
        %bc3 = (%dda + %4da);
        stack[%bc3] = %970;
        %b006 = "5";
        $sp = ($sp - %b006);
        %857 = "1";
        %c076 = ($sp + %857);
        %016 = stack[%c076];
        jump %016;
    }
}

func func.random_int {
    proc #92d0 {
        %b74 = "5";
        $sp = ($sp + %b74);
        %4f12 = "0";
        %20dc = ($sp - %4f12);
        %d308 = "2";
        %493 = ($sp - %d308);
        %649 = stack[%493];
        %068 = "1";
        %d51 = ($sp - %068);
        %cb5 = stack[%d51];
        stack[%20dc] = (%649 <random> %cb5);
        %e6c = "0";
        %593 = ($sp - %e6c);
        %dba2 = stack[%593];
        %9fb = "3";
        %cbe = ($sp - %9fb);
        %512 = stack[%cbe];
        %a14 = "0";
        %0a9 = (%512 + %a14);
        stack[%0a9] = %dba2;
        %a6e = "5";
        $sp = ($sp - %a6e);
        %ff6 = "1";
        %3fd = ($sp + %ff6);
        %223 = stack[%3fd];
        jump %223;
    }
}

func func.random_uint {
    proc #da1 {
        %a35 = "5";
        $sp = ($sp + %a35);
        %89c = "0";
        %d00 = ($sp - %89c);
        %69b7 = "2";
        %b57 = ($sp - %69b7);
        %cbd = stack[%b57];
        %a0c = "1";
        %6833 = ($sp - %a0c);
        %a08 = stack[%6833];
        stack[%d00] = (%cbd <random> %a08);
        %9da = "0";
        %d9d = ($sp - %9da);
        %fd04 = stack[%d9d];
        %a33 = "3";
        %1d4 = ($sp - %a33);
        %8aff = stack[%1d4];
        %3be = "0";
        %c32d = (%8aff + %3be);
        stack[%c32d] = %fd04;
        %15f7 = "5";
        $sp = ($sp - %15f7);
        %262e = "1";
        %260e = ($sp + %262e);
        %7a0 = stack[%260e];
        jump %7a0;
    }
}