main {
    proc #73 {
        $sp = "-1";
        %2c = #04;
        jump %2c;
    }
}

func main {
    proc #04 {
        %5c = "16";
        $sp = ($sp + %5c);
        %5f = "4";
        %5b = ($sp - %5f);
        %6d = "2";
        %68 = ($sp + %6d);
        stack[%68] = %5b;
        %99 = "14";
        %02 = ($sp - %99);
        %7f = "3";
        %cf = ($sp + %7f);
        stack[%cf] = %02;
        %e6 = "10";
        %c0 = "4";
        %4d = ($sp + %c0);
        stack[%4d] = %e6;
        %b7 = "1";
        %70 = ($sp + %b7);
        %72 = #2f;
        stack[%70] = %72;
        %b3 = #58;
        jump %b3;
    }

    proc #2f {
        %c1 = "1";
        %2d = ($sp - %c1);
        %78 = "2";
        %fc = ($sp + %78);
        stack[%fc] = %2d;
        %c5 = "4";
        %2a = ($sp - %c5);
        %0c = "3";
        %6f = ($sp + %0c);
        stack[%6f] = %2a;
        %08 = "1";
        %e5 = ($sp + %08);
        %cf0 = #3f;
        stack[%e5] = %cf0;
        %6f2 = #996;
        jump %6f2;
    }

    proc #3f {
        %e5d = "1";
        %20 = ($sp - %e5d);
        %e8 = stack[%20];
        %37 = "2";
        %33 = ($sp + %37);
        stack[%33] = %e8;
        %020 = "1";
        %bb = ($sp + %020);
        %e55 = #5e;
        stack[%bb] = %e55;
        %56 = #ad;
        jump %56;
    }

    proc #5e {
        %fa = "4";
        %da = ($sp - %fa);
        %e2 = "2";
        %1c = ($sp + %e2);
        stack[%1c] = %da;
        %3d = "10";
        %f5 = "3";
        %9d = ($sp + %f5);
        stack[%9d] = %3d;
        %9b = "1";
        %31 = ($sp + %9b);
        %b35 = #f55;
        stack[%31] = %b35;
        %9bf = #a3;
        jump %9bf;
    }

    proc #f55 {
        %69 = "4";
        %71 = ($sp - %69);
        %66 = "2";
        %56a = ($sp + %66);
        stack[%56a] = %71;
        %8b = "2";
        %f0 = "3";
        %7fe = ($sp + %f0);
        stack[%7fe] = %8b;
        %ac = "1";
        %92 = ($sp + %ac);
        %40 = #e7;
        stack[%92] = %40;
        %4a = #a3;
        jump %4a;
    }

    proc #e7 {
        %923 = "4";
        %b1 = ($sp - %923);
        %8c = "2";
        %c6 = ($sp + %8c);
        stack[%c6] = %b1;
        %62 = "6";
        %42 = "3";
        %1d = ($sp + %42);
        stack[%1d] = %62;
        %4b = "1";
        %34 = ($sp + %4b);
        %c3 = #2e;
        stack[%34] = %c3;
        %11 = #a3;
        jump %11;
    }

    proc #2e {
        %79 = "1";
        %f7 = ($sp - %79);
        %b30 = "2";
        %a4 = ($sp + %b30);
        stack[%a4] = %f7;
        %f9 = "4";
        %ee = ($sp - %f9);
        %b7a = "3";
        %f74 = ($sp + %b7a);
        stack[%f74] = %ee;
        %99e = "1";
        %1e = ($sp + %99e);
        %f6 = #11f;
        stack[%1e] = %f6;
        %67 = #996;
        jump %67;
    }

    proc #11f {
        %f03 = "1";
        %c4 = ($sp - %f03);
        %53 = stack[%c4];
        %4d0 = "2";
        %a2 = ($sp + %4d0);
        stack[%a2] = %53;
        %e3 = "1";
        %cc = ($sp + %e3);
        %e80 = #46;
        stack[%cc] = %e80;
        %2f1 = #ad;
        jump %2f1;
    }

    proc #46 {
        %c9 = "0";
        %77 = ($sp - %c9);
        %19 = "2";
        %27 = ($sp + %19);
        stack[%27] = %77;
        %bf = "4";
        %209 = ($sp - %bf);
        %93 = "3";
        %3a = ($sp + %93);
        stack[%3a] = %209;
        %30 = "1";
        %771 = ($sp + %30);
        %7d = #93f;
        stack[%771] = %7d;
        %b5 = #e80e;
        jump %b5;
    }

    proc #93f {
        %4f = "Popped: ";
        %dc = "0";
        %52 = ($sp - %dc);
        %09 = stack[%52];
        %36 = (%4f ~ %09);
        %ab = "2";
        %0e = ($sp + %ab);
        stack[%0e] = %36;
        %87 = "1";
        %16 = ($sp + %87);
        %e8b = #06;
        stack[%16] = %e8b;
        %ad5 = #ad;
        jump %ad5;
    }

    proc #06 {
        %13 = "1";
        %fc7 = ($sp - %13);
        %cfc = "2";
        %025 = ($sp + %cfc);
        stack[%025] = %fc7;
        %d6 = "4";
        %7b = ($sp - %d6);
        %9c = "3";
        %7fb = ($sp + %9c);
        stack[%7fb] = %7b;
        %14 = "1";
        %206 = ($sp + %14);
        %bb6 = #cd;
        stack[%206] = %bb6;
        %ce = #996;
        jump %ce;
    }

    proc #cd {
        %fc0 = "1";
        %c5b = ($sp - %fc0);
        %7c = stack[%c5b];
        %0c5 = "2";
        %16f = ($sp + %0c5);
        stack[%16f] = %7c;
        %05 = "1";
        %60 = ($sp + %05);
        %eb = #9a;
        stack[%60] = %eb;
        %94 = #ad;
        jump %94;
    }

    proc #9a {
        %e6b = "4";
        %9c7 = ($sp - %e6b);
        %604 = "2";
        %21 = ($sp + %604);
        stack[%21] = %9c7;
        %7b9 = "99";
        %1a = "3";
        %673 = ($sp + %1a);
        stack[%673] = %7b9;
        %e9 = "1";
        %13a = "4";
        %714 = ($sp + %13a);
        stack[%714] = %e9;
        %7bf = "1";
        %b5e = ($sp + %7bf);
        %31c = #1cf;
        stack[%b5e] = %31c;
        %1f = #0e7;
        jump %1f;
    }

    proc #1cf {
        %be = "1";
        %ef = ($sp - %be);
        %75 = "2";
        %9b9 = ($sp + %75);
        stack[%9b9] = %ef;
        %5fd = "4";
        %d7 = ($sp - %5fd);
        %73f = "3";
        %18 = ($sp + %73f);
        stack[%18] = %d7;
        %0d = "1";
        %924 = ($sp + %0d);
        %e24 = #605;
        stack[%924] = %e24;
        %90 = #996;
        jump %90;
    }

    proc #605 {
        %1ce = "1";
        %9c9 = ($sp - %1ce);
        %1ee = stack[%9c9];
        %23 = "2";
        %e90 = ($sp + %23);
        stack[%e90] = %1ee;
        %e0 = "1";
        %85 = ($sp + %e0);
        %74 = #59;
        stack[%85] = %74;
        %a3e = #ad;
        jump %a3e;
    }

    proc #59 {
        %43 = "0";
        %5b1 = ($sp - %43);
        %81 = "2";
        %fe = ($sp + %81);
        stack[%fe] = %5b1;
        %818 = "4";
        %854 = ($sp - %818);
        %a5 = "3";
        %d0 = ($sp + %a5);
        stack[%d0] = %854;
        %49 = "0";
        %c2 = "4";
        %f2 = ($sp + %c2);
        stack[%f2] = %49;
        %09b = "1";
        %cd0 = ($sp + %09b);
        %1d2 = #78f;
        stack[%cd0] = %1d2;
        %73c = #24;
        jump %73c;
    }

    proc #78f {
        %e4 = "Removed: ";
        %1a8 = "0";
        %731 = ($sp - %1a8);
        %3d0 = stack[%731];
        %3a9 = (%e4 ~ %3d0);
        %ba = "2";
        %f55f = ($sp + %ba);
        stack[%f55f] = %3a9;
        %ce8 = "1";
        %28 = ($sp + %ce8);
        %94b = #191;
        stack[%28] = %94b;
        %15 = #ad;
        jump %15;
    }

    proc #191 {
        %10 = "1";
        %29 = ($sp - %10);
        %cca = "2";
        %ad6 = ($sp + %cca);
        stack[%ad6] = %29;
        %05d = "4";
        %404 = ($sp - %05d);
        %535 = "3";
        %89 = ($sp + %535);
        stack[%89] = %404;
        %1ab = "1";
        %c1f = ($sp + %1ab);
        %b6 = #f79;
        stack[%c1f] = %b6;
        %d3 = #996;
        jump %d3;
    }

    proc #f79 {
        %32 = "1";
        %cc3 = ($sp - %32);
        %41 = stack[%cc3];
        %f00 = "2";
        %da9 = ($sp + %f00);
        stack[%da9] = %41;
        %a2e = "1";
        %7e = ($sp + %a2e);
        %69b = #302;
        stack[%7e] = %69b;
        %4b3 = #ad;
        jump %4b3;
    }

    proc #302 {
        %a7 = "4";
        %b3e = ($sp - %a7);
        %3d3 = "2";
        %7ed = ($sp + %3d3);
        stack[%7ed] = %b3e;
        %368 = "123";
        %2f3 = "3";
        %1e4 = ($sp + %2f3);
        stack[%1e4] = %368;
        %131 = "0";
        %d3f = "4";
        %25 = ($sp + %d3f);
        stack[%25] = %131;
        %f3 = "1";
        %65 = ($sp + %f3);
        %e84 = #8c8;
        stack[%65] = %e84;
        %ae = #0e7;
        jump %ae;
    }

    proc #8c8 {
        %d9 = "1";
        %ea = ($sp - %d9);
        %95 = "2";
        %55 = ($sp + %95);
        stack[%55] = %ea;
        %e30 = "4";
        %9e = ($sp - %e30);
        %717 = "3";
        %bb1 = ($sp + %717);
        stack[%bb1] = %9e;
        %db = "1";
        %83 = ($sp + %db);
        %ca = #22;
        stack[%83] = %ca;
        %76 = #996;
        jump %76;
    }

    proc #22 {
        %fb = "1";
        %80 = ($sp - %fb);
        %f1 = stack[%80];
        %f74c = "2";
        %bc = ($sp + %f74c);
        stack[%bc] = %f1;
        %698 = "1";
        %f36 = ($sp + %698);
        %2ea = #df;
        stack[%f36] = %2ea;
        %6a = #ad;
        jump %6a;
    }

    proc #df {
        %4f0 = "4";
        %801 = ($sp - %4f0);
        %0f = "2";
        %f8 = ($sp + %0f);
        stack[%f8] = %801;
        %6b = "456";
        %b4 = "3";
        %402 = ($sp + %b4);
        stack[%402] = %6b;
        %fbc = "0";
        %54 = "4";
        %48 = ($sp + %54);
        stack[%48] = %fbc;
        %061 = "1";
        %423 = ($sp + %061);
        %e1 = #cb;
        stack[%423] = %e1;
        %527 = #0e7;
        jump %527;
    }

    proc #cb {
        %d03 = "1";
        %a4c = ($sp - %d03);
        %de = "2";
        %aba = ($sp + %de);
        stack[%aba] = %a4c;
        %6d4 = "4";
        %a8 = ($sp - %6d4);
        %15a = "3";
        %ed = ($sp + %15a);
        stack[%ed] = %a8;
        %890 = "1";
        %093 = ($sp + %890);
        %b60 = #a0;
        stack[%093] = %b60;
        %64 = #996;
        jump %64;
    }

    proc #a0 {
        %232 = "1";
        %dad = ($sp - %232);
        %1a82 = stack[%dad];
        %a6 = "2";
        %8d = ($sp + %a6);
        stack[%8d] = %1a82;
        %a86 = "1";
        %83c = ($sp + %a86);
        %35 = #3b;
        stack[%83c] = %35;
        %590 = #ad;
        jump %590;
    }

    proc #3b {
        %f16 = "4";
        %a69 = ($sp - %f16);
        %eff = "2";
        %599 = ($sp + %eff);
        stack[%599] = %a69;
        %27a = "-1";
        %f10 = "3";
        %e62 = ($sp + %f10);
        stack[%e62] = %27a;
        %f3d = "2";
        %efb = "4";
        %4fd = ($sp + %efb);
        stack[%4fd] = %f3d;
        %c6d = "1";
        %e39 = ($sp + %c6d);
        %098 = #ef9;
        stack[%e39] = %098;
        %0f8 = #0e7;
        jump %0f8;
    }

    proc #ef9 {
        %e5e = "1";
        %499 = ($sp - %e5e);
        %0a = "2";
        %359 = ($sp + %0a);
        stack[%359] = %499;
        %6ac = "4";
        %b45 = ($sp - %6ac);
        %6e = "3";
        %5d = ($sp + %6e);
        stack[%5d] = %b45;
        %6c = "1";
        %b47 = ($sp + %6c);
        %dc5 = #8a;
        stack[%b47] = %dc5;
        %273 = #996;
        jump %273;
    }

    proc #8a {
        %6e5 = "1";
        %202 = ($sp - %6e5);
        %4a1 = stack[%202];
        %ca1 = "2";
        %6f0 = ($sp + %ca1);
        stack[%6f0] = %4a1;
        %e02 = "1";
        %de7 = ($sp + %e02);
        %a05 = #3c;
        stack[%de7] = %a05;
        %c8 = #ad;
        jump %c8;
    }

    proc #3c {
        %47 = "4";
        %0d8 = ($sp - %47);
        %c5e = "2";
        %569 = ($sp + %c5e);
        stack[%569] = %0d8;
        %2da = "1";
        %a9 = ($sp + %2da);
        %88 = #ed8;
        stack[%a9] = %88;
        %196 = #628;
        jump %196;
    }

    proc #ed8 {
        %91 = "1";
        %98 = ($sp - %91);
        %661 = "2";
        %a3b = ($sp + %661);
        stack[%a3b] = %98;
        %97 = "4";
        %5a = ($sp - %97);
        %56d = "3";
        %b0 = ($sp + %56d);
        stack[%b0] = %5a;
        %2c6 = "1";
        %7a = ($sp + %2c6);
        %ec = #310;
        stack[%7a] = %ec;
        %60a = #996;
        jump %60a;
    }

    proc #310 {
        %8f = "1";
        %a7d = ($sp - %8f);
        %b7c = stack[%a7d];
        %492 = "2";
        %e7f = ($sp + %492);
        stack[%e7f] = %b7c;
        %1e2 = "1";
        %1ca = ($sp + %1e2);
        %d4 = #558;
        stack[%1ca] = %d4;
        %d00 = #ad;
        jump %d00;
    }

    proc #558 {
        %7ee = "4";
        %4b4 = ($sp - %7ee);
        %ee4 = "2";
        %c66 = ($sp + %ee4);
        stack[%c66] = %4b4;
        %10c = "1";
        %2fb = "3";
        %8e = ($sp + %2fb);
        stack[%8e] = %10c;
        %ec5 = "0";
        %32f = "4";
        %62f = ($sp + %32f);
        stack[%62f] = %ec5;
        %330 = "1";
        %d3e = ($sp + %330);
        %3e = #cb6;
        stack[%d3e] = %3e;
        %eb4 = #0e7;
        jump %eb4;
    }

    proc #cb6 {
        %224 = "1";
        %c7 = ($sp - %224);
        %21a = "2";
        %6ce = ($sp + %21a);
        stack[%6ce] = %c7;
        %89b = "4";
        %d66 = ($sp - %89b);
        %71b = "3";
        %e843 = ($sp + %71b);
        stack[%e843] = %d66;
        %5b5 = "1";
        %777 = ($sp + %5b5);
        %8ef = #4b0;
        stack[%777] = %8ef;
        %c92 = #996;
        jump %c92;
    }

    proc #4b0 {
        %431 = "1";
        %9e3 = ($sp - %431);
        %f4 = stack[%9e3];
        %84 = "2";
        %6cf = ($sp + %84);
        stack[%6cf] = %f4;
        %32e = "1";
        %f38 = ($sp + %32e);
        %44 = #6a9;
        stack[%f38] = %44;
        %9f = #ad;
        jump %9f;
    }

    proc #6a9 {
        exit;
    }
}

func func.Vec_new {
    proc #58 {
        %9c8 = "4";
        $sp = ($sp + %9c8);
        %f2c = "1";
        %465 = ($sp - %f2c);
        %c17 = stack[%465];
        %c94 = "2";
        %85e = ($sp - %c94);
        %7c6 = stack[%85e];
        %19a = "0";
        %67e = (%7c6 + %19a);
        stack[%67e] = %c17;
        %e68 = "0";
        %73c0 = ($sp - %e68);
        %c8e = stack[%73c0];
        %306 = "2";
        %7ac = ($sp - %306);
        %537 = stack[%7ac];
        %79c = "1";
        %559 = (%537 + %79c);
        stack[%559] = %c8e;
        %9a8 = "0";
        %156 = "2";
        %a1 = ($sp - %156);
        %372 = stack[%a1];
        %9d8 = "2";
        %7ec = (%372 + %9d8);
        stack[%7ec] = %9a8;
        %f81 = "4";
        $sp = ($sp - %f81);
        %61 = "1";
        %63 = ($sp + %61);
        %a33 = stack[%63];
        jump %a33;
    }
}

func func.Vec_arr {
    proc #bc4 {
        %ee44 = "3";
        $sp = ($sp + %ee44);
        %1ef = "0";
        %ebe = "0";
        %4e = ($sp - %ebe);
        %1910 = stack[%4e];
        %881 = (%1910 + %1ef);
        %bd = stack[%881];
        %f25 = "1";
        %730 = ($sp - %f25);
        %fd = stack[%730];
        %e04 = "0";
        %18d = (%fd + %e04);
        stack[%18d] = %bd;
        %a2a = "3";
        $sp = ($sp - %a2a);
        %9d6 = "1";
        %6f1 = ($sp + %9d6);
        %f45 = stack[%6f1];
        jump %f45;
    }
}

func func.Vec_cap {
    proc #a5c {
        %366 = "3";
        $sp = ($sp + %366);
        %4d3 = "1";
        %01 = "0";
        %2c5 = ($sp - %01);
        %ca5 = stack[%2c5];
        %af = (%ca5 + %4d3);
        %12 = stack[%af];
        %951 = "1";
        %46e = ($sp - %951);
        %acf = stack[%46e];
        %ec3 = "0";
        %bbc = (%acf + %ec3);
        stack[%bbc] = %12;
        %617 = "3";
        $sp = ($sp - %617);
        %45 = "1";
        %a47 = ($sp + %45);
        %673e = stack[%a47];
        jump %673e;
    }
}

func func.Vec_len_mut {
    proc #91b {
        %dd = "3";
        $sp = ($sp + %dd);
        %03 = "2";
        %1af = "0";
        %9b7 = ($sp - %1af);
        %3c4 = stack[%9b7];
        %5b7 = (%3c4 + %03);
        %d5 = "1";
        %2c9 = ($sp - %d5);
        %417 = stack[%2c9];
        %600 = "0";
        %58a = (%417 + %600);
        stack[%58a] = %5b7;
        %d4f = "3";
        $sp = ($sp - %d4f);
        %bcf = "1";
        %715 = ($sp + %bcf);
        %6174 = stack[%715];
        jump %6174;
    }
}

func func.Vec_len {
    proc #60ad {
        %aef = "3";
        $sp = ($sp + %aef);
        %8b3 = "2";
        %3bf = "0";
        %f31 = ($sp - %3bf);
        %cd7 = stack[%f31];
        %fdb = (%cd7 + %8b3);
        %13f = stack[%fdb];
        %c32 = "1";
        %ef7 = ($sp - %c32);
        %155 = stack[%ef7];
        %9e1 = "0";
        %abb = (%155 + %9e1);
        stack[%abb] = %13f;
        %9cf = "3";
        $sp = ($sp - %9cf);
        %cc9 = "1";
        %b70 = ($sp + %cc9);
        %6ef = stack[%b70];
        jump %6ef;
    }
}

func func.Vec_get_mut {
    proc #493 {
        %5f8 = "5";
        $sp = ($sp + %5f8);
        %9d4 = "0";
        %85f = ($sp - %9d4);
        %49c = "2";
        %d7a = ($sp + %49c);
        stack[%d7a] = %85f;
        %18b = "2";
        %6b9 = ($sp - %18b);
        %453 = stack[%6b9];
        %9a7 = "3";
        %bd3 = ($sp + %9a7);
        stack[%bd3] = %453;
        %8a8 = "1";
        %7ce = ($sp + %8a8);
        %7b1 = #d36;
        stack[%7ce] = %7b1;
        %00 = #bc4;
        jump %00;
    }

    proc #d36 {
        %f78 = "0";
        %d1 = ($sp - %f78);
        %3d39 = stack[%d1];
        %5a5 = "1";
        %305 = ($sp - %5a5);
        %1e4a = stack[%305];
        %ab7 = (%3d39 + %1e4a);
        %421 = "3";
        %f84 = ($sp - %421);
        %bd4 = stack[%f84];
        %0f6 = "0";
        %01f = (%bd4 + %0f6);
        stack[%01f] = %ab7;
        %b5c = "5";
        $sp = ($sp - %b5c);
        %5f1 = "1";
        %1f2 = ($sp + %5f1);
        %7cd = stack[%1f2];
        jump %7cd;
    }
}

func func.Vec_get {
    proc #fc00 {
        %cfe = "5";
        $sp = ($sp + %cfe);
        %100 = "0";
        %95a = ($sp - %100);
        %3ca = "2";
        %40e = ($sp + %3ca);
        stack[%40e] = %95a;
        %82 = "2";
        %853 = ($sp - %82);
        %9de = stack[%853];
        %3ab = "3";
        %da3 = ($sp + %3ab);
        stack[%da3] = %9de;
        %d11 = "1";
        %a44 = ($sp - %d11);
        %2a3 = stack[%a44];
        %085 = "4";
        %7f9 = ($sp + %085);
        stack[%7f9] = %2a3;
        %5c1 = "1";
        %24d = ($sp + %5c1);
        %1f0 = #7f96;
        stack[%24d] = %1f0;
        %8c9 = #493;
        jump %8c9;
    }

    proc #7f96 {
        %e1a = "0";
        %ed3 = ($sp - %e1a);
        %148 = stack[%ed3];
        %63c = stack[%148];
        %1a9 = "3";
        %a52 = ($sp - %1a9);
        %de6 = stack[%a52];
        %8f4 = "0";
        %fe7 = (%de6 + %8f4);
        stack[%fe7] = %63c;
        %4f4 = "5";
        $sp = ($sp - %4f4);
        %fa9 = "1";
        %f06 = ($sp + %fa9);
        %f27 = stack[%f06];
        jump %f27;
    }
}

func func.Vec_push {
    proc #a3 {
        %e3a = "5";
        $sp = ($sp + %e3a);
        %faf = "1";
        %108 = ($sp - %faf);
        %254 = "2";
        %826 = ($sp + %254);
        stack[%826] = %108;
        %565 = "3";
        %58e = ($sp - %565);
        %f9e = stack[%58e];
        %ad8 = "3";
        %854f = ($sp + %ad8);
        stack[%854f] = %f9e;
        %452 = "1";
        %8b9 = ($sp + %452);
        %d43 = #8f48;
        stack[%8b9] = %d43;
        %66e = #91b;
        jump %66e;
    }

    proc #8f48 {
        %937 = "0";
        %3a6 = ($sp - %937);
        %bcd = "2";
        %aa = ($sp + %bcd);
        stack[%aa] = %3a6;
        %6cf6 = "3";
        %4c = ($sp - %6cf6);
        %f80 = stack[%4c];
        %8fc = "3";
        %b9 = ($sp + %8fc);
        stack[%b9] = %f80;
        %97b = "1";
        %4d1 = ($sp - %97b);
        %d2 = stack[%4d1];
        %1918 = stack[%d2];
        %dd5 = "4";
        %49e = ($sp + %dd5);
        stack[%49e] = %1918;
        %232e = "1";
        %c47 = ($sp + %232e);
        %2f8 = #ef2;
        stack[%c47] = %2f8;
        %1eb = #493;
        jump %1eb;
    }

    proc #ef2 {
        %70d = "2";
        %295 = ($sp - %70d);
        %939 = stack[%295];
        %052 = "0";
        %894 = ($sp - %052);
        %3a7 = stack[%894];
        %35e = "0";
        %77a = (%3a7 + %35e);
        stack[%77a] = %939;
        %442 = "1";
        %e15 = ($sp - %442);
        %8bb = stack[%e15];
        %ade = stack[%8bb];
        %3308 = "1";
        %f41 = (%ade + %3308);
        %86 = "1";
        %1b = ($sp - %86);
        %246 = stack[%1b];
        %2ab = "0";
        %a74 = (%246 + %2ab);
        stack[%a74] = %f41;
        %4f7 = "5";
        $sp = ($sp - %4f7);
        %4c9 = "1";
        %636 = ($sp + %4c9);
        %81d = stack[%636];
        jump %81d;
    }
}

func func.Vec_pop {
    proc #e80e {
        %b64 = "5";
        $sp = ($sp + %b64);
        %6c1 = "1";
        %c78 = ($sp - %6c1);
        %fa2 = "2";
        %71f = ($sp + %fa2);
        stack[%71f] = %c78;
        %41f = "2";
        %ba4 = ($sp - %41f);
        %ac0 = stack[%ba4];
        %462 = "3";
        %8bc = ($sp + %462);
        stack[%8bc] = %ac0;
        %dd56 = "1";
        %3fa = ($sp + %dd56);
        %f6d = #dac;
        stack[%3fa] = %f6d;
        %f46 = #91b;
        jump %f46;
    }

    proc #dac {
        %1e0 = "0";
        %325 = ($sp - %1e0);
        %161 = "2";
        %c89 = ($sp + %161);
        stack[%c89] = %325;
        %8ba = "2";
        %c02 = ($sp - %8ba);
        %8ec = stack[%c02];
        %b59 = "3";
        %655 = ($sp + %b59);
        stack[%655] = %8ec;
        %876 = "1";
        %f8c = ($sp - %876);
        %9a0 = stack[%f8c];
        %b8 = stack[%9a0];
        %124 = "1";
        %d76 = (%b8 - %124);
        %5b0 = "4";
        %87a = ($sp + %5b0);
        stack[%87a] = %d76;
        %5278 = "1";
        %cce = ($sp + %5278);
        %1b7 = #9c5;
        stack[%cce] = %1b7;
        %e9a = #fc00;
        jump %e9a;
    }

    proc #9c5 {
        %1f9 = "0";
        %c38 = ($sp - %1f9);
        %28a = stack[%c38];
        %e13 = "3";
        %37a = ($sp - %e13);
        %8541 = stack[%37a];
        %b32 = "0";
        %0ed = (%8541 + %b32);
        stack[%0ed] = %28a;
        %b8c = "1";
        %1c3 = ($sp - %b8c);
        %095 = stack[%1c3];
        %bc3 = stack[%095];
        %53e = "1";
        %bbe = (%bc3 - %53e);
        %93f5 = "1";
        %6d0 = ($sp - %93f5);
        %f09 = stack[%6d0];
        %9e6 = "0";
        %40c = (%f09 + %9e6);
        stack[%40c] = %bbe;
        %21ab = "5";
        $sp = ($sp - %21ab);
        %ad4 = "1";
        %d9f = ($sp + %ad4);
        %8af = stack[%d9f];
        jump %8af;
    }
}

func func.Vec_insert {
    proc #0e7 {
        %d42 = "8";
        $sp = ($sp + %d42);
        %1b4 = "2";
        %6ee = ($sp - %1b4);
        %f95 = "2";
        %056 = ($sp + %f95);
        stack[%056] = %6ee;
        %3f2 = "6";
        %09c = ($sp - %3f2);
        %b5cb = stack[%09c];
        %7fa = "3";
        %fc6 = ($sp + %7fa);
        stack[%fc6] = %b5cb;
        %620 = "1";
        %893 = ($sp + %620);
        %1c5 = #9db;
        stack[%893] = %1c5;
        %d51 = #60ad;
        jump %d51;
    }

    proc #9db {
        %182 = "2";
        %737 = ($sp - %182);
        %9e4 = stack[%737];
        %81db = "3";
        %f99 = ($sp - %81db);
        %00f = "0";
        %7bc = (%f99 + %00f);
        stack[%7bc] = %9e4;
        %d9b = "6";
        %200 = ($sp - %d9b);
        %043 = stack[%200];
        %10d = "2";
        %3db = ($sp + %10d);
        stack[%3db] = %043;
        %9b8 = "0";
        %c30 = "3";
        %aa7 = ($sp + %c30);
        stack[%aa7] = %9b8;
        %bda = "1";
        %1a84 = ($sp + %bda);
        %3f0 = #db0;
        stack[%1a84] = %3f0;
        %ec3a = #a3;
        jump %ec3a;
    }

    proc #db0 {
        %5ac = #df7;
        jump %5ac;
    }

    proc #05b {
        %b83 = "1";
        %c7d = ($sp - %b83);
        %2c54 = "2";
        %48b = ($sp + %2c54);
        stack[%48b] = %c7d;
        %437 = "6";
        %7fb5 = ($sp - %437);
        %7fd = stack[%7fb5];
        %0c7 = "3";
        %918 = ($sp + %0c7);
        stack[%918] = %7fd;
        %6b8 = "4";
        %1a0 = ($sp - %6b8);
        %6e9 = stack[%1a0];
        %b77 = "4";
        %193 = ($sp + %b77);
        stack[%193] = %6e9;
        %f90 = "1";
        %50 = ($sp + %f90);
        %508 = #51;
        stack[%50] = %508;
        %fef = #493;
        jump %fef;
    }

    proc #51 {
        %ca3 = "5";
        %a2f = ($sp - %ca3);
        %fcf = stack[%a2f];
        %c2b = "1";
        %d22 = ($sp - %c2b);
        %3d1 = stack[%d22];
        %c8d = "0";
        %b5d = (%3d1 + %c8d);
        stack[%b5d] = %fcf;
        %0528 = "8";
        $sp = ($sp - %0528);
        %b15 = "1";
        %180 = ($sp + %b15);
        %3063 = stack[%180];
        jump %3063;
    }

    proc #ec0 {
        %23d = "1";
        %ac7 = ($sp - %23d);
        %f6e = "2";
        %c67 = ($sp + %f6e);
        stack[%c67] = %ac7;
        %3f4 = "6";
        %9b2 = ($sp - %3f4);
        %6a1 = stack[%9b2];
        %957 = "3";
        %bf9 = ($sp + %957);
        stack[%bf9] = %6a1;
        %70e = "3";
        %abd = ($sp - %70e);
        %d8 = stack[%abd];
        %98b = "4";
        %8e3 = ($sp + %98b);
        stack[%8e3] = %d8;
        %9b5 = "1";
        %a08 = ($sp + %9b5);
        %8fd = #bdb;
        stack[%a08] = %8fd;
        %d2e = #493;
        jump %d2e;
    }

    proc #bdb {
        %39 = "0";
        %558c = ($sp - %39);
        %678 = "2";
        %2a6 = ($sp + %678);
        stack[%2a6] = %558c;
        %149 = "6";
        %32b = ($sp - %149);
        %ed2 = stack[%32b];
        %acc = "3";
        %dbc = ($sp + %acc);
        stack[%dbc] = %ed2;
        %23c = "3";
        %dfd = ($sp - %23c);
        %8c7 = stack[%dfd];
        %769 = "1";
        %e4a = (%8c7 + %769);
        %bdad = "4";
        %47e = ($sp + %bdad);
        stack[%47e] = %e4a;
        %6ea = "1";
        %17 = ($sp + %6ea);
        %116 = #aa6;
        stack[%17] = %116;
        %8de = #493;
        jump %8de;
    }

    proc #aa6 {
        %ac1 = "1";
        %a4cc = ($sp - %ac1);
        %0b = stack[%a4cc];
        %01f3 = stack[%0b];
        %abc = "0";
        %270 = ($sp - %abc);
        %c9d = stack[%270];
        %c00 = "0";
        %3d8 = (%c9d + %c00);
        stack[%3d8] = %01f3;
        %846 = "3";
        %472 = ($sp - %846);
        %7f1 = stack[%472];
        %d8e = "1";
        %980 = (%7f1 - %d8e);
        %c68 = "3";
        %e2f = ($sp - %c68);
        %0ef = "0";
        %2f3d = (%e2f + %0ef);
        stack[%2f3d] = %980;
        %45d = #df7;
        jump %45d;
    }

    proc #df7 {
        %4e1 = "3";
        %7e5 = ($sp - %4e1);
        %a72 = stack[%7e5];
        %815 = "4";
        %0e2 = ($sp - %815);
        %320 = stack[%0e2];
        %328 = (!(%a72 < %320));
        %0c6 = #ec0;
        %08a = #05b;
        if %328 then jump %0c6 else jump %08a;
    }
}

func func.Vec_remove {
    proc #24 {
        %e6d = "8";
        $sp = ($sp + %e6d);
        %1486 = "6";
        %acc0 = ($sp - %1486);
        %6db = stack[%acc0];
        %164 = "2";
        %5a4 = ($sp + %164);
        stack[%5a4] = %6db;
        %a61 = "5";
        %c4c = ($sp - %a61);
        %7f3 = stack[%c4c];
        %4e5 = "3";
        %8ee = ($sp + %4e5);
        stack[%8ee] = %7f3;
        %3d6 = "4";
        %4da = ($sp - %3d6);
        %435 = stack[%4da];
        %102 = "4";
        %0fd = ($sp + %102);
        stack[%0fd] = %435;
        %92b = "1";
        %96 = ($sp + %92b);
        %592 = #dfc;
        stack[%96] = %592;
        %4a8 = #fc00;
        jump %4a8;
    }

    proc #dfc {
        %87f = "4";
        %70f = ($sp - %87f);
        %a4cd = stack[%70f];
        %d2f = "3";
        %eb9 = ($sp - %d2f);
        %e94 = "0";
        %0985 = (%eb9 + %e94);
        stack[%0985] = %a4cd;
        %55c = "0";
        %a01 = ($sp - %55c);
        %4e5d = "2";
        %eec = ($sp + %4e5d);
        stack[%eec] = %a01;
        %21ab4 = "5";
        %efbe = ($sp - %21ab4);
        %e8f = stack[%efbe];
        %b87 = "3";
        %f43 = ($sp + %b87);
        stack[%f43] = %e8f;
        %8e2 = "1";
        %5994 = ($sp + %8e2);
        %26 = #71c;
        stack[%5994] = %26;
        %194 = #91b;
        jump %194;
    }

    proc #71c {
        %245 = "0";
        %b71 = ($sp - %245);
        %f108 = stack[%b71];
        %67a = stack[%f108];
        %81b = "1";
        %da0 = (%67a - %81b);
        %9c1 = "0";
        %6dc = ($sp - %9c1);
        %f85 = stack[%6dc];
        %7718 = "0";
        %77ac = (%f85 + %7718);
        stack[%77ac] = %da0;
        %778 = #23e;
        jump %778;
    }

    proc #79f {
        %350 = "8";
        $sp = ($sp - %350);
        %410 = "1";
        %b18 = ($sp + %410);
        %271 = stack[%b18];
        jump %271;
    }

    proc #6d2 {
        %606 = "2";
        %337 = ($sp - %606);
        %31cf = "2";
        %bfc = ($sp + %31cf);
        stack[%bfc] = %337;
        %ba3 = "5";
        %e20 = ($sp - %ba3);
        %d38 = stack[%e20];
        %715d = "3";
        %374 = ($sp + %715d);
        stack[%374] = %d38;
        %d7d = "3";
        %07 = ($sp - %d7d);
        %032 = stack[%07];
        %8b3b = "4";
        %4a18 = ($sp + %8b3b);
        stack[%4a18] = %032;
        %f37 = "1";
        %4d8 = ($sp + %f37);
        %873 = #ca0;
        stack[%4d8] = %873;
        %6052 = #493;
        jump %6052;
    }

    proc #ca0 {
        %212 = "1";
        %8158 = ($sp - %212);
        %80a = "2";
        %3e1 = ($sp + %80a);
        stack[%3e1] = %8158;
        %adf = "5";
        %9ba = ($sp - %adf);
        %43c = stack[%9ba];
        %cd2 = "3";
        %48a = ($sp + %cd2);
        stack[%48a] = %43c;
        %4727 = "3";
        %d88 = ($sp - %4727);
        %a25 = stack[%d88];
        %b4c = "1";
        %ff = (%a25 + %b4c);
        %6af = "4";
        %8c0 = ($sp + %6af);
        stack[%8c0] = %ff;
        %311 = "1";
        %ace = ($sp + %311);
        %848 = #749;
        stack[%ace] = %848;
        %d94 = #493;
        jump %d94;
    }

    proc #749 {
        %a23 = "1";
        %1dc = ($sp - %a23);
        %2b = stack[%1dc];
        %dee = stack[%2b];
        %678e = "2";
        %35e9 = ($sp - %678e);
        %161f = stack[%35e9];
        %3b8 = "0";
        %90f = (%161f + %3b8);
        stack[%90f] = %dee;
        %ead = "3";
        %392 = ($sp - %ead);
        %e8e = stack[%392];
        %5ad = "1";
        %57 = (%e8e + %5ad);
        %b40 = "3";
        %087 = ($sp - %b40);
        %6c16 = "0";
        %e4c = (%087 + %6c16);
        stack[%e4c] = %57;
        %99f = #23e;
        jump %99f;
    }

    proc #23e {
        %dab = "3";
        %a7b = ($sp - %dab);
        %4be = stack[%a7b];
        %ab2 = "0";
        %3d7 = ($sp - %ab2);
        %1d9 = stack[%3d7];
        %04c = stack[%1d9];
        %c80 = (%4be < %04c);
        %7e1 = #6d2;
        %cb7 = #79f;
        if %c80 then jump %7e1 else jump %cb7;
    }
}

func func.Vec_clear {
    proc #628 {
        %62a = "3";
        $sp = ($sp + %62a);
        %f0c = "0";
        %dee0 = ($sp - %f0c);
        %063 = "2";
        %74b = ($sp + %063);
        stack[%74b] = %dee0;
        %3bf4 = "1";
        %df9 = ($sp - %3bf4);
        %26e = stack[%df9];
        %659 = "3";
        %0859 = ($sp + %659);
        stack[%0859] = %26e;
        %e5c = "1";
        %ba3e = ($sp + %e5c);
        %330a = #fec;
        stack[%ba3e] = %330a;
        %3bd = #91b;
        jump %3bd;
    }

    proc #fec {
        %41c = "0";
        %04b = "0";
        %8f8 = ($sp - %04b);
        %ad83 = stack[%8f8];
        %2be = "0";
        %bd1 = (%ad83 + %2be);
        stack[%bd1] = %41c;
        %98e = "3";
        $sp = ($sp - %98e);
        %6287 = "1";
        %ece = ($sp + %6287);
        %4a2 = stack[%ece];
        jump %4a2;
    }
}

func func.Vec_to_str {
    proc #996 {
        %0cc = "7";
        $sp = ($sp + %0cc);
        %1e03 = "[";
        %585 = "3";
        %843 = ($sp - %585);
        %4e4 = "0";
        %549 = (%843 + %4e4);
        stack[%549] = %1e03;
        %5d8 = "2";
        %a49 = ($sp - %5d8);
        %039 = "2";
        %b0a = ($sp + %039);
        stack[%b0a] = %a49;
        %5f9 = "4";
        %9fa = ($sp - %5f9);
        %cce4 = stack[%9fa];
        %64a = "3";
        %ced = ($sp + %64a);
        stack[%ced] = %cce4;
        %656 = "1";
        %5d6 = ($sp + %656);
        %89b3 = #e65;
        stack[%5d6] = %89b3;
        %dd53 = #60ad;
        jump %dd53;
    }

    proc #e65 {
        %1d2b = "0";
        %1d0 = "1";
        %7a0 = ($sp - %1d0);
        %641 = "0";
        %923e = (%7a0 + %641);
        stack[%923e] = %1d2b;
        %2fa = #285;
        jump %2fa;
    }

    proc #d37 {
        %427 = "3";
        %953 = ($sp - %427);
        %05df = stack[%953];
        %7e6 = "]";
        %344 = (%05df ~ %7e6);
        %71c8 = "3";
        %7782 = ($sp - %71c8);
        %0a9 = "0";
        %1b9 = (%7782 + %0a9);
        stack[%1b9] = %344;
        %729 = "3";
        %25c = ($sp - %729);
        %2cc = stack[%25c];
        %bf8 = "5";
        %fb2 = ($sp - %bf8);
        %21b = stack[%fb2];
        %0e0 = "0";
        %d5e = (%21b + %0e0);
        stack[%d5e] = %2cc;
        %51c = "7";
        $sp = ($sp - %51c);
        %1489 = "1";
        %111 = ($sp + %1489);
        %4995 = stack[%111];
        jump %4995;
    }

    proc #574 {
        %2fd = "0";
        %425 = ($sp - %2fd);
        %2cb = "2";
        %9df = ($sp + %2cb);
        stack[%9df] = %425;
        %b73 = "4";
        %a15 = ($sp - %b73);
        %56c = stack[%a15];
        %e78 = "3";
        %541 = ($sp + %e78);
        stack[%541] = %56c;
        %1d3 = "1";
        %aaa = ($sp - %1d3);
        %9bc = stack[%aaa];
        %f67 = "4";
        %83a = ($sp + %f67);
        stack[%83a] = %9bc;
        %28e = "1";
        %6d00 = ($sp + %28e);
        %79d = #3cd;
        stack[%6d00] = %79d;
        %f86 = #fc00;
        jump %f86;
    }

    proc #3cd {
        %7f2 = "3";
        %18d3 = ($sp - %7f2);
        %4e0 = stack[%18d3];
        %1e25 = "0";
        %1d1 = ($sp - %1e25);
        %6a7 = stack[%1d1];
        %dae = (%4e0 ~ %6a7);
        %a524 = "3";
        %6cf7 = ($sp - %a524);
        %ac5 = "0";
        %c14 = (%6cf7 + %ac5);
        stack[%c14] = %dae;
        %bce = "1";
        %dc8 = ($sp - %bce);
        %12c = stack[%dc8];
        %6eb = "2";
        %ae1 = ($sp - %6eb);
        %5a1 = stack[%ae1];
        %6e2 = "1";
        %ecf = (%5a1 - %6e2);
        %3b0 = (!(%12c == %ecf));
        %521 = #d79;
        %203 = #9cd;
        if %3b0 then jump %521 else jump %203;
    }

    proc #9cd {
        %502 = "1";
        %3f5 = ($sp - %502);
        %2b0 = stack[%3f5];
        %f64 = "1";
        %1160 = (%2b0 + %f64);
        %094 = "1";
        %e655 = ($sp - %094);
        %969 = "0";
        %966 = (%e655 + %969);
        stack[%966] = %1160;
        %aae = #285;
        jump %aae;
    }

    proc #d79 {
        %5d86 = "3";
        %53ed = ($sp - %5d86);
        %8c6 = stack[%53ed];
        %a62 = ", ";
        %8cc = (%8c6 ~ %a62);
        %2ab8 = "3";
        %0b3 = ($sp - %2ab8);
        %b2 = "0";
        %152 = (%0b3 + %b2);
        stack[%152] = %8cc;
        %c1a = #9cd;
        jump %c1a;
    }

    proc #285 {
        %bd8 = "1";
        %15b = ($sp - %bd8);
        %35a = stack[%15b];
        %6a6 = "2";
        %c91 = ($sp - %6a6);
        %aaee = stack[%c91];
        %916 = (%35a < %aaee);
        %9b25 = #574;
        %083 = #d37;
        if %916 then jump %9b25 else jump %083;
    }
}

func func.out {
    proc #ad {
        %995 = "2";
        $sp = ($sp + %995);
        %e38 = "0";
        %be6 = ($sp - %e38);
        %03f = stack[%be6];
        out %03f;
        %631 = "2";
        $sp = ($sp - %631);
        %691 = "1";
        %142 = ($sp + %691);
        %9a4 = stack[%142];
        jump %9a4;
    }
}

func func.in {
    proc #7d2 {
        %560 = "3";
        $sp = ($sp + %560);
        %e4a2 = "0";
        %dfb = ($sp - %e4a2);
        in;
        stack[%dfb] = $answer;
        %938 = "0";
        %d4f1 = ($sp - %938);
        %b835 = stack[%d4f1];
        %70b = "1";
        %b3ef = ($sp - %70b);
        %5ce = stack[%b3ef];
        %ac14 = "0";
        %ab4 = (%5ce + %ac14);
        stack[%ab4] = %b835;
        %986 = "3";
        $sp = ($sp - %986);
        %8b0 = "1";
        %577 = ($sp + %8b0);
        %1d4 = stack[%577];
        jump %1d4;
    }
}

func func.random_num {
    proc #0d3 {
        %748 = "5";
        $sp = ($sp + %748);
        %0a4 = "0";
        %8d1 = ($sp - %0a4);
        %a2a2 = "0.0";
        %e53 = "1.0";
        stack[%8d1] = (%a2a2 <random> %e53);
        %37d = "2";
        %dfd4 = ($sp - %37d);
        %3024 = stack[%dfd4];
        %1cae = "0";
        %16c = ($sp - %1cae);
        %a5a = stack[%16c];
        %475 = "1";
        %ab42 = ($sp - %475);
        %6bc = stack[%ab42];
        %66d = "2";
        %646 = ($sp - %66d);
        %1a2 = stack[%646];
        %64d = (%6bc - %1a2);
        %653 = (%a5a * %64d);
        %8ac = (%3024 + %653);
        %5f3 = "3";
        %264 = ($sp - %5f3);
        %21e = stack[%264];
        %944 = "0";
        %e3e = (%21e + %944);
        stack[%e3e] = %8ac;
        %972 = "5";
        $sp = ($sp - %972);
        %f3f = "1";
        %9519 = ($sp + %f3f);
        %539 = stack[%9519];
        jump %539;
    }
}

func func.random_int {
    proc #0a2 {
        %abb7 = "5";
        $sp = ($sp + %abb7);
        %5022 = "0";
        %7b90 = ($sp - %5022);
        %62e = "2";
        %9ef = ($sp - %62e);
        %3ca9 = stack[%9ef];
        %475f = "1";
        %64b = ($sp - %475f);
        %9be = stack[%64b];
        stack[%7b90] = (%3ca9 <random> %9be);
        %c35 = "0";
        %58f = ($sp - %c35);
        %2e7 = stack[%58f];
        %ea3 = "3";
        %17c = ($sp - %ea3);
        %63b = stack[%17c];
        %1d98 = "0";
        %159 = (%63b + %1d98);
        stack[%159] = %2e7;
        %ad1 = "5";
        $sp = ($sp - %ad1);
        %9dfb = "1";
        %837 = ($sp + %9dfb);
        %017 = stack[%837];
        jump %017;
    }
}

func func.random_uint {
    proc #f551 {
        %4105 = "5";
        $sp = ($sp + %4105);
        %906 = "0";
        %443 = ($sp - %906);
        %b0ad = "2";
        %769f = ($sp - %b0ad);
        %f56 = stack[%769f];
        %ccc = "1";
        %6d7 = ($sp - %ccc);
        %734 = stack[%6d7];
        stack[%443] = (%f56 <random> %734);
        %b356 = "0";
        %7e2 = ($sp - %b356);
        %008 = stack[%7e2];
        %901 = "3";
        %33e = ($sp - %901);
        %65f = stack[%33e];
        %c29 = "0";
        %edc = (%65f + %c29);
        stack[%edc] = %008;
        %fbe = "5";
        $sp = ($sp - %fbe);
        %798 = "1";
        %e61 = ($sp + %798);
        %4538 = stack[%e61];
        jump %4538;
    }
}